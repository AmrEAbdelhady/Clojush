Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 2000
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x579dde54 clojush.problems.software.smallest$fn__7461@579dde54] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x6b899971 clojush.instructions.tag$tag_instruction_erc$fn__2160@6b899971] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x7cec3975 clojush.instructions.tag$tagged_instruction_erc$fn__2166@7cec3975] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x7e2a76be clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@7e2a76be]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
max-error = 1
max-generations = 2000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x417bfebd clojush.problems.software.smallest$smallest_initial_report@417bfebd]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_report@2a4cb8ae]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[99 20 99 99] 20] [[-89 -47 -47 -47] -89] [[-90 -90 52 -90] -90] [[-13 49 -13 -13] -13] [[-47 -47 57 -47] -47] [[64 64 64 69] 64] [[6 6 6 34] 6] [[49 -67 49 49] -67] [[-61 -61 -42 -61] -61] [[30 48 48 48] 30] [(-29 -29 -29 -29) -29] [(87 87 87 87) 87] [(3 3 3 3) 3] [(-51 -51 -51 -51) -51] [(-54 -54 -54 -54) -54] [(68 53 44 62) 44] [(100 78 96 34) 34] [(38 76 23 54) 23] [(50 44 87 46) 44] [(23 56 83 90) 23] [(48 51 46 73) 46] [(16 50 74 96) 16] [(40 74 89 70) 40] [(23 52 16 59) 16] [(6 74 95 48) 6] [(17 78 9 3) 3] [(45 69 36 68) 36] [(91 64 58 81) 58] [(0 61 98 28) 0] [(49 27 61 20) 20] [(16 60 100 46) 16] [(0 66 91 4) 0] [(83 78 24 19) 19] [(57 1 25 27) 1] [(51 42 43 69) 42] [(-41 -36 100 74) -41] [(-81 58 19 -31) -81] [(-37 -17 32 17) -37] [(32 16 49 97) 16] [(95 34 -6 32) -6] [(-69 -50 52 55) -69] [(-19 69 -75 65) -75] [(-38 -46 77 -33) -46] [(76 3 90 -100) -100] [(100 34 -89 -76) -89] [(-91 9 -84 2) -91] [(31 30 29 -59) -59] [(-24 84 -15 2) -24] [(79 -46 -71 10) -71] [(-59 -81 13 -100) -100] [(-43 -28 31 -9) -43] [(27 -33 -16 -43) -43] [(-35 88 80 98) -35] [(-31 -78 9 73) -78] [(-30 34 88 86) -30] [(-62 96 18 -59) -62] [(85 -26 88 30) -26] [(-41 -37 -9 -63) -63] [(-12 63 -98 -33) -98] [(-42 -12 6 -15) -42] [(12 2 18 -36) -36] [(63 -64 11 11) -64] [(26 3 69 -73) -73] [(-74 90 -58 15) -74] [(-12 46 -44 -97) -97] [(-59 84 -31 81) -59] [(-66 25 -76 60) -76] [(-29 41 90 -18) -29] [(-34 8 -12 -12) -34] [(47 29 -45 52) -45] [(84 -94 59 79) -94] [(-94 -52 97 55) -94] [(-71 70 37 -61) -71] [(-3 -82 -38 -30) -82] [(-84 -7 17 -41) -84] [(97 81 45 -45) -45] [(49 -62 16 -90) -90] [(15 -28 43 82) -28] [(62 83 -32 58) -32] [(-39 -98 -72 61) -98] [(-18 1 -82 81) -82] [(-12 36 -56 45) -56] [(8 -58 -73 93) -73] [(19 -18 -29 -34) -34] [(-29 98 -84 53) -84] [(-76 -42 -18 90) -76] [(0 29 -48 22) -48] [(66 26 -60 -71) -71] [(-53 -84 -10 -29) -84] [(20 17 98 -31) -31] [(-65 -66 32 -73) -73] [(69 -7 -37 18) -37] [(-1 -9 -86 -53) -86] [(28 -55 87 15) -55] [(-56 -89 30 -92) -92])
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[99 20 99 99] 20]
Train Case:   6 | Input/Output: [[-89 -47 -47 -47] -89]
Train Case:   7 | Input/Output: [[-90 -90 52 -90] -90]
Train Case:   8 | Input/Output: [[-13 49 -13 -13] -13]
Train Case:   9 | Input/Output: [[-47 -47 57 -47] -47]
Train Case:  10 | Input/Output: [[64 64 64 69] 64]
Train Case:  11 | Input/Output: [[6 6 6 34] 6]
Train Case:  12 | Input/Output: [[49 -67 49 49] -67]
Train Case:  13 | Input/Output: [[-61 -61 -42 -61] -61]
Train Case:  14 | Input/Output: [[30 48 48 48] 30]
Train Case:  15 | Input/Output: [(-29 -29 -29 -29) -29]
Train Case:  16 | Input/Output: [(87 87 87 87) 87]
Train Case:  17 | Input/Output: [(3 3 3 3) 3]
Train Case:  18 | Input/Output: [(-51 -51 -51 -51) -51]
Train Case:  19 | Input/Output: [(-54 -54 -54 -54) -54]
Train Case:  20 | Input/Output: [(68 53 44 62) 44]
Train Case:  21 | Input/Output: [(100 78 96 34) 34]
Train Case:  22 | Input/Output: [(38 76 23 54) 23]
Train Case:  23 | Input/Output: [(50 44 87 46) 44]
Train Case:  24 | Input/Output: [(23 56 83 90) 23]
Train Case:  25 | Input/Output: [(48 51 46 73) 46]
Train Case:  26 | Input/Output: [(16 50 74 96) 16]
Train Case:  27 | Input/Output: [(40 74 89 70) 40]
Train Case:  28 | Input/Output: [(23 52 16 59) 16]
Train Case:  29 | Input/Output: [(6 74 95 48) 6]
Train Case:  30 | Input/Output: [(17 78 9 3) 3]
Train Case:  31 | Input/Output: [(45 69 36 68) 36]
Train Case:  32 | Input/Output: [(91 64 58 81) 58]
Train Case:  33 | Input/Output: [(0 61 98 28) 0]
Train Case:  34 | Input/Output: [(49 27 61 20) 20]
Train Case:  35 | Input/Output: [(16 60 100 46) 16]
Train Case:  36 | Input/Output: [(0 66 91 4) 0]
Train Case:  37 | Input/Output: [(83 78 24 19) 19]
Train Case:  38 | Input/Output: [(57 1 25 27) 1]
Train Case:  39 | Input/Output: [(51 42 43 69) 42]
Train Case:  40 | Input/Output: [(-41 -36 100 74) -41]
Train Case:  41 | Input/Output: [(-81 58 19 -31) -81]
Train Case:  42 | Input/Output: [(-37 -17 32 17) -37]
Train Case:  43 | Input/Output: [(32 16 49 97) 16]
Train Case:  44 | Input/Output: [(95 34 -6 32) -6]
Train Case:  45 | Input/Output: [(-69 -50 52 55) -69]
Train Case:  46 | Input/Output: [(-19 69 -75 65) -75]
Train Case:  47 | Input/Output: [(-38 -46 77 -33) -46]
Train Case:  48 | Input/Output: [(76 3 90 -100) -100]
Train Case:  49 | Input/Output: [(100 34 -89 -76) -89]
Train Case:  50 | Input/Output: [(-91 9 -84 2) -91]
Train Case:  51 | Input/Output: [(31 30 29 -59) -59]
Train Case:  52 | Input/Output: [(-24 84 -15 2) -24]
Train Case:  53 | Input/Output: [(79 -46 -71 10) -71]
Train Case:  54 | Input/Output: [(-59 -81 13 -100) -100]
Train Case:  55 | Input/Output: [(-43 -28 31 -9) -43]
Train Case:  56 | Input/Output: [(27 -33 -16 -43) -43]
Train Case:  57 | Input/Output: [(-35 88 80 98) -35]
Train Case:  58 | Input/Output: [(-31 -78 9 73) -78]
Train Case:  59 | Input/Output: [(-30 34 88 86) -30]
Train Case:  60 | Input/Output: [(-62 96 18 -59) -62]
Train Case:  61 | Input/Output: [(85 -26 88 30) -26]
Train Case:  62 | Input/Output: [(-41 -37 -9 -63) -63]
Train Case:  63 | Input/Output: [(-12 63 -98 -33) -98]
Train Case:  64 | Input/Output: [(-42 -12 6 -15) -42]
Train Case:  65 | Input/Output: [(12 2 18 -36) -36]
Train Case:  66 | Input/Output: [(63 -64 11 11) -64]
Train Case:  67 | Input/Output: [(26 3 69 -73) -73]
Train Case:  68 | Input/Output: [(-74 90 -58 15) -74]
Train Case:  69 | Input/Output: [(-12 46 -44 -97) -97]
Train Case:  70 | Input/Output: [(-59 84 -31 81) -59]
Train Case:  71 | Input/Output: [(-66 25 -76 60) -76]
Train Case:  72 | Input/Output: [(-29 41 90 -18) -29]
Train Case:  73 | Input/Output: [(-34 8 -12 -12) -34]
Train Case:  74 | Input/Output: [(47 29 -45 52) -45]
Train Case:  75 | Input/Output: [(84 -94 59 79) -94]
Train Case:  76 | Input/Output: [(-94 -52 97 55) -94]
Train Case:  77 | Input/Output: [(-71 70 37 -61) -71]
Train Case:  78 | Input/Output: [(-3 -82 -38 -30) -82]
Train Case:  79 | Input/Output: [(-84 -7 17 -41) -84]
Train Case:  80 | Input/Output: [(97 81 45 -45) -45]
Train Case:  81 | Input/Output: [(49 -62 16 -90) -90]
Train Case:  82 | Input/Output: [(15 -28 43 82) -28]
Train Case:  83 | Input/Output: [(62 83 -32 58) -32]
Train Case:  84 | Input/Output: [(-39 -98 -72 61) -98]
Train Case:  85 | Input/Output: [(-18 1 -82 81) -82]
Train Case:  86 | Input/Output: [(-12 36 -56 45) -56]
Train Case:  87 | Input/Output: [(8 -58 -73 93) -73]
Train Case:  88 | Input/Output: [(19 -18 -29 -34) -34]
Train Case:  89 | Input/Output: [(-29 98 -84 53) -84]
Train Case:  90 | Input/Output: [(-76 -42 -18 90) -76]
Train Case:  91 | Input/Output: [(0 29 -48 22) -48]
Train Case:  92 | Input/Output: [(66 26 -60 -71) -71]
Train Case:  93 | Input/Output: [(-53 -84 -10 -29) -84]
Train Case:  94 | Input/Output: [(20 17 98 -31) -31]
Train Case:  95 | Input/Output: [(-65 -66 32 -73) -73]
Train Case:  96 | Input/Output: [(69 -7 -37 18) -37]
Train Case:  97 | Input/Output: [(-1 -9 -86 -53) -86]
Train Case:  98 | Input/Output: [(28 -55 87 15) -55]
Train Case:  99 | Input/Output: [(-56 -89 30 -92) -92]
Test Case:   0 | Input/Output: [[86 28 28 28] 28]
Test Case:   1 | Input/Output: [[-62 24 24 24] -62]
Test Case:   2 | Input/Output: [[45 -99 45 45] -99]
Test Case:   3 | Input/Output: [[1 5 1 1] 1]
Test Case:   4 | Input/Output: [[-66 -66 -39 -66] -66]
Test Case:   5 | Input/Output: [[-45 -45 -45 -93] -93]
Test Case:   6 | Input/Output: [[-30 57 57 57] -30]
Test Case:   7 | Input/Output: [[-7 55 55 55] -7]
Test Case:   8 | Input/Output: [[-88 19 -88 -88] -88]
Test Case:   9 | Input/Output: [[46 46 46 77] 46]
Test Case:  10 | Input/Output: [[-19 -19 -19 33] -19]
Test Case:  11 | Input/Output: [[10 10 10 42] 10]
Test Case:  12 | Input/Output: [[11 67 67 67] 11]
Test Case:  13 | Input/Output: [[-38 -38 -64 -38] -64]
Test Case:  14 | Input/Output: [[-39 -62 -39 -39] -62]
Test Case:  15 | Input/Output: [[-2 55 -2 -2] -2]
Test Case:  16 | Input/Output: [[-49 -49 -26 -49] -49]
Test Case:  17 | Input/Output: [[-89 -89 -89 4] -89]
Test Case:  18 | Input/Output: [[-72 20 -72 -72] -72]
Test Case:  19 | Input/Output: [[76 76 2 76] 2]
Test Case:  20 | Input/Output: [[-6 -6 77 -6] -6]
Test Case:  21 | Input/Output: [[25 25 25 62] 25]
Test Case:  22 | Input/Output: [[-7 -7 -52 -7] -52]
Test Case:  23 | Input/Output: [[69 51 51 51] 51]
Test Case:  24 | Input/Output: [[-1 -1 -10 -1] -10]
Test Case:  25 | Input/Output: [[45 45 55 45] 45]
Test Case:  26 | Input/Output: [[-55 22 -55 -55] -55]
Test Case:  27 | Input/Output: [[68 68 68 4] 4]
Test Case:  28 | Input/Output: [[74 23 74 74] 23]
Test Case:  29 | Input/Output: [[-96 -96 -96 5] -96]
Test Case:  30 | Input/Output: [[17 92 92 92] 17]
Test Case:  31 | Input/Output: [[-2 -7 -7 -7] -7]
Test Case:  32 | Input/Output: [[-40 -40 34 -40] -40]
Test Case:  33 | Input/Output: [[-41 82 -41 -41] -41]
Test Case:  34 | Input/Output: [[27 13 13 13] 13]
Test Case:  35 | Input/Output: [[99 -69 -69 -69] -69]
Test Case:  36 | Input/Output: [[21 12 21 21] 12]
Test Case:  37 | Input/Output: [[36 4 4 4] 4]
Test Case:  38 | Input/Output: [[-86 -10 -10 -10] -86]
Test Case:  39 | Input/Output: [[-58 -78 -78 -78] -78]
Test Case:  40 | Input/Output: [[-85 -85 -85 4] -85]
Test Case:  41 | Input/Output: [[-100 -100 -100 71] -100]
Test Case:  42 | Input/Output: [[-53 -39 -53 -53] -53]
Test Case:  43 | Input/Output: [[-92 -92 -92 21] -92]
Test Case:  44 | Input/Output: [[-61 -61 25 -61] -61]
Test Case:  45 | Input/Output: [[40 40 18 40] 18]
Test Case:  46 | Input/Output: [[-9 -9 -9 77] -9]
Test Case:  47 | Input/Output: [[30 30 30 -90] -90]
Test Case:  48 | Input/Output: [[83 83 83 -77] -77]
Test Case:  49 | Input/Output: [[23 -66 -66 -66] -66]
Test Case:  50 | Input/Output: [[-37 -35 -35 -35] -37]
Test Case:  51 | Input/Output: [[38 38 38 98] 38]
Test Case:  52 | Input/Output: [[39 76 39 39] 39]
Test Case:  53 | Input/Output: [[-68 13 13 13] -68]
Test Case:  54 | Input/Output: [[99 99 99 81] 81]
Test Case:  55 | Input/Output: [[45 -15 45 45] -15]
Test Case:  56 | Input/Output: [[-47 -17 -47 -47] -47]
Test Case:  57 | Input/Output: [[1 1 53 1] 1]
Test Case:  58 | Input/Output: [[-97 -45 -45 -45] -97]
Test Case:  59 | Input/Output: [[-82 -82 -82 -54] -82]
Test Case:  60 | Input/Output: [[93 -83 -83 -83] -83]
Test Case:  61 | Input/Output: [[36 -57 36 36] -57]
Test Case:  62 | Input/Output: [[71 71 71 45] 45]
Test Case:  63 | Input/Output: [[54 54 54 59] 54]
Test Case:  64 | Input/Output: [[6 6 6 -5] -5]
Test Case:  65 | Input/Output: [[-12 -12 -12 92] -12]
Test Case:  66 | Input/Output: [[-54 -54 -93 -54] -93]
Test Case:  67 | Input/Output: [[74 -43 -43 -43] -43]
Test Case:  68 | Input/Output: [[81 81 81 81] 81]
Test Case:  69 | Input/Output: [[-87 -89 -89 -89] -89]
Test Case:  70 | Input/Output: [[40 -98 -98 -98] -98]
Test Case:  71 | Input/Output: [[-4 -99 -4 -4] -99]
Test Case:  72 | Input/Output: [[0 0 0 82] 0]
Test Case:  73 | Input/Output: [[-55 -56 -55 -55] -56]
Test Case:  74 | Input/Output: [[-21 -25 -21 -21] -25]
Test Case:  75 | Input/Output: [[10 10 -37 10] -37]
Test Case:  76 | Input/Output: [[-31 -28 -28 -28] -31]
Test Case:  77 | Input/Output: [[-10 5 -10 -10] -10]
Test Case:  78 | Input/Output: [[-6 -87 -87 -87] -87]
Test Case:  79 | Input/Output: [[-64 -64 24 -64] -64]
Test Case:  80 | Input/Output: [[90 -38 -38 -38] -38]
Test Case:  81 | Input/Output: [[-5 -5 32 -5] -5]
Test Case:  82 | Input/Output: [[25 25 25 75] 25]
Test Case:  83 | Input/Output: [[-24 -24 -24 48] -24]
Test Case:  84 | Input/Output: [[12 -60 12 12] -60]
Test Case:  85 | Input/Output: [[-85 -79 -79 -79] -85]
Test Case:  86 | Input/Output: [[-43 -30 -43 -43] -43]
Test Case:  87 | Input/Output: [[-9 -1 -1 -1] -9]
Test Case:  88 | Input/Output: [[-67 -67 38 -67] -67]
Test Case:  89 | Input/Output: [[22 22 71 22] 22]
Test Case:  90 | Input/Output: [[49 -76 -76 -76] -76]
Test Case:  91 | Input/Output: [[76 -36 -36 -36] -36]
Test Case:  92 | Input/Output: [[-16 -16 -54 -16] -54]
Test Case:  93 | Input/Output: [[58 -81 58 58] -81]
Test Case:  94 | Input/Output: [[-52 12 -52 -52] -52]
Test Case:  95 | Input/Output: [[23 23 98 23] 23]
Test Case:  96 | Input/Output: [[-28 54 54 54] -28]
Test Case:  97 | Input/Output: [[-19 -19 69 -19] -19]
Test Case:  98 | Input/Output: [[44 44 44 -28] -28]
Test Case:  99 | Input/Output: [[13 13 13 60] 13]
Test Case: 100 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 101 | Input/Output: [(68 68 68 68) 68]
Test Case: 102 | Input/Output: [(85 85 85 85) 85]
Test Case: 103 | Input/Output: [(-60 -60 -60 -60) -60]
Test Case: 104 | Input/Output: [(3 3 3 3) 3]
Test Case: 105 | Input/Output: [(23 23 23 23) 23]
Test Case: 106 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 107 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 108 | Input/Output: [(-75 -75 -75 -75) -75]
Test Case: 109 | Input/Output: [(46 46 46 46) 46]
Test Case: 110 | Input/Output: [(23 23 23 23) 23]
Test Case: 111 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 112 | Input/Output: [(-62 -62 -62 -62) -62]
Test Case: 113 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 114 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 115 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 116 | Input/Output: [(-76 -76 -76 -76) -76]
Test Case: 117 | Input/Output: [(4 4 4 4) 4]
Test Case: 118 | Input/Output: [(-40 -40 -40 -40) -40]
Test Case: 119 | Input/Output: [(-53 -53 -53 -53) -53]
Test Case: 120 | Input/Output: [(73 73 73 73) 73]
Test Case: 121 | Input/Output: [(60 60 60 60) 60]
Test Case: 122 | Input/Output: [(-34 -34 -34 -34) -34]
Test Case: 123 | Input/Output: [(90 90 90 90) 90]
Test Case: 124 | Input/Output: [(-56 -56 -56 -56) -56]
Test Case: 125 | Input/Output: [(7 7 7 7) 7]
Test Case: 126 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 127 | Input/Output: [(-69 -69 -69 -69) -69]
Test Case: 128 | Input/Output: [(-93 -93 -93 -93) -93]
Test Case: 129 | Input/Output: [(57 57 57 57) 57]
Test Case: 130 | Input/Output: [(53 53 53 53) 53]
Test Case: 131 | Input/Output: [(-92 -92 -92 -92) -92]
Test Case: 132 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 133 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 134 | Input/Output: [(9 9 9 9) 9]
Test Case: 135 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 136 | Input/Output: [(-61 -61 -61 -61) -61]
Test Case: 137 | Input/Output: [(39 39 39 39) 39]
Test Case: 138 | Input/Output: [(15 15 15 15) 15]
Test Case: 139 | Input/Output: [(53 53 53 53) 53]
Test Case: 140 | Input/Output: [(-88 -88 -88 -88) -88]
Test Case: 141 | Input/Output: [(34 34 34 34) 34]
Test Case: 142 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 143 | Input/Output: [(24 24 24 24) 24]
Test Case: 144 | Input/Output: [(-33 -33 -33 -33) -33]
Test Case: 145 | Input/Output: [(81 81 81 81) 81]
Test Case: 146 | Input/Output: [(-87 -87 -87 -87) -87]
Test Case: 147 | Input/Output: [(27 27 27 27) 27]
Test Case: 148 | Input/Output: [(17 17 17 17) 17]
Test Case: 149 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 150 | Input/Output: [(-65 -65 -65 -65) -65]
Test Case: 151 | Input/Output: [(-13 -13 -13 -13) -13]
Test Case: 152 | Input/Output: [(32 32 32 32) 32]
Test Case: 153 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 154 | Input/Output: [(-11 -11 -11 -11) -11]
Test Case: 155 | Input/Output: [(49 49 49 49) 49]
Test Case: 156 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 157 | Input/Output: [(10 10 10 10) 10]
Test Case: 158 | Input/Output: [(-70 -70 -70 -70) -70]
Test Case: 159 | Input/Output: [(41 41 41 41) 41]
Test Case: 160 | Input/Output: [(25 25 25 25) 25]
Test Case: 161 | Input/Output: [(-7 -7 -7 -7) -7]
Test Case: 162 | Input/Output: [(-46 -46 -46 -46) -46]
Test Case: 163 | Input/Output: [(-8 -8 -8 -8) -8]
Test Case: 164 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 165 | Input/Output: [(20 20 20 20) 20]
Test Case: 166 | Input/Output: [(69 69 69 69) 69]
Test Case: 167 | Input/Output: [(-55 -55 -55 -55) -55]
Test Case: 168 | Input/Output: [(8 8 8 8) 8]
Test Case: 169 | Input/Output: [(-95 -95 -95 -95) -95]
Test Case: 170 | Input/Output: [(4 4 4 4) 4]
Test Case: 171 | Input/Output: [(73 73 73 73) 73]
Test Case: 172 | Input/Output: [(31 31 31 31) 31]
Test Case: 173 | Input/Output: [(81 81 81 81) 81]
Test Case: 174 | Input/Output: [(79 79 79 79) 79]
Test Case: 175 | Input/Output: [(-85 -85 -85 -85) -85]
Test Case: 176 | Input/Output: [(21 21 21 21) 21]
Test Case: 177 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 178 | Input/Output: [(-89 -89 -89 -89) -89]
Test Case: 179 | Input/Output: [(80 80 80 80) 80]
Test Case: 180 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 181 | Input/Output: [(24 24 24 24) 24]
Test Case: 182 | Input/Output: [(-23 -23 -23 -23) -23]
Test Case: 183 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 184 | Input/Output: [(24 24 24 24) 24]
Test Case: 185 | Input/Output: [(65 65 65 65) 65]
Test Case: 186 | Input/Output: [(87 87 87 87) 87]
Test Case: 187 | Input/Output: [(7 7 7 7) 7]
Test Case: 188 | Input/Output: [(-7 -7 -7 -7) -7]
Test Case: 189 | Input/Output: [(71 71 71 71) 71]
Test Case: 190 | Input/Output: [(-66 -66 -66 -66) -66]
Test Case: 191 | Input/Output: [(-3 -3 -3 -3) -3]
Test Case: 192 | Input/Output: [(58 58 58 58) 58]
Test Case: 193 | Input/Output: [(-81 -81 -81 -81) -81]
Test Case: 194 | Input/Output: [(4 4 4 4) 4]
Test Case: 195 | Input/Output: [(-68 -68 -68 -68) -68]
Test Case: 196 | Input/Output: [(-37 -37 -37 -37) -37]
Test Case: 197 | Input/Output: [(97 97 97 97) 97]
Test Case: 198 | Input/Output: [(-31 -31 -31 -31) -31]
Test Case: 199 | Input/Output: [(3 3 3 3) 3]
Test Case: 200 | Input/Output: [(67 38 83 29) 29]
Test Case: 201 | Input/Output: [(85 96 74 35) 35]
Test Case: 202 | Input/Output: [(53 83 50 98) 50]
Test Case: 203 | Input/Output: [(26 70 0 92) 0]
Test Case: 204 | Input/Output: [(52 15 75 89) 15]
Test Case: 205 | Input/Output: [(8 94 79 8) 8]
Test Case: 206 | Input/Output: [(92 43 58 59) 43]
Test Case: 207 | Input/Output: [(53 53 8 6) 6]
Test Case: 208 | Input/Output: [(20 57 82 58) 20]
Test Case: 209 | Input/Output: [(99 77 75 38) 38]
Test Case: 210 | Input/Output: [(12 31 48 3) 3]
Test Case: 211 | Input/Output: [(43 21 16 81) 16]
Test Case: 212 | Input/Output: [(83 55 71 3) 3]
Test Case: 213 | Input/Output: [(36 100 100 10) 10]
Test Case: 214 | Input/Output: [(56 65 29 53) 29]
Test Case: 215 | Input/Output: [(56 11 89 40) 11]
Test Case: 216 | Input/Output: [(46 98 42 24) 24]
Test Case: 217 | Input/Output: [(58 68 52 98) 52]
Test Case: 218 | Input/Output: [(89 83 35 56) 35]
Test Case: 219 | Input/Output: [(37 31 89 36) 31]
Test Case: 220 | Input/Output: [(23 46 33 2) 2]
Test Case: 221 | Input/Output: [(5 9 96 45) 5]
Test Case: 222 | Input/Output: [(73 28 40 48) 28]
Test Case: 223 | Input/Output: [(12 87 65 2) 2]
Test Case: 224 | Input/Output: [(77 26 19 53) 19]
Test Case: 225 | Input/Output: [(34 7 42 15) 7]
Test Case: 226 | Input/Output: [(95 87 86 99) 86]
Test Case: 227 | Input/Output: [(25 89 6 86) 6]
Test Case: 228 | Input/Output: [(19 56 7 33) 7]
Test Case: 229 | Input/Output: [(92 77 92 3) 3]
Test Case: 230 | Input/Output: [(48 81 56 75) 48]
Test Case: 231 | Input/Output: [(52 100 49 1) 1]
Test Case: 232 | Input/Output: [(69 13 32 96) 13]
Test Case: 233 | Input/Output: [(95 21 18 54) 18]
Test Case: 234 | Input/Output: [(15 7 86 64) 7]
Test Case: 235 | Input/Output: [(47 26 0 72) 0]
Test Case: 236 | Input/Output: [(86 74 78 68) 68]
Test Case: 237 | Input/Output: [(85 80 88 0) 0]
Test Case: 238 | Input/Output: [(54 80 78 45) 45]
Test Case: 239 | Input/Output: [(59 39 47 57) 39]
Test Case: 240 | Input/Output: [(7 0 69 25) 0]
Test Case: 241 | Input/Output: [(92 34 32 63) 32]
Test Case: 242 | Input/Output: [(81 43 76 67) 43]
Test Case: 243 | Input/Output: [(0 60 84 47) 0]
Test Case: 244 | Input/Output: [(69 82 43 91) 43]
Test Case: 245 | Input/Output: [(68 84 92 96) 68]
Test Case: 246 | Input/Output: [(62 40 74 92) 40]
Test Case: 247 | Input/Output: [(2 77 16 7) 2]
Test Case: 248 | Input/Output: [(36 61 67 73) 36]
Test Case: 249 | Input/Output: [(46 54 53 26) 26]
Test Case: 250 | Input/Output: [(45 87 0 48) 0]
Test Case: 251 | Input/Output: [(48 85 47 46) 46]
Test Case: 252 | Input/Output: [(7 85 13 38) 7]
Test Case: 253 | Input/Output: [(2 59 63 2) 2]
Test Case: 254 | Input/Output: [(38 41 66 85) 38]
Test Case: 255 | Input/Output: [(3 38 24 37) 3]
Test Case: 256 | Input/Output: [(28 84 30 93) 28]
Test Case: 257 | Input/Output: [(80 80 0 25) 0]
Test Case: 258 | Input/Output: [(39 4 88 95) 4]
Test Case: 259 | Input/Output: [(96 11 42 94) 11]
Test Case: 260 | Input/Output: [(10 62 22 3) 3]
Test Case: 261 | Input/Output: [(59 44 10 55) 10]
Test Case: 262 | Input/Output: [(0 41 60 86) 0]
Test Case: 263 | Input/Output: [(63 16 57 98) 16]
Test Case: 264 | Input/Output: [(93 5 2 39) 2]
Test Case: 265 | Input/Output: [(14 24 89 86) 14]
Test Case: 266 | Input/Output: [(54 31 34 9) 9]
Test Case: 267 | Input/Output: [(84 47 59 52) 47]
Test Case: 268 | Input/Output: [(86 71 58 100) 58]
Test Case: 269 | Input/Output: [(29 95 94 79) 29]
Test Case: 270 | Input/Output: [(14 84 60 60) 14]
Test Case: 271 | Input/Output: [(52 75 53 9) 9]
Test Case: 272 | Input/Output: [(21 14 66 87) 14]
Test Case: 273 | Input/Output: [(92 70 73 8) 8]
Test Case: 274 | Input/Output: [(99 61 88 88) 61]
Test Case: 275 | Input/Output: [(97 51 43 41) 41]
Test Case: 276 | Input/Output: [(21 13 88 73) 13]
Test Case: 277 | Input/Output: [(8 2 16 95) 2]
Test Case: 278 | Input/Output: [(90 20 45 5) 5]
Test Case: 279 | Input/Output: [(17 17 67 2) 2]
Test Case: 280 | Input/Output: [(45 53 83 66) 45]
Test Case: 281 | Input/Output: [(81 31 21 42) 21]
Test Case: 282 | Input/Output: [(9 32 2 20) 2]
Test Case: 283 | Input/Output: [(100 73 93 19) 19]
Test Case: 284 | Input/Output: [(74 20 78 58) 20]
Test Case: 285 | Input/Output: [(88 97 3 90) 3]
Test Case: 286 | Input/Output: [(62 79 64 80) 62]
Test Case: 287 | Input/Output: [(98 71 100 98) 71]
Test Case: 288 | Input/Output: [(34 41 54 62) 34]
Test Case: 289 | Input/Output: [(61 98 42 18) 18]
Test Case: 290 | Input/Output: [(20 54 92 56) 20]
Test Case: 291 | Input/Output: [(12 63 53 49) 12]
Test Case: 292 | Input/Output: [(81 76 13 89) 13]
Test Case: 293 | Input/Output: [(29 56 89 29) 29]
Test Case: 294 | Input/Output: [(4 42 67 64) 4]
Test Case: 295 | Input/Output: [(99 89 77 65) 65]
Test Case: 296 | Input/Output: [(6 57 57 73) 6]
Test Case: 297 | Input/Output: [(62 64 76 22) 22]
Test Case: 298 | Input/Output: [(37 39 36 16) 16]
Test Case: 299 | Input/Output: [(85 50 11 32) 11]
Test Case: 300 | Input/Output: [(39 84 8 65) 8]
Test Case: 301 | Input/Output: [(99 28 30 41) 28]
Test Case: 302 | Input/Output: [(24 61 38 39) 24]
Test Case: 303 | Input/Output: [(100 67 42 68) 42]
Test Case: 304 | Input/Output: [(97 32 89 57) 32]
Test Case: 305 | Input/Output: [(90 4 2 80) 2]
Test Case: 306 | Input/Output: [(66 57 26 96) 26]
Test Case: 307 | Input/Output: [(49 46 96 3) 3]
Test Case: 308 | Input/Output: [(88 77 99 11) 11]
Test Case: 309 | Input/Output: [(24 32 38 53) 24]
Test Case: 310 | Input/Output: [(89 57 58 61) 57]
Test Case: 311 | Input/Output: [(8 3 48 1) 1]
Test Case: 312 | Input/Output: [(75 57 50 39) 39]
Test Case: 313 | Input/Output: [(40 5 29 67) 5]
Test Case: 314 | Input/Output: [(26 5 54 2) 2]
Test Case: 315 | Input/Output: [(17 68 11 100) 11]
Test Case: 316 | Input/Output: [(80 96 27 66) 27]
Test Case: 317 | Input/Output: [(70 65 56 32) 32]
Test Case: 318 | Input/Output: [(18 92 94 74) 18]
Test Case: 319 | Input/Output: [(53 27 91 31) 27]
Test Case: 320 | Input/Output: [(46 71 43 72) 43]
Test Case: 321 | Input/Output: [(68 79 62 64) 62]
Test Case: 322 | Input/Output: [(15 50 89 1) 1]
Test Case: 323 | Input/Output: [(12 100 25 6) 6]
Test Case: 324 | Input/Output: [(87 12 63 90) 12]
Test Case: 325 | Input/Output: [(5 41 57 92) 5]
Test Case: 326 | Input/Output: [(51 83 61 26) 26]
Test Case: 327 | Input/Output: [(51 31 67 40) 31]
Test Case: 328 | Input/Output: [(76 94 86 0) 0]
Test Case: 329 | Input/Output: [(30 2 18 58) 2]
Test Case: 330 | Input/Output: [(74 87 1 41) 1]
Test Case: 331 | Input/Output: [(51 29 46 87) 29]
Test Case: 332 | Input/Output: [(93 83 54 94) 54]
Test Case: 333 | Input/Output: [(7 68 91 90) 7]
Test Case: 334 | Input/Output: [(75 71 66 76) 66]
Test Case: 335 | Input/Output: [(38 40 41 70) 38]
Test Case: 336 | Input/Output: [(67 46 75 8) 8]
Test Case: 337 | Input/Output: [(24 78 57 75) 24]
Test Case: 338 | Input/Output: [(48 72 90 16) 16]
Test Case: 339 | Input/Output: [(67 81 35 81) 35]
Test Case: 340 | Input/Output: [(54 77 39 93) 39]
Test Case: 341 | Input/Output: [(90 33 83 72) 33]
Test Case: 342 | Input/Output: [(97 37 62 69) 37]
Test Case: 343 | Input/Output: [(99 75 43 8) 8]
Test Case: 344 | Input/Output: [(78 71 84 34) 34]
Test Case: 345 | Input/Output: [(33 66 49 95) 33]
Test Case: 346 | Input/Output: [(30 56 38 94) 30]
Test Case: 347 | Input/Output: [(13 2 8 3) 2]
Test Case: 348 | Input/Output: [(67 89 19 64) 19]
Test Case: 349 | Input/Output: [(94 82 73 87) 73]
Test Case: 350 | Input/Output: [(34 44 20 28) 20]
Test Case: 351 | Input/Output: [(52 74 87 40) 40]
Test Case: 352 | Input/Output: [(81 47 37 63) 37]
Test Case: 353 | Input/Output: [(15 2 41 30) 2]
Test Case: 354 | Input/Output: [(9 88 25 100) 9]
Test Case: 355 | Input/Output: [(41 86 12 29) 12]
Test Case: 356 | Input/Output: [(39 87 61 31) 31]
Test Case: 357 | Input/Output: [(3 31 39 73) 3]
Test Case: 358 | Input/Output: [(1 67 70 91) 1]
Test Case: 359 | Input/Output: [(24 53 12 93) 12]
Test Case: 360 | Input/Output: [(31 65 77 71) 31]
Test Case: 361 | Input/Output: [(14 48 6 42) 6]
Test Case: 362 | Input/Output: [(64 49 51 16) 16]
Test Case: 363 | Input/Output: [(86 73 59 11) 11]
Test Case: 364 | Input/Output: [(17 65 13 100) 13]
Test Case: 365 | Input/Output: [(35 34 27 36) 27]
Test Case: 366 | Input/Output: [(87 47 16 55) 16]
Test Case: 367 | Input/Output: [(48 89 73 42) 42]
Test Case: 368 | Input/Output: [(92 80 30 65) 30]
Test Case: 369 | Input/Output: [(96 72 68 69) 68]
Test Case: 370 | Input/Output: [(23 58 61 81) 23]
Test Case: 371 | Input/Output: [(15 30 22 67) 15]
Test Case: 372 | Input/Output: [(34 50 71 37) 34]
Test Case: 373 | Input/Output: [(36 35 42 58) 35]
Test Case: 374 | Input/Output: [(74 35 39 84) 35]
Test Case: 375 | Input/Output: [(68 7 0 85) 0]
Test Case: 376 | Input/Output: [(52 42 98 64) 42]
Test Case: 377 | Input/Output: [(92 82 4 69) 4]
Test Case: 378 | Input/Output: [(78 66 69 2) 2]
Test Case: 379 | Input/Output: [(79 21 89 0) 0]
Test Case: 380 | Input/Output: [(89 92 96 35) 35]
Test Case: 381 | Input/Output: [(47 10 45 63) 10]
Test Case: 382 | Input/Output: [(66 88 85 11) 11]
Test Case: 383 | Input/Output: [(18 82 34 84) 18]
Test Case: 384 | Input/Output: [(96 86 50 91) 50]
Test Case: 385 | Input/Output: [(17 19 38 91) 17]
Test Case: 386 | Input/Output: [(96 19 53 36) 19]
Test Case: 387 | Input/Output: [(54 86 91 12) 12]
Test Case: 388 | Input/Output: [(92 52 38 91) 38]
Test Case: 389 | Input/Output: [(91 20 59 37) 20]
Test Case: 390 | Input/Output: [(92 12 88 0) 0]
Test Case: 391 | Input/Output: [(56 26 30 40) 26]
Test Case: 392 | Input/Output: [(66 62 30 45) 30]
Test Case: 393 | Input/Output: [(21 49 58 93) 21]
Test Case: 394 | Input/Output: [(31 7 81 26) 7]
Test Case: 395 | Input/Output: [(83 50 53 26) 26]
Test Case: 396 | Input/Output: [(86 51 10 84) 10]
Test Case: 397 | Input/Output: [(19 89 73 77) 19]
Test Case: 398 | Input/Output: [(61 96 73 51) 51]
Test Case: 399 | Input/Output: [(40 0 75 34) 0]
Test Case: 400 | Input/Output: [(8 18 -64 60) -64]
Test Case: 401 | Input/Output: [(51 -27 26 -58) -58]
Test Case: 402 | Input/Output: [(57 -98 43 -97) -98]
Test Case: 403 | Input/Output: [(95 95 -62 -27) -62]
Test Case: 404 | Input/Output: [(58 -81 96 -48) -81]
Test Case: 405 | Input/Output: [(-11 93 -74 8) -74]
Test Case: 406 | Input/Output: [(6 96 56 -45) -45]
Test Case: 407 | Input/Output: [(-15 21 -81 19) -81]
Test Case: 408 | Input/Output: [(97 -28 38 -93) -93]
Test Case: 409 | Input/Output: [(68 -94 84 -32) -94]
Test Case: 410 | Input/Output: [(53 -100 74 99) -100]
Test Case: 411 | Input/Output: [(53 65 48 7) 7]
Test Case: 412 | Input/Output: [(-82 -83 -38 -41) -83]
Test Case: 413 | Input/Output: [(-40 -37 4 -21) -40]
Test Case: 414 | Input/Output: [(-9 -92 -90 78) -92]
Test Case: 415 | Input/Output: [(28 -5 -31 -27) -31]
Test Case: 416 | Input/Output: [(-97 -81 65 -2) -97]
Test Case: 417 | Input/Output: [(-58 6 -41 -71) -71]
Test Case: 418 | Input/Output: [(-48 78 72 56) -48]
Test Case: 419 | Input/Output: [(-89 -29 -10 -84) -89]
Test Case: 420 | Input/Output: [(-52 63 -39 -80) -80]
Test Case: 421 | Input/Output: [(-63 27 -78 75) -78]
Test Case: 422 | Input/Output: [(-85 5 76 -69) -85]
Test Case: 423 | Input/Output: [(-52 -77 66 85) -77]
Test Case: 424 | Input/Output: [(-98 38 -73 67) -98]
Test Case: 425 | Input/Output: [(17 -48 22 -56) -56]
Test Case: 426 | Input/Output: [(71 56 -82 78) -82]
Test Case: 427 | Input/Output: [(-94 22 84 70) -94]
Test Case: 428 | Input/Output: [(68 -85 20 -62) -85]
Test Case: 429 | Input/Output: [(89 -86 -38 7) -86]
Test Case: 430 | Input/Output: [(-81 63 23 3) -81]
Test Case: 431 | Input/Output: [(-20 -60 11 -18) -60]
Test Case: 432 | Input/Output: [(1 -70 -53 86) -70]
Test Case: 433 | Input/Output: [(-100 26 65 -19) -100]
Test Case: 434 | Input/Output: [(-47 26 34 -82) -82]
Test Case: 435 | Input/Output: [(-60 -73 66 59) -73]
Test Case: 436 | Input/Output: [(72 59 22 -99) -99]
Test Case: 437 | Input/Output: [(76 -21 80 -70) -70]
Test Case: 438 | Input/Output: [(84 -43 68 22) -43]
Test Case: 439 | Input/Output: [(-94 93 -30 -42) -94]
Test Case: 440 | Input/Output: [(-26 23 95 77) -26]
Test Case: 441 | Input/Output: [(34 25 -24 22) -24]
Test Case: 442 | Input/Output: [(-14 -26 -65 44) -65]
Test Case: 443 | Input/Output: [(46 -17 76 -96) -96]
Test Case: 444 | Input/Output: [(96 -5 -35 -10) -35]
Test Case: 445 | Input/Output: [(-83 -5 -43 31) -83]
Test Case: 446 | Input/Output: [(-46 68 -47 98) -47]
Test Case: 447 | Input/Output: [(28 95 86 -55) -55]
Test Case: 448 | Input/Output: [(99 81 -11 9) -11]
Test Case: 449 | Input/Output: [(-52 41 83 89) -52]
Test Case: 450 | Input/Output: [(-81 -26 88 40) -81]
Test Case: 451 | Input/Output: [(-95 -29 -79 -44) -95]
Test Case: 452 | Input/Output: [(97 86 -50 93) -50]
Test Case: 453 | Input/Output: [(42 61 -85 -28) -85]
Test Case: 454 | Input/Output: [(-38 -86 -51 -68) -86]
Test Case: 455 | Input/Output: [(6 -80 22 -63) -80]
Test Case: 456 | Input/Output: [(4 -62 -77 51) -77]
Test Case: 457 | Input/Output: [(9 69 -79 44) -79]
Test Case: 458 | Input/Output: [(67 -32 13 100) -32]
Test Case: 459 | Input/Output: [(-6 87 6 -5) -6]
Test Case: 460 | Input/Output: [(-98 -76 26 33) -98]
Test Case: 461 | Input/Output: [(66 -12 -35 7) -35]
Test Case: 462 | Input/Output: [(66 66 -60 -20) -60]
Test Case: 463 | Input/Output: [(-35 85 95 60) -35]
Test Case: 464 | Input/Output: [(62 -6 72 89) -6]
Test Case: 465 | Input/Output: [(98 82 37 -85) -85]
Test Case: 466 | Input/Output: [(43 78 50 -77) -77]
Test Case: 467 | Input/Output: [(-17 35 59 -78) -78]
Test Case: 468 | Input/Output: [(-98 6 91 62) -98]
Test Case: 469 | Input/Output: [(-99 58 10 80) -99]
Test Case: 470 | Input/Output: [(66 54 -1 -31) -31]
Test Case: 471 | Input/Output: [(41 -94 -13 -43) -94]
Test Case: 472 | Input/Output: [(-92 -82 -8 -63) -92]
Test Case: 473 | Input/Output: [(46 65 -21 29) -21]
Test Case: 474 | Input/Output: [(-24 60 37 10) -24]
Test Case: 475 | Input/Output: [(-72 -12 44 -90) -90]
Test Case: 476 | Input/Output: [(-87 -76 2 52) -87]
Test Case: 477 | Input/Output: [(-30 -41 91 -74) -74]
Test Case: 478 | Input/Output: [(-73 56 -3 -93) -93]
Test Case: 479 | Input/Output: [(81 80 100 98) 80]
Test Case: 480 | Input/Output: [(46 95 -13 55) -13]
Test Case: 481 | Input/Output: [(46 18 15 -25) -25]
Test Case: 482 | Input/Output: [(51 45 78 90) 45]
Test Case: 483 | Input/Output: [(40 93 -59 -68) -68]
Test Case: 484 | Input/Output: [(54 7 -34 93) -34]
Test Case: 485 | Input/Output: [(-70 -42 27 98) -70]
Test Case: 486 | Input/Output: [(22 77 40 38) 22]
Test Case: 487 | Input/Output: [(20 48 55 25) 20]
Test Case: 488 | Input/Output: [(-43 -6 39 -5) -43]
Test Case: 489 | Input/Output: [(-13 -67 -35 -76) -76]
Test Case: 490 | Input/Output: [(97 94 59 -24) -24]
Test Case: 491 | Input/Output: [(-94 -94 -84 71) -94]
Test Case: 492 | Input/Output: [(-23 -87 -16 12) -87]
Test Case: 493 | Input/Output: [(-74 -70 42 27) -74]
Test Case: 494 | Input/Output: [(62 53 99 34) 34]
Test Case: 495 | Input/Output: [(-28 17 95 89) -28]
Test Case: 496 | Input/Output: [(48 21 58 32) 21]
Test Case: 497 | Input/Output: [(-84 35 37 -83) -84]
Test Case: 498 | Input/Output: [(-20 78 -67 -77) -77]
Test Case: 499 | Input/Output: [(-85 11 -45 70) -85]
Test Case: 500 | Input/Output: [(55 -41 88 -85) -85]
Test Case: 501 | Input/Output: [(74 42 24 29) 24]
Test Case: 502 | Input/Output: [(78 86 26 57) 26]
Test Case: 503 | Input/Output: [(28 61 -41 -81) -81]
Test Case: 504 | Input/Output: [(-90 -91 82 96) -91]
Test Case: 505 | Input/Output: [(63 -87 63 83) -87]
Test Case: 506 | Input/Output: [(1 -96 -32 49) -96]
Test Case: 507 | Input/Output: [(-77 94 76 19) -77]
Test Case: 508 | Input/Output: [(-91 -95 88 99) -95]
Test Case: 509 | Input/Output: [(-44 99 55 16) -44]
Test Case: 510 | Input/Output: [(18 -27 24 -82) -82]
Test Case: 511 | Input/Output: [(-83 -47 68 -7) -83]
Test Case: 512 | Input/Output: [(-89 -6 -60 50) -89]
Test Case: 513 | Input/Output: [(35 -74 34 46) -74]
Test Case: 514 | Input/Output: [(-20 -43 -10 -2) -43]
Test Case: 515 | Input/Output: [(15 83 -100 -80) -100]
Test Case: 516 | Input/Output: [(8 -60 -54 -37) -60]
Test Case: 517 | Input/Output: [(-10 -32 -90 35) -90]
Test Case: 518 | Input/Output: [(3 -77 -41 36) -77]
Test Case: 519 | Input/Output: [(42 -59 55 79) -59]
Test Case: 520 | Input/Output: [(73 -56 -32 -64) -64]
Test Case: 521 | Input/Output: [(-71 50 6 25) -71]
Test Case: 522 | Input/Output: [(-59 -71 18 -16) -71]
Test Case: 523 | Input/Output: [(45 47 75 -35) -35]
Test Case: 524 | Input/Output: [(-28 -49 -61 -26) -61]
Test Case: 525 | Input/Output: [(-73 71 10 28) -73]
Test Case: 526 | Input/Output: [(-61 -95 89 -31) -95]
Test Case: 527 | Input/Output: [(-19 69 -85 -33) -85]
Test Case: 528 | Input/Output: [(-43 -81 97 -94) -94]
Test Case: 529 | Input/Output: [(32 30 19 31) 19]
Test Case: 530 | Input/Output: [(-4 -50 -29 77) -50]
Test Case: 531 | Input/Output: [(-78 -14 -74 -97) -97]
Test Case: 532 | Input/Output: [(-10 -46 -75 -27) -75]
Test Case: 533 | Input/Output: [(-54 24 -65 54) -65]
Test Case: 534 | Input/Output: [(6 -85 96 79) -85]
Test Case: 535 | Input/Output: [(81 39 53 -24) -24]
Test Case: 536 | Input/Output: [(37 -45 78 -16) -45]
Test Case: 537 | Input/Output: [(3 30 -15 55) -15]
Test Case: 538 | Input/Output: [(-41 86 -71 -72) -72]
Test Case: 539 | Input/Output: [(-16 -75 43 86) -75]
Test Case: 540 | Input/Output: [(36 58 78 -66) -66]
Test Case: 541 | Input/Output: [(-27 90 -57 -69) -69]
Test Case: 542 | Input/Output: [(57 44 27 64) 27]
Test Case: 543 | Input/Output: [(28 -94 -55 14) -94]
Test Case: 544 | Input/Output: [(42 -59 -90 -95) -95]
Test Case: 545 | Input/Output: [(-79 5 -5 9) -79]
Test Case: 546 | Input/Output: [(25 64 78 -97) -97]
Test Case: 547 | Input/Output: [(-56 26 -75 -80) -80]
Test Case: 548 | Input/Output: [(21 12 -60 2) -60]
Test Case: 549 | Input/Output: [(40 -37 -100 -28) -100]
Test Case: 550 | Input/Output: [(-38 -51 33 80) -51]
Test Case: 551 | Input/Output: [(54 -66 26 30) -66]
Test Case: 552 | Input/Output: [(-85 18 -29 71) -85]
Test Case: 553 | Input/Output: [(-87 39 -63 -43) -87]
Test Case: 554 | Input/Output: [(-54 1 -66 55) -66]
Test Case: 555 | Input/Output: [(-11 88 81 -84) -84]
Test Case: 556 | Input/Output: [(-9 23 -28 -51) -51]
Test Case: 557 | Input/Output: [(-1 14 -22 -26) -26]
Test Case: 558 | Input/Output: [(-5 -97 -18 17) -97]
Test Case: 559 | Input/Output: [(-25 38 20 -31) -31]
Test Case: 560 | Input/Output: [(-40 -52 -30 34) -52]
Test Case: 561 | Input/Output: [(46 23 -4 45) -4]
Test Case: 562 | Input/Output: [(58 41 33 -61) -61]
Test Case: 563 | Input/Output: [(-68 -49 23 -5) -68]
Test Case: 564 | Input/Output: [(-94 -94 -4 -22) -94]
Test Case: 565 | Input/Output: [(-95 62 59 37) -95]
Test Case: 566 | Input/Output: [(56 -40 -93 -58) -93]
Test Case: 567 | Input/Output: [(57 -81 99 -64) -81]
Test Case: 568 | Input/Output: [(-52 -91 93 28) -91]
Test Case: 569 | Input/Output: [(75 45 -61 56) -61]
Test Case: 570 | Input/Output: [(32 35 -46 70) -46]
Test Case: 571 | Input/Output: [(-84 -89 25 -73) -89]
Test Case: 572 | Input/Output: [(-48 -13 -29 -92) -92]
Test Case: 573 | Input/Output: [(19 6 -80 81) -80]
Test Case: 574 | Input/Output: [(-59 -86 19 -5) -86]
Test Case: 575 | Input/Output: [(85 -37 48 -45) -45]
Test Case: 576 | Input/Output: [(-18 62 55 -42) -42]
Test Case: 577 | Input/Output: [(68 -2 -10 -91) -91]
Test Case: 578 | Input/Output: [(-99 2 0 -36) -99]
Test Case: 579 | Input/Output: [(76 -63 -48 -13) -63]
Test Case: 580 | Input/Output: [(21 -48 28 17) -48]
Test Case: 581 | Input/Output: [(-30 -30 16 89) -30]
Test Case: 582 | Input/Output: [(-94 -16 10 -100) -100]
Test Case: 583 | Input/Output: [(-72 86 13 21) -72]
Test Case: 584 | Input/Output: [(-32 -38 45 12) -38]
Test Case: 585 | Input/Output: [(89 30 36 61) 30]
Test Case: 586 | Input/Output: [(67 -63 15 96) -63]
Test Case: 587 | Input/Output: [(-73 -2 -14 -37) -73]
Test Case: 588 | Input/Output: [(-29 96 70 -43) -43]
Test Case: 589 | Input/Output: [(-16 -63 -93 89) -93]
Test Case: 590 | Input/Output: [(12 54 79 47) 12]
Test Case: 591 | Input/Output: [(-47 -9 -36 85) -47]
Test Case: 592 | Input/Output: [(-27 -23 81 4) -27]
Test Case: 593 | Input/Output: [(10 -23 -44 -33) -44]
Test Case: 594 | Input/Output: [(-32 -74 -97 5) -97]
Test Case: 595 | Input/Output: [(35 26 -89 20) -89]
Test Case: 596 | Input/Output: [(37 61 -69 -52) -69]
Test Case: 597 | Input/Output: [(-15 77 57 13) -15]
Test Case: 598 | Input/Output: [(0 55 72 -56) -56]
Test Case: 599 | Input/Output: [(-96 44 4 47) -96]
Test Case: 600 | Input/Output: [(-99 52 10 76) -99]
Test Case: 601 | Input/Output: [(34 4 29 43) 4]
Test Case: 602 | Input/Output: [(36 68 -53 -97) -97]
Test Case: 603 | Input/Output: [(-53 11 96 -21) -53]
Test Case: 604 | Input/Output: [(48 -81 2 -5) -81]
Test Case: 605 | Input/Output: [(-32 -65 -67 -94) -94]
Test Case: 606 | Input/Output: [(-67 5 -13 85) -67]
Test Case: 607 | Input/Output: [(-14 53 -4 34) -14]
Test Case: 608 | Input/Output: [(40 62 -44 56) -44]
Test Case: 609 | Input/Output: [(69 -36 100 41) -36]
Test Case: 610 | Input/Output: [(38 45 85 -57) -57]
Test Case: 611 | Input/Output: [(61 -61 8 2) -61]
Test Case: 612 | Input/Output: [(-47 52 -70 81) -70]
Test Case: 613 | Input/Output: [(-13 40 -65 86) -65]
Test Case: 614 | Input/Output: [(70 56 -20 96) -20]
Test Case: 615 | Input/Output: [(89 -39 8 -74) -74]
Test Case: 616 | Input/Output: [(1 -24 -15 -37) -37]
Test Case: 617 | Input/Output: [(-56 -79 73 -80) -80]
Test Case: 618 | Input/Output: [(-74 34 82 59) -74]
Test Case: 619 | Input/Output: [(-80 49 88 27) -80]
Test Case: 620 | Input/Output: [(-93 63 -90 -53) -93]
Test Case: 621 | Input/Output: [(25 83 36 -10) -10]
Test Case: 622 | Input/Output: [(52 53 -29 91) -29]
Test Case: 623 | Input/Output: [(-89 91 36 -12) -89]
Test Case: 624 | Input/Output: [(42 -97 91 41) -97]
Test Case: 625 | Input/Output: [(-52 56 4 -20) -52]
Test Case: 626 | Input/Output: [(40 0 -64 28) -64]
Test Case: 627 | Input/Output: [(93 -89 -52 -88) -89]
Test Case: 628 | Input/Output: [(54 -20 -21 -25) -25]
Test Case: 629 | Input/Output: [(11 -10 -14 59) -14]
Test Case: 630 | Input/Output: [(-71 -67 11 -35) -71]
Test Case: 631 | Input/Output: [(-96 -33 -25 10) -96]
Test Case: 632 | Input/Output: [(-77 87 70 48) -77]
Test Case: 633 | Input/Output: [(22 4 59 -23) -23]
Test Case: 634 | Input/Output: [(2 76 -26 -10) -26]
Test Case: 635 | Input/Output: [(-27 0 75 -21) -27]
Test Case: 636 | Input/Output: [(-6 -76 47 -83) -83]
Test Case: 637 | Input/Output: [(21 29 -89 53) -89]
Test Case: 638 | Input/Output: [(70 -62 -19 96) -62]
Test Case: 639 | Input/Output: [(65 -68 -3 91) -68]
Test Case: 640 | Input/Output: [(32 74 -98 -24) -98]
Test Case: 641 | Input/Output: [(-86 98 23 79) -86]
Test Case: 642 | Input/Output: [(10 -25 28 21) -25]
Test Case: 643 | Input/Output: [(5 -42 -39 -71) -71]
Test Case: 644 | Input/Output: [(4 -91 5 -34) -91]
Test Case: 645 | Input/Output: [(-25 -15 -9 82) -25]
Test Case: 646 | Input/Output: [(-14 61 19 0) -14]
Test Case: 647 | Input/Output: [(3 -66 56 60) -66]
Test Case: 648 | Input/Output: [(34 -90 -60 85) -90]
Test Case: 649 | Input/Output: [(97 -24 -34 70) -34]
Test Case: 650 | Input/Output: [(-55 -24 -9 -22) -55]
Test Case: 651 | Input/Output: [(59 -7 24 70) -7]
Test Case: 652 | Input/Output: [(-100 76 94 20) -100]
Test Case: 653 | Input/Output: [(-35 14 -74 24) -74]
Test Case: 654 | Input/Output: [(0 -33 -3 99) -33]
Test Case: 655 | Input/Output: [(-14 15 67 -29) -29]
Test Case: 656 | Input/Output: [(-68 -100 -28 -87) -100]
Test Case: 657 | Input/Output: [(-33 40 -51 -91) -91]
Test Case: 658 | Input/Output: [(59 -88 98 55) -88]
Test Case: 659 | Input/Output: [(-56 13 37 -92) -92]
Test Case: 660 | Input/Output: [(81 8 82 -65) -65]
Test Case: 661 | Input/Output: [(19 -16 95 -38) -38]
Test Case: 662 | Input/Output: [(-42 62 70 -10) -42]
Test Case: 663 | Input/Output: [(-63 9 -55 -25) -63]
Test Case: 664 | Input/Output: [(30 92 -7 54) -7]
Test Case: 665 | Input/Output: [(-55 39 72 84) -55]
Test Case: 666 | Input/Output: [(-60 -43 -98 27) -98]
Test Case: 667 | Input/Output: [(54 -96 40 85) -96]
Test Case: 668 | Input/Output: [(95 61 96 -58) -58]
Test Case: 669 | Input/Output: [(23 4 83 3) 3]
Test Case: 670 | Input/Output: [(-52 -14 27 -14) -52]
Test Case: 671 | Input/Output: [(-59 16 -82 59) -82]
Test Case: 672 | Input/Output: [(4 47 -10 -5) -10]
Test Case: 673 | Input/Output: [(4 62 -47 -35) -47]
Test Case: 674 | Input/Output: [(-55 -13 29 -24) -55]
Test Case: 675 | Input/Output: [(34 -48 -83 -63) -83]
Test Case: 676 | Input/Output: [(-73 -5 21 33) -73]
Test Case: 677 | Input/Output: [(-55 41 18 70) -55]
Test Case: 678 | Input/Output: [(-46 10 34 -48) -48]
Test Case: 679 | Input/Output: [(-56 -8 -1 -91) -91]
Test Case: 680 | Input/Output: [(78 -29 -43 93) -43]
Test Case: 681 | Input/Output: [(-87 49 93 -76) -87]
Test Case: 682 | Input/Output: [(41 -14 26 80) -14]
Test Case: 683 | Input/Output: [(-51 31 -96 30) -96]
Test Case: 684 | Input/Output: [(-51 26 86 44) -51]
Test Case: 685 | Input/Output: [(49 51 75 0) 0]
Test Case: 686 | Input/Output: [(-31 14 15 -86) -86]
Test Case: 687 | Input/Output: [(-16 -81 -68 6) -81]
Test Case: 688 | Input/Output: [(23 -38 -53 2) -53]
Test Case: 689 | Input/Output: [(42 33 39 -23) -23]
Test Case: 690 | Input/Output: [(-40 -67 -71 -56) -71]
Test Case: 691 | Input/Output: [(-39 -53 -42 12) -53]
Test Case: 692 | Input/Output: [(-87 86 -66 80) -87]
Test Case: 693 | Input/Output: [(7 39 -74 -46) -74]
Test Case: 694 | Input/Output: [(-31 94 13 8) -31]
Test Case: 695 | Input/Output: [(-51 99 54 -64) -64]
Test Case: 696 | Input/Output: [(5 -59 77 61) -59]
Test Case: 697 | Input/Output: [(-69 86 -21 -20) -69]
Test Case: 698 | Input/Output: [(52 74 -40 -16) -40]
Test Case: 699 | Input/Output: [(-27 -55 -62 -51) -62]
Test Case: 700 | Input/Output: [(81 -3 32 -4) -4]
Test Case: 701 | Input/Output: [(1 71 -80 -100) -100]
Test Case: 702 | Input/Output: [(-100 54 61 75) -100]
Test Case: 703 | Input/Output: [(69 60 -84 50) -84]
Test Case: 704 | Input/Output: [(-81 -83 86 -58) -83]
Test Case: 705 | Input/Output: [(89 87 -17 73) -17]
Test Case: 706 | Input/Output: [(82 90 17 -37) -37]
Test Case: 707 | Input/Output: [(-33 -4 20 37) -33]
Test Case: 708 | Input/Output: [(-2 70 69 80) -2]
Test Case: 709 | Input/Output: [(57 -69 77 -38) -69]
Test Case: 710 | Input/Output: [(-5 -88 0 -41) -88]
Test Case: 711 | Input/Output: [(50 47 -70 -76) -76]
Test Case: 712 | Input/Output: [(14 -1 -18 2) -18]
Test Case: 713 | Input/Output: [(7 71 8 -64) -64]
Test Case: 714 | Input/Output: [(-52 78 94 37) -52]
Test Case: 715 | Input/Output: [(9 100 98 60) 9]
Test Case: 716 | Input/Output: [(49 -62 -90 37) -90]
Test Case: 717 | Input/Output: [(69 -43 38 -83) -83]
Test Case: 718 | Input/Output: [(49 49 -75 -82) -82]
Test Case: 719 | Input/Output: [(17 85 47 91) 17]
Test Case: 720 | Input/Output: [(-85 -20 -3 -76) -85]
Test Case: 721 | Input/Output: [(10 -45 -54 97) -54]
Test Case: 722 | Input/Output: [(-4 -29 -89 -87) -89]
Test Case: 723 | Input/Output: [(-50 -74 47 -83) -83]
Test Case: 724 | Input/Output: [(-90 60 4 82) -90]
Test Case: 725 | Input/Output: [(69 -78 65 73) -78]
Test Case: 726 | Input/Output: [(52 -36 98 -4) -36]
Test Case: 727 | Input/Output: [(-76 16 87 19) -76]
Test Case: 728 | Input/Output: [(12 43 83 9) 9]
Test Case: 729 | Input/Output: [(-29 -7 64 0) -29]
Test Case: 730 | Input/Output: [(-80 57 -93 -79) -93]
Test Case: 731 | Input/Output: [(-98 -90 59 -38) -98]
Test Case: 732 | Input/Output: [(-74 84 16 -61) -74]
Test Case: 733 | Input/Output: [(87 88 -95 34) -95]
Test Case: 734 | Input/Output: [(90 54 14 58) 14]
Test Case: 735 | Input/Output: [(-85 -9 15 -97) -97]
Test Case: 736 | Input/Output: [(-13 -20 63 -36) -36]
Test Case: 737 | Input/Output: [(75 31 57 -4) -4]
Test Case: 738 | Input/Output: [(-76 -41 -30 36) -76]
Test Case: 739 | Input/Output: [(31 60 -72 -2) -72]
Test Case: 740 | Input/Output: [(-87 84 -72 61) -87]
Test Case: 741 | Input/Output: [(51 -79 -78 51) -79]
Test Case: 742 | Input/Output: [(56 82 -76 61) -76]
Test Case: 743 | Input/Output: [(69 -25 20 -4) -25]
Test Case: 744 | Input/Output: [(-80 -46 -18 -92) -92]
Test Case: 745 | Input/Output: [(48 -31 -82 -9) -82]
Test Case: 746 | Input/Output: [(91 52 46 93) 46]
Test Case: 747 | Input/Output: [(14 -97 -23 -47) -97]
Test Case: 748 | Input/Output: [(48 -11 73 92) -11]
Test Case: 749 | Input/Output: [(59 68 11 77) 11]
Test Case: 750 | Input/Output: [(31 -76 -31 29) -76]
Test Case: 751 | Input/Output: [(-66 -44 -62 5) -66]
Test Case: 752 | Input/Output: [(-21 -68 20 -28) -68]
Test Case: 753 | Input/Output: [(91 -24 -17 -27) -27]
Test Case: 754 | Input/Output: [(51 67 47 -4) -4]
Test Case: 755 | Input/Output: [(19 89 36 86) 19]
Test Case: 756 | Input/Output: [(-58 39 3 77) -58]
Test Case: 757 | Input/Output: [(81 68 -63 -30) -63]
Test Case: 758 | Input/Output: [(-33 -1 -62 -30) -62]
Test Case: 759 | Input/Output: [(56 47 23 -32) -32]
Test Case: 760 | Input/Output: [(-31 100 94 63) -31]
Test Case: 761 | Input/Output: [(-61 93 5 -44) -61]
Test Case: 762 | Input/Output: [(60 -36 -99 79) -99]
Test Case: 763 | Input/Output: [(93 69 -44 56) -44]
Test Case: 764 | Input/Output: [(0 -55 17 20) -55]
Test Case: 765 | Input/Output: [(-24 51 45 27) -24]
Test Case: 766 | Input/Output: [(-53 81 -33 25) -53]
Test Case: 767 | Input/Output: [(28 -41 2 84) -41]
Test Case: 768 | Input/Output: [(38 47 -37 -54) -54]
Test Case: 769 | Input/Output: [(-43 68 -87 -62) -87]
Test Case: 770 | Input/Output: [(51 70 100 67) 51]
Test Case: 771 | Input/Output: [(94 -65 -29 -44) -65]
Test Case: 772 | Input/Output: [(-74 97 -61 -32) -74]
Test Case: 773 | Input/Output: [(18 90 93 97) 18]
Test Case: 774 | Input/Output: [(-7 77 -79 25) -79]
Test Case: 775 | Input/Output: [(-94 79 22 -65) -94]
Test Case: 776 | Input/Output: [(-26 9 58 -85) -85]
Test Case: 777 | Input/Output: [(-9 2 46 3) -9]
Test Case: 778 | Input/Output: [(-62 -65 26 1) -65]
Test Case: 779 | Input/Output: [(12 54 -34 88) -34]
Test Case: 780 | Input/Output: [(-46 85 4 -48) -48]
Test Case: 781 | Input/Output: [(-45 -14 67 -41) -45]
Test Case: 782 | Input/Output: [(-15 35 -23 36) -23]
Test Case: 783 | Input/Output: [(-34 -34 -66 -70) -70]
Test Case: 784 | Input/Output: [(32 -14 39 -18) -18]
Test Case: 785 | Input/Output: [(-27 -60 -52 -66) -66]
Test Case: 786 | Input/Output: [(-3 -75 -16 5) -75]
Test Case: 787 | Input/Output: [(-48 -3 -49 -68) -68]
Test Case: 788 | Input/Output: [(65 -6 -88 -12) -88]
Test Case: 789 | Input/Output: [(-40 65 66 5) -40]
Test Case: 790 | Input/Output: [(-28 58 90 -95) -95]
Test Case: 791 | Input/Output: [(-32 81 38 -77) -77]
Test Case: 792 | Input/Output: [(46 -33 63 -78) -78]
Test Case: 793 | Input/Output: [(18 -54 54 -47) -54]
Test Case: 794 | Input/Output: [(64 -38 22 13) -38]
Test Case: 795 | Input/Output: [(-47 -64 -5 94) -64]
Test Case: 796 | Input/Output: [(-53 22 -37 51) -53]
Test Case: 797 | Input/Output: [(10 -30 2 -99) -99]
Test Case: 798 | Input/Output: [(9 -49 84 35) -49]
Test Case: 799 | Input/Output: [(13 -80 -100 -46) -100]
Test Case: 800 | Input/Output: [(30 35 77 -29) -29]
Test Case: 801 | Input/Output: [(-62 -49 -60 -27) -62]
Test Case: 802 | Input/Output: [(10 21 -14 -9) -14]
Test Case: 803 | Input/Output: [(78 10 -99 61) -99]
Test Case: 804 | Input/Output: [(-54 20 44 67) -54]
Test Case: 805 | Input/Output: [(-71 8 -87 -26) -87]
Test Case: 806 | Input/Output: [(-84 -56 -26 75) -84]
Test Case: 807 | Input/Output: [(-67 -82 8 -97) -97]
Test Case: 808 | Input/Output: [(-91 -19 -78 -53) -91]
Test Case: 809 | Input/Output: [(88 77 36 -31) -31]
Test Case: 810 | Input/Output: [(25 6 -8 -66) -66]
Test Case: 811 | Input/Output: [(83 -5 68 -45) -45]
Test Case: 812 | Input/Output: [(100 29 29 97) 29]
Test Case: 813 | Input/Output: [(-47 8 27 -22) -47]
Test Case: 814 | Input/Output: [(57 -58 -59 -38) -59]
Test Case: 815 | Input/Output: [(5 -91 10 -21) -91]
Test Case: 816 | Input/Output: [(4 -57 -48 93) -57]
Test Case: 817 | Input/Output: [(-28 17 -6 88) -28]
Test Case: 818 | Input/Output: [(85 46 -49 -98) -98]
Test Case: 819 | Input/Output: [(-9 51 91 70) -9]
Test Case: 820 | Input/Output: [(-43 44 54 70) -43]
Test Case: 821 | Input/Output: [(-11 -46 -61 -8) -61]
Test Case: 822 | Input/Output: [(-27 -15 86 83) -27]
Test Case: 823 | Input/Output: [(-90 -12 77 -4) -90]
Test Case: 824 | Input/Output: [(-17 55 -72 91) -72]
Test Case: 825 | Input/Output: [(9 38 76 -60) -60]
Test Case: 826 | Input/Output: [(-16 -73 -100 87) -100]
Test Case: 827 | Input/Output: [(52 43 -40 -35) -40]
Test Case: 828 | Input/Output: [(69 -96 -84 40) -96]
Test Case: 829 | Input/Output: [(83 66 -41 -81) -81]
Test Case: 830 | Input/Output: [(64 64 49 63) 49]
Test Case: 831 | Input/Output: [(96 30 75 43) 30]
Test Case: 832 | Input/Output: [(-74 33 94 -8) -74]
Test Case: 833 | Input/Output: [(67 88 -19 11) -19]
Test Case: 834 | Input/Output: [(91 -9 71 -46) -46]
Test Case: 835 | Input/Output: [(73 13 -55 25) -55]
Test Case: 836 | Input/Output: [(7 47 100 59) 7]
Test Case: 837 | Input/Output: [(-34 -52 -76 68) -76]
Test Case: 838 | Input/Output: [(-99 -26 70 79) -99]
Test Case: 839 | Input/Output: [(29 -15 -83 -24) -83]
Test Case: 840 | Input/Output: [(-61 71 -74 -99) -99]
Test Case: 841 | Input/Output: [(-89 0 -23 -3) -89]
Test Case: 842 | Input/Output: [(22 -18 96 56) -18]
Test Case: 843 | Input/Output: [(-38 -82 21 70) -82]
Test Case: 844 | Input/Output: [(4 -39 -39 -50) -50]
Test Case: 845 | Input/Output: [(-49 44 -4 -61) -61]
Test Case: 846 | Input/Output: [(-97 -81 12 -65) -97]
Test Case: 847 | Input/Output: [(78 -29 -79 95) -79]
Test Case: 848 | Input/Output: [(78 -81 61 -38) -81]
Test Case: 849 | Input/Output: [(-56 -71 -59 -59) -71]
Test Case: 850 | Input/Output: [(-49 -82 -40 -89) -89]
Test Case: 851 | Input/Output: [(91 25 18 -97) -97]
Test Case: 852 | Input/Output: [(86 -44 42 -19) -44]
Test Case: 853 | Input/Output: [(92 17 10 -100) -100]
Test Case: 854 | Input/Output: [(23 -70 34 -89) -89]
Test Case: 855 | Input/Output: [(2 21 4 94) 2]
Test Case: 856 | Input/Output: [(-22 86 89 67) -22]
Test Case: 857 | Input/Output: [(-86 -46 -35 68) -86]
Test Case: 858 | Input/Output: [(-17 -10 61 -32) -32]
Test Case: 859 | Input/Output: [(-41 -60 15 17) -60]
Test Case: 860 | Input/Output: [(13 45 10 -4) -4]
Test Case: 861 | Input/Output: [(56 83 -63 61) -63]
Test Case: 862 | Input/Output: [(99 -34 -93 5) -93]
Test Case: 863 | Input/Output: [(25 -83 -47 -32) -83]
Test Case: 864 | Input/Output: [(81 36 33 -44) -44]
Test Case: 865 | Input/Output: [(-74 -50 -72 81) -74]
Test Case: 866 | Input/Output: [(91 -50 -24 86) -50]
Test Case: 867 | Input/Output: [(-8 -43 88 21) -43]
Test Case: 868 | Input/Output: [(18 -38 -53 6) -53]
Test Case: 869 | Input/Output: [(-89 49 -52 57) -89]
Test Case: 870 | Input/Output: [(75 43 -73 -85) -85]
Test Case: 871 | Input/Output: [(-17 93 58 -49) -49]
Test Case: 872 | Input/Output: [(82 -89 92 -9) -89]
Test Case: 873 | Input/Output: [(-81 70 67 -57) -81]
Test Case: 874 | Input/Output: [(-95 37 -64 -86) -95]
Test Case: 875 | Input/Output: [(-68 48 -95 -65) -95]
Test Case: 876 | Input/Output: [(57 72 -76 -78) -78]
Test Case: 877 | Input/Output: [(95 17 6 5) 5]
Test Case: 878 | Input/Output: [(72 -53 -14 -66) -66]
Test Case: 879 | Input/Output: [(-38 -84 -41 -10) -84]
Test Case: 880 | Input/Output: [(75 76 -73 -96) -96]
Test Case: 881 | Input/Output: [(40 25 93 91) 25]
Test Case: 882 | Input/Output: [(53 -23 93 -30) -30]
Test Case: 883 | Input/Output: [(-92 -86 -94 -71) -94]
Test Case: 884 | Input/Output: [(33 -9 15 52) -9]
Test Case: 885 | Input/Output: [(74 42 100 33) 33]
Test Case: 886 | Input/Output: [(-100 0 -24 36) -100]
Test Case: 887 | Input/Output: [(100 -32 77 76) -32]
Test Case: 888 | Input/Output: [(-87 46 39 54) -87]
Test Case: 889 | Input/Output: [(-35 42 -60 -81) -81]
Test Case: 890 | Input/Output: [(85 -95 74 -31) -95]
Test Case: 891 | Input/Output: [(-3 -57 49 -17) -57]
Test Case: 892 | Input/Output: [(67 -31 -39 43) -39]
Test Case: 893 | Input/Output: [(62 -24 -68 -85) -85]
Test Case: 894 | Input/Output: [(-29 -89 84 50) -89]
Test Case: 895 | Input/Output: [(-92 -15 47 -40) -92]
Test Case: 896 | Input/Output: [(-95 25 28 76) -95]
Test Case: 897 | Input/Output: [(-63 -40 33 -10) -63]
Test Case: 898 | Input/Output: [(14 -7 -8 -61) -61]
Test Case: 899 | Input/Output: [(10 -88 0 -81) -88]
Test Case: 900 | Input/Output: [(-91 1 -83 -67) -91]
Test Case: 901 | Input/Output: [(81 -28 20 7) -28]
Test Case: 902 | Input/Output: [(80 65 57 -36) -36]
Test Case: 903 | Input/Output: [(-70 6 93 -61) -70]
Test Case: 904 | Input/Output: [(69 -52 50 69) -52]
Test Case: 905 | Input/Output: [(62 -14 -31 -92) -92]
Test Case: 906 | Input/Output: [(-49 -89 -37 17) -89]
Test Case: 907 | Input/Output: [(-23 18 -67 -7) -67]
Test Case: 908 | Input/Output: [(27 52 28 12) 12]
Test Case: 909 | Input/Output: [(-62 100 -47 48) -62]
Test Case: 910 | Input/Output: [(71 42 100 39) 39]
Test Case: 911 | Input/Output: [(46 -91 -75 -47) -91]
Test Case: 912 | Input/Output: [(-44 58 -41 97) -44]
Test Case: 913 | Input/Output: [(22 -85 -12 23) -85]
Test Case: 914 | Input/Output: [(13 -1 73 -92) -92]
Test Case: 915 | Input/Output: [(-19 59 -20 -41) -41]
Test Case: 916 | Input/Output: [(-63 -52 48 -92) -92]
Test Case: 917 | Input/Output: [(-75 -44 0 -49) -75]
Test Case: 918 | Input/Output: [(52 2 -32 -69) -69]
Test Case: 919 | Input/Output: [(-82 -56 -21 -65) -82]
Test Case: 920 | Input/Output: [(-79 99 -35 85) -79]
Test Case: 921 | Input/Output: [(18 -31 -60 69) -60]
Test Case: 922 | Input/Output: [(32 -60 45 50) -60]
Test Case: 923 | Input/Output: [(-64 -59 -40 15) -64]
Test Case: 924 | Input/Output: [(69 76 -84 -42) -84]
Test Case: 925 | Input/Output: [(-27 86 -43 19) -43]
Test Case: 926 | Input/Output: [(38 -71 72 77) -71]
Test Case: 927 | Input/Output: [(33 15 -80 22) -80]
Test Case: 928 | Input/Output: [(-96 -95 -95 -71) -96]
Test Case: 929 | Input/Output: [(93 -93 93 8) -93]
Test Case: 930 | Input/Output: [(-15 28 11 -34) -34]
Test Case: 931 | Input/Output: [(-15 -22 -14 33) -22]
Test Case: 932 | Input/Output: [(-55 97 -29 -43) -55]
Test Case: 933 | Input/Output: [(-85 19 13 -86) -86]
Test Case: 934 | Input/Output: [(-29 24 -82 -97) -97]
Test Case: 935 | Input/Output: [(37 -41 -72 -2) -72]
Test Case: 936 | Input/Output: [(-8 33 -1 16) -8]
Test Case: 937 | Input/Output: [(16 36 36 -34) -34]
Test Case: 938 | Input/Output: [(-19 43 25 -94) -94]
Test Case: 939 | Input/Output: [(53 87 -91 -49) -91]
Test Case: 940 | Input/Output: [(76 91 75 -81) -81]
Test Case: 941 | Input/Output: [(53 -35 -63 -82) -82]
Test Case: 942 | Input/Output: [(21 64 -36 52) -36]
Test Case: 943 | Input/Output: [(53 26 -3 -24) -24]
Test Case: 944 | Input/Output: [(49 33 45 34) 33]
Test Case: 945 | Input/Output: [(-53 48 97 -10) -53]
Test Case: 946 | Input/Output: [(-22 78 17 -34) -34]
Test Case: 947 | Input/Output: [(-98 -84 60 54) -98]
Test Case: 948 | Input/Output: [(7 5 -3 83) -3]
Test Case: 949 | Input/Output: [(70 -3 -36 29) -36]
Test Case: 950 | Input/Output: [(-27 -32 62 8) -32]
Test Case: 951 | Input/Output: [(14 -28 -27 -31) -31]
Test Case: 952 | Input/Output: [(76 66 -40 -7) -40]
Test Case: 953 | Input/Output: [(16 -1 -88 -93) -93]
Test Case: 954 | Input/Output: [(-55 26 -53 -34) -55]
Test Case: 955 | Input/Output: [(59 -95 -92 82) -95]
Test Case: 956 | Input/Output: [(70 88 0 31) 0]
Test Case: 957 | Input/Output: [(5 -64 4 -66) -66]
Test Case: 958 | Input/Output: [(4 84 17 -38) -38]
Test Case: 959 | Input/Output: [(23 25 32 56) 23]
Test Case: 960 | Input/Output: [(-44 35 1 -20) -44]
Test Case: 961 | Input/Output: [(-49 1 -78 9) -78]
Test Case: 962 | Input/Output: [(58 87 20 58) 20]
Test Case: 963 | Input/Output: [(66 76 -50 -16) -50]
Test Case: 964 | Input/Output: [(-16 -39 -3 -62) -62]
Test Case: 965 | Input/Output: [(-50 41 -36 0) -50]
Test Case: 966 | Input/Output: [(-88 -87 -88 -16) -88]
Test Case: 967 | Input/Output: [(-55 30 -67 -81) -81]
Test Case: 968 | Input/Output: [(65 37 -97 38) -97]
Test Case: 969 | Input/Output: [(-92 90 -40 -84) -92]
Test Case: 970 | Input/Output: [(42 70 32 56) 32]
Test Case: 971 | Input/Output: [(3 84 77 73) 3]
Test Case: 972 | Input/Output: [(96 38 -4 66) -4]
Test Case: 973 | Input/Output: [(5 -37 -18 20) -37]
Test Case: 974 | Input/Output: [(74 71 55 -46) -46]
Test Case: 975 | Input/Output: [(12 32 77 80) 12]
Test Case: 976 | Input/Output: [(33 1 -90 -79) -90]
Test Case: 977 | Input/Output: [(2 8 70 -5) -5]
Test Case: 978 | Input/Output: [(13 -44 -50 20) -50]
Test Case: 979 | Input/Output: [(93 -79 -50 83) -79]
Test Case: 980 | Input/Output: [(0 -11 47 7) -11]
Test Case: 981 | Input/Output: [(25 47 -32 28) -32]
Test Case: 982 | Input/Output: [(-38 4 -42 4) -42]
Test Case: 983 | Input/Output: [(-1 -38 18 52) -38]
Test Case: 984 | Input/Output: [(-66 -88 98 68) -88]
Test Case: 985 | Input/Output: [(58 31 -84 78) -84]
Test Case: 986 | Input/Output: [(-36 -49 -40 22) -49]
Test Case: 987 | Input/Output: [(28 80 14 16) 14]
Test Case: 988 | Input/Output: [(28 -74 -25 77) -74]
Test Case: 989 | Input/Output: [(41 34 38 -86) -86]
Test Case: 990 | Input/Output: [(57 -78 44 42) -78]
Test Case: 991 | Input/Output: [(15 82 100 59) 15]
Test Case: 992 | Input/Output: [(33 -46 68 -23) -46]
Test Case: 993 | Input/Output: [(31 37 -1 -16) -16]
Test Case: 994 | Input/Output: [(44 6 72 96) 6]
Test Case: 995 | Input/Output: [(47 -75 28 -88) -88]
Test Case: 996 | Input/Output: [(-26 23 -82 42) -82]
Test Case: 997 | Input/Output: [(-19 -39 -46 -69) -69]
Test Case: 998 | Input/Output: [(11 45 21 -76) -76]
Test Case: 999 | Input/Output: [(-92 -96 -41 50) -96]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x579dde54 clojush.problems.software.smallest$fn__7461@579dde54] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x6b899971 clojush.instructions.tag$tag_instruction_erc$fn__2160@6b899971] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x7cec3975 clojush.instructions.tag$tagged_instruction_erc$fn__2166@7cec3975] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x7e2a76be clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@7e2a76be]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 2000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x417bfebd clojush.problems.software.smallest$smallest_initial_report@417bfebd]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x2a4cb8ae clojush.problems.software.smallest$smallest_report@2a4cb8ae]
random-screen = false
random-seed = 7 -69 -102 -119 3 31 91 63 -81 -44 10 98 10 -124 -56 -64
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[99 20 99 99] 20] [[-89 -47 -47 -47] -89] [[-90 -90 52 -90] -90] [[-13 49 -13 -13] -13] [[-47 -47 57 -47] -47] [[64 64 64 69] 64] [[6 6 6 34] 6] [[49 -67 49 49] -67] [[-61 -61 -42 -61] -61] [[30 48 48 48] 30] [(-29 -29 -29 -29) -29] [(87 87 87 87) 87] [(3 3 3 3) 3] [(-51 -51 -51 -51) -51] [(-54 -54 -54 -54) -54] [(68 53 44 62) 44] [(100 78 96 34) 34] [(38 76 23 54) 23] [(50 44 87 46) 44] [(23 56 83 90) 23] [(48 51 46 73) 46] [(16 50 74 96) 16] [(40 74 89 70) 40] [(23 52 16 59) 16] [(6 74 95 48) 6] [(17 78 9 3) 3] [(45 69 36 68) 36] [(91 64 58 81) 58] [(0 61 98 28) 0] [(49 27 61 20) 20] [(16 60 100 46) 16] [(0 66 91 4) 0] [(83 78 24 19) 19] [(57 1 25 27) 1] [(51 42 43 69) 42] [(-41 -36 100 74) -41] [(-81 58 19 -31) -81] [(-37 -17 32 17) -37] [(32 16 49 97) 16] [(95 34 -6 32) -6] [(-69 -50 52 55) -69] [(-19 69 -75 65) -75] [(-38 -46 77 -33) -46] [(76 3 90 -100) -100] [(100 34 -89 -76) -89] [(-91 9 -84 2) -91] [(31 30 29 -59) -59] [(-24 84 -15 2) -24] [(79 -46 -71 10) -71] [(-59 -81 13 -100) -100] [(-43 -28 31 -9) -43] [(27 -33 -16 -43) -43] [(-35 88 80 98) -35] [(-31 -78 9 73) -78] [(-30 34 88 86) -30] [(-62 96 18 -59) -62] [(85 -26 88 30) -26] [(-41 -37 -9 -63) -63] [(-12 63 -98 -33) -98] [(-42 -12 6 -15) -42] [(12 2 18 -36) -36] [(63 -64 11 11) -64] [(26 3 69 -73) -73] [(-74 90 -58 15) -74] [(-12 46 -44 -97) -97] [(-59 84 -31 81) -59] [(-66 25 -76 60) -76] [(-29 41 90 -18) -29] [(-34 8 -12 -12) -34] [(47 29 -45 52) -45] [(84 -94 59 79) -94] [(-94 -52 97 55) -94] [(-71 70 37 -61) -71] [(-3 -82 -38 -30) -82] [(-84 -7 17 -41) -84] [(97 81 45 -45) -45] [(49 -62 16 -90) -90] [(15 -28 43 82) -28] [(62 83 -32 58) -32] [(-39 -98 -72 61) -98] [(-18 1 -82 81) -82] [(-12 36 -56 45) -56] [(8 -58 -73 93) -73] [(19 -18 -29 -34) -34] [(-29 98 -84 53) -84] [(-76 -42 -18 90) -76] [(0 29 -48 22) -48] [(66 26 -60 -71) -71] [(-53 -84 -10 -29) -84] [(20 17 98 -31) -31] [(-65 -66 32 -73) -73] [(69 -7 -37 18) -37] [(-1 -9 -86 -53) -86] [(28 -55 87 15) -55] [(-56 -89 30 -92) -92])
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 20                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: 49                 
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: -67                
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 53                 
Correct output: 34                  | Program output: 78                 
Correct output: 23                  | Program output: 76                 
Correct output: 44                  | Program output: 44                 
Correct output: 23                  | Program output: 56                 
Correct output: 46                  | Program output: 51                 
Correct output: 16                  | Program output: 50                 
Correct output: 40                  | Program output: 74                 
Correct output: 16                  | Program output: 52                 
Correct output: 6                   | Program output: 74                 
Correct output: 3                   | Program output: 78                 
Correct output: 36                  | Program output: 69                 
Correct output: 58                  | Program output: 64                 
Correct output: 0                   | Program output: 61                 
Correct output: 20                  | Program output: 27                 
Correct output: 16                  | Program output: 60                 
Correct output: 0                   | Program output: 66                 
Correct output: 19                  | Program output: 78                 
Correct output: 1                   | Program output: 1                  
Correct output: 42                  | Program output: 42                 
Correct output: -41                 | Program output: -36                
Correct output: -81                 | Program output: 58                 
Correct output: -37                 | Program output: -17                
Correct output: 16                  | Program output: 16                 
Correct output: -6                  | Program output: 34                 
Correct output: -69                 | Program output: -50                
Correct output: -75                 | Program output: 69                 
Correct output: -46                 | Program output: -46                
Correct output: -100                | Program output: 3                  
Correct output: -89                 | Program output: 34                 
Correct output: -91                 | Program output: 9                  
Correct output: -59                 | Program output: 30                 
Correct output: -24                 | Program output: 84                 
Correct output: -71                 | Program output: -46                
Correct output: -100                | Program output: -81                
Correct output: -43                 | Program output: -28                
Correct output: -43                 | Program output: -33                
Correct output: -35                 | Program output: 88                 
Correct output: -78                 | Program output: -78                
Correct output: -30                 | Program output: 34                 
Correct output: -62                 | Program output: 96                 
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -37                
Correct output: -98                 | Program output: 63                 
Correct output: -42                 | Program output: -12                
Correct output: -36                 | Program output: 2                  
Correct output: -64                 | Program output: -64                
Correct output: -73                 | Program output: 3                  
Correct output: -74                 | Program output: 90                 
Correct output: -97                 | Program output: 46                 
Correct output: -59                 | Program output: 84                 
Correct output: -76                 | Program output: 25                 
Correct output: -29                 | Program output: 41                 
Correct output: -34                 | Program output: 8                  
Correct output: -45                 | Program output: 29                 
Correct output: -94                 | Program output: -94                
Correct output: -94                 | Program output: -52                
Correct output: -71                 | Program output: 70                 
Correct output: -82                 | Program output: -82                
Correct output: -84                 | Program output: -7                 
Correct output: -45                 | Program output: 81                 
Correct output: -90                 | Program output: -62                
Correct output: -28                 | Program output: -28                
Correct output: -32                 | Program output: 83                 
Correct output: -98                 | Program output: -98                
Correct output: -82                 | Program output: 1                  
Correct output: -56                 | Program output: 36                 
Correct output: -73                 | Program output: -58                
Correct output: -34                 | Program output: -18                
Correct output: -84                 | Program output: 98                 
Correct output: -76                 | Program output: -42                
Correct output: -48                 | Program output: 29                 
Correct output: -71                 | Program output: 26                 
Correct output: -84                 | Program output: -84                
Correct output: -31                 | Program output: 17                 
Correct output: -73                 | Program output: -66                
Correct output: -37                 | Program output: -7                 
Correct output: -86                 | Program output: -9                 
Correct output: -55                 | Program output: -55                
Correct output: -92                 | Program output: -89                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_empty} {:close 0, :instruction in4} {:close 0, :instruction integer_empty} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_dec} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_rot} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_max} {:close 0, :instruction exec_eq} {:close 0, :instruction in4} {:close 1, :instruction tagged_270} {:close 1, :instruction boolean_pop} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_k_when_autoconstructing})
Lexicase best program: (boolean_stackdepth integer_empty in4 integer_empty in1 boolean_invert_second_then_and integer_dec boolean_rot boolean_swap boolean_xor boolean_rot exec_k_when_autoconstructing (integer_swap) (exec_eq integer_dup_times exec_pop (boolean_dup_times in2 print_integer boolean_rot boolean_yankdup integer_flush integer_max exec_eq in4 tagged_270) boolean_pop) exec_noop exec_k_when_autoconstructing () ())
Lexicase best errors: [0 1 1 0 1 0 0 1 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 35
Percent parens: 0.171
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_empty} {:close 0, :instruction in4} {:close 0, :instruction integer_empty} {:close 0, :instruction in1} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_dec} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_xor} {:close 1, :instruction boolean_rot} {:close 0, :instruction exec_k_when_autoconstructing} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_eq} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_pop} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction in2} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_flush} {:close 0, :instruction integer_max} {:close 0, :instruction exec_eq} {:close 0, :instruction in4} {:close 1, :instruction tagged_270} {:close 1, :instruction boolean_pop} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_k_when_autoconstructing})
Zero cases best program: (boolean_stackdepth integer_empty in4 integer_empty in1 boolean_invert_second_then_and integer_dec boolean_rot boolean_swap boolean_xor boolean_rot exec_k_when_autoconstructing (integer_swap) (exec_eq integer_dup_times exec_pop (boolean_dup_times in2 print_integer boolean_rot boolean_yankdup integer_flush integer_max exec_eq in4 tagged_270) boolean_pop) exec_noop exec_k_when_autoconstructing () ())
Zero cases best errors: [0 1 1 0 1 0 0 1 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 35
Percent parens: 0.171
--- Lexicase Population Statistics ---
Count of elite individuals by case: (7 4 2 4 2 8 11 2 9 5)
Population mean number of elite cases: 0.05
Count of perfect (error zero) individuals by case: (7 4 2 4 2 8 11 2 9 5)
Population mean number of perfect (error zero) cases: 0.05
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 0, :instruction integer_mult} {:close 0, :instruction exec_while} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_gt} {:close 0, :instruction integer_dup_items} {:close 1, :instruction integer_shove} {:close 2, :instruction print_boolean} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_gt} {:close 0, :instruction print_integer} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_mult} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_rot} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_dup_times} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_exec} {:close 1, :instruction exec_dup_items} {:close 1, :instruction integer_add} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction exec_stackdepth})
Best program: (in2 integer_mult exec_while (boolean_invert_first_then_and integer_gt integer_dup_items integer_shove) print_boolean exec_s_when_autoconstructing (integer_empty integer_gt print_integer integer_stackdepth exec_do*times (integer_mult boolean_yankdup integer_rot boolean_pop exec_dup_times () boolean_dup_items) exec_eq exec_k_when_autoconstructing (print_exec (exec_dup_items) integer_add) (integer_inc integer_fromboolean exec_stackdepth)) () ())
Errors: [0 1 1 0 1 0 0 1 0 0]
Total: 4
Mean: 0.4
Genome size: 28
Size: 38
Percent parens: 0.263
--- Population Statistics ---
Average total errors in population: 9.946
Median total errors in population: 10
Error averages by case: (0.993 0.996 0.998 0.996 0.998 0.992 0.989 0.998 0.991 0.995)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 52.332
Average program size in population (points): 71.823
Average percent parens in population: 0.275
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.006
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.29
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 506621
--- Timings ---
Current time: 1559584772025 milliseconds
Total Time:           2.7 seconds
Initialization:       0.1 seconds,  3.3%
Reproduction:         0.8 seconds, 29.2%
Fitness Testing:      1.9 seconds, 67.4%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 20                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: 49                 
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: -67                
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 53                 
Correct output: 34                  | Program output: 78                 
Correct output: 23                  | Program output: 76                 
Correct output: 44                  | Program output: 44                 
Correct output: 23                  | Program output: 56                 
Correct output: 46                  | Program output: 51                 
Correct output: 16                  | Program output: 50                 
Correct output: 40                  | Program output: 74                 
Correct output: 16                  | Program output: 52                 
Correct output: 6                   | Program output: 74                 
Correct output: 3                   | Program output: 78                 
Correct output: 36                  | Program output: 69                 
Correct output: 58                  | Program output: 64                 
Correct output: 0                   | Program output: 61                 
Correct output: 20                  | Program output: 27                 
Correct output: 16                  | Program output: 60                 
Correct output: 0                   | Program output: 66                 
Correct output: 19                  | Program output: 78                 
Correct output: 1                   | Program output: 1                  
Correct output: 42                  | Program output: 42                 
Correct output: -41                 | Program output: -36                
Correct output: -81                 | Program output: 58                 
Correct output: -37                 | Program output: -17                
Correct output: 16                  | Program output: 16                 
Correct output: -6                  | Program output: 34                 
Correct output: -69                 | Program output: -50                
Correct output: -75                 | Program output: 69                 
Correct output: -46                 | Program output: -46                
Correct output: -100                | Program output: 3                  
Correct output: -89                 | Program output: 34                 
Correct output: -91                 | Program output: 9                  
Correct output: -59                 | Program output: 30                 
Correct output: -24                 | Program output: 84                 
Correct output: -71                 | Program output: -46                
Correct output: -100                | Program output: -81                
Correct output: -43                 | Program output: -28                
Correct output: -43                 | Program output: -33                
Correct output: -35                 | Program output: 88                 
Correct output: -78                 | Program output: -78                
Correct output: -30                 | Program output: 34                 
Correct output: -62                 | Program output: 96                 
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -37                
Correct output: -98                 | Program output: 63                 
Correct output: -42                 | Program output: -12                
Correct output: -36                 | Program output: 2                  
Correct output: -64                 | Program output: -64                
Correct output: -73                 | Program output: 3                  
Correct output: -74                 | Program output: 90                 
Correct output: -97                 | Program output: 46                 
Correct output: -59                 | Program output: 84                 
Correct output: -76                 | Program output: 25                 
Correct output: -29                 | Program output: 41                 
Correct output: -34                 | Program output: 8                  
Correct output: -45                 | Program output: 29                 
Correct output: -94                 | Program output: -94                
Correct output: -94                 | Program output: -52                
Correct output: -71                 | Program output: 70                 
Correct output: -82                 | Program output: -82                
Correct output: -84                 | Program output: -7                 
Correct output: -45                 | Program output: 81                 
Correct output: -90                 | Program output: -62                
Correct output: -28                 | Program output: -28                
Correct output: -32                 | Program output: 83                 
Correct output: -98                 | Program output: -98                
Correct output: -82                 | Program output: 1                  
Correct output: -56                 | Program output: 36                 
Correct output: -73                 | Program output: -58                
Correct output: -34                 | Program output: -18                
Correct output: -84                 | Program output: 98                 
Correct output: -76                 | Program output: -42                
Correct output: -48                 | Program output: 29                 
Correct output: -71                 | Program output: 26                 
Correct output: -84                 | Program output: -84                
Correct output: -31                 | Program output: 17                 
Correct output: -73                 | Program output: -66                
Correct output: -37                 | Program output: -7                 
Correct output: -86                 | Program output: -9                 
Correct output: -55                 | Program output: -55                
Correct output: -92                 | Program output: -89                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 1 1 1 1 0 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 1 1 1 1 0 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (881 257 372 248 1000 373 248 257 1000 1000)
Population mean number of elite cases: 5.64
Count of perfect (error zero) individuals by case: (881 257 372 248 0 373 248 257 0 0)
Population mean number of perfect (error zero) cases: 2.64
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction boolean_pop} {:close 1, :instruction exec_yank} {:close 1, :instruction boolean_flush} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_yank} {:close 1, :instruction boolean_dup} {:close 0, :instruction in2} {:close 0, :instruction integer_lt} {:close 0, :instruction boolean_and} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_empty} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction exec_k} {:close 1, :instruction exec_yankdup} {:close 0, :instruction boolean_flush} {:close 0, :instruction integer_dec} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_dup} {:close 0, :instruction integer_dup_items} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_y} {:close 0, :instruction in1})
Best program: (boolean_pop exec_yank boolean_flush integer_lte integer_empty boolean_yank boolean_dup in2 integer_lt boolean_and exec_y_when_autoconstructing (print_integer boolean_empty integer_gte exec_y (boolean_dup_items exec_k (exec_yankdup) (boolean_flush integer_dec integer_empty boolean_shove integer_dup_items integer_flush exec_dup (integer_dup_items integer_dec exec_y (in1))))))
Errors: [0 1 0 1 1 0 1 1 1 1]
Total: 7
Mean: 0.7
Genome size: 29
Size: 36
Percent parens: 0.194
--- Population Statistics ---
Average total errors in population: 7.364
Median total errors in population: 7
Error averages by case: (0.119 0.743 0.628 0.752 1.0 0.627 0.752 0.743 1.0 1.0)
Error minima by case: (0 0 0 0 1 0 0 0 1 1)
Average genome size in population (length): 40.702
Average program size in population (points): 56.487
Average percent parens in population: 0.282
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.491
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 126
Genome diversity (% unique genomes):	 0.457
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 127
Syntactic diversity (% unique Push programs):	 0.444
Total error diversity:				 0.003
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.04
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 849084
--- Timings ---
Current time: 1559584775176 milliseconds
Total Time:           5.5 seconds
Initialization:       0.1 seconds,  1.7%
Reproduction:         2.6 seconds, 47.7%
Fitness Testing:      2.4 seconds, 44.1%
Report:               0.4 seconds,  6.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_min} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_rot} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gte} {:close 2, :instruction integer_sub} {:close 0, :instruction integer_min} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_yank} {:close 0, :instruction tagged_84} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_dup} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_when} {:close 0, :instruction 31} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction exec_flush} {:close 0, :instruction integer_mod} {:close 0, :instruction print_integer} {:close 1, :instruction integer_gt} {:close 1, :instruction integer_stackdepth} {:close 1, :instruction exec_dup_times} {:close 0, :instruction exec_when} {:close 1, :instruction exec_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_shove} {:close 1, :instruction boolean_eq} {:close 0, :instruction -40} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_if} {:close 1, :instruction exec_yankdup} {:close 0, :instruction integer_flush} {:close 1, :instruction print_boolean} {:close 0, :instruction exec_s} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction in3} {:close 1, :instruction boolean_pop})
Lexicase best program: (integer_min boolean_eq boolean_or exec_rot (in3 print_integer exec_s_when_autoconstructing (integer_pop exec_eq) (integer_gte integer_sub) () integer_min in4 integer_min boolean_yank tagged_84 exec_if (boolean_and exec_dup () exec_do*while (exec_when () 31 exec_s_when_autoconstructing (boolean_yankdup exec_flush) (integer_mod print_integer integer_gt) (integer_stackdepth) exec_dup_times () exec_when (exec_rot () (print_boolean exec_noop integer_gte integer_shove boolean_eq) (-40 integer_gt exec_if () (exec_yankdup) integer_flush print_boolean) exec_s (integer_dup_times exec_s_when_autoconstructing (in3 boolean_pop) () ()) () ()))) ()) () ())
Lexicase best errors: [0 1 1 0 0 0 1 1 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 76
Percent parens: 0.368
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_min} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_rot} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gte} {:close 2, :instruction integer_sub} {:close 0, :instruction integer_min} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_yank} {:close 0, :instruction tagged_84} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_dup} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_when} {:close 0, :instruction 31} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_yankdup} {:close 1, :instruction exec_flush} {:close 0, :instruction integer_mod} {:close 0, :instruction print_integer} {:close 1, :instruction integer_gt} {:close 1, :instruction integer_stackdepth} {:close 1, :instruction exec_dup_times} {:close 0, :instruction exec_when} {:close 1, :instruction exec_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_shove} {:close 1, :instruction boolean_eq} {:close 0, :instruction -40} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_if} {:close 1, :instruction exec_yankdup} {:close 0, :instruction integer_flush} {:close 1, :instruction print_boolean} {:close 0, :instruction exec_s} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction in3} {:close 1, :instruction boolean_pop})
Zero cases best program: (integer_min boolean_eq boolean_or exec_rot (in3 print_integer exec_s_when_autoconstructing (integer_pop exec_eq) (integer_gte integer_sub) () integer_min in4 integer_min boolean_yank tagged_84 exec_if (boolean_and exec_dup () exec_do*while (exec_when () 31 exec_s_when_autoconstructing (boolean_yankdup exec_flush) (integer_mod print_integer integer_gt) (integer_stackdepth) exec_dup_times () exec_when (exec_rot () (print_boolean exec_noop integer_gte integer_shove boolean_eq) (-40 integer_gt exec_if () (exec_yankdup) integer_flush print_boolean) exec_s (integer_dup_times exec_s_when_autoconstructing (in3 boolean_pop) () ()) () ()))) ()) () ())
Zero cases best errors: [0 1 1 0 0 0 1 1 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 76
Percent parens: 0.368
--- Lexicase Population Statistics ---
Count of elite individuals by case: (260 314 1000 902 260 260 1000 1000 328 313)
Population mean number of elite cases: 5.64
Count of perfect (error zero) individuals by case: (260 314 0 902 260 260 0 0 328 313)
Population mean number of perfect (error zero) cases: 2.64
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 2, :instruction boolean_frominteger} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_mult} {:close 1, :instruction integer_max} {:close 0, :instruction exec_dup_items} {:close 1, :instruction boolean_eq} {:close 0, :instruction boolean_rot} {:close 1, :instruction exec_dup} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_s} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction integer_pop} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction exec_s} {:close 0, :instruction exec_when} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_yankdup} {:close 1, :instruction exec_yankdup} {:close 0, :instruction exec_do*times} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_noop} {:close 0, :instruction integer_stackdepth} {:close 0, :instruction integer_empty} {:close 0, :instruction integer_lt} {:close 1, :instruction boolean_swap} {:close 1, :instruction exec_k_when_autoconstructing} {:close 1, :instruction integer_sub} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction in2} {:close 0, :instruction integer_sub} {:close 0, :instruction exec_if} {:close 1, :instruction integer_sub} {:close 0, :instruction print_integer} {:close 1, :instruction exec_while} {:close 0, :instruction exec_eq} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction 100} {:close 0, :instruction integer_lte} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction 24} {:close 0, :instruction exec_shove} {:close 2, :instruction integer_max} {:close 0, :instruction print_newline} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_invert_first_then_and} {:close 0, :instruction integer_gt} {:close 0, :instruction in3} {:close 0, :instruction exec_dup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_yank} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_dup_items} {:close 0, :instruction integer_dup} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_mult} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_sub} {:close 1, :instruction exec_if} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction integer_flush} {:close 1, :instruction boolean_xor} {:close 0, :instruction exec_flush} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_swap} {:close 1, :instruction boolean_dup_times} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_pop} {:close 2, :instruction integer_yankdup} {:close 0, :instruction boolean_invert_first_then_and} {:close 0, :instruction print_newline} {:close 0, :instruction integer_div})
Best program: (boolean_frominteger boolean_swap integer_mult integer_max exec_dup_items boolean_eq boolean_rot exec_dup () exec_rot (exec_s (boolean_dup_times integer_pop boolean_invert_second_then_and exec_s (exec_when (boolean_dup_items) boolean_pop exec_yankdup exec_yankdup) (exec_do*times (integer_lte exec_noop integer_stackdepth integer_empty integer_lt boolean_swap) exec_k_when_autoconstructing () (integer_sub) exec_dup_times (boolean_xor in2 integer_sub exec_if (integer_sub) (print_integer exec_while () exec_eq boolean_dup_times boolean_stackdepth 100 integer_lte boolean_invert_first_then_and) 24 exec_shove (integer_max)) print_newline integer_div boolean_invert_first_then_and) (integer_gt in3 exec_dup (print_integer exec_yank exec_y_when_autoconstructing (boolean_dup_items integer_dup boolean_swap integer_mult integer_lte integer_sub exec_if () (exec_y_when_autoconstructing (integer_flush boolean_xor) exec_flush boolean_shove integer_lte exec_flush exec_swap (boolean_dup_times) (integer_inc integer_pop integer_yankdup)) boolean_invert_first_then_and print_newline integer_div)))) () ()) () ())
Errors: [0 1 1 0 0 0 1 1 1 1]
Total: 6
Mean: 0.6
Genome size: 76
Size: 103
Percent parens: 0.262
--- Population Statistics ---
Average total errors in population: 7.363
Median total errors in population: 7
Error averages by case: (0.74 0.686 1.0 0.098 0.74 0.74 1.0 1.0 0.672 0.687)
Error minima by case: (0 0 1 0 0 0 1 1 0 0)
Average genome size in population (length): 38.212
Average program size in population (points): 53.336
Average percent parens in population: 0.294
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.999
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 167
Genome diversity (% unique genomes):	 0.543
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 175
Syntactic diversity (% unique Push programs):	 0.532
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.033
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1141077
--- Timings ---
Current time: 1559584778130 milliseconds
Total Time:           8.8 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         4.8 seconds, 54.0%
Fitness Testing:      2.8 seconds, 32.0%
Report:               1.1 seconds, 13.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 print_integer exec_dup_times ())
Lexicase best errors: [0 1 1 1 0 1 0 0 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 print_integer exec_dup_times ())
Zero cases best errors: [0 1 1 1 0 1 0 0 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (897 439 439 299 159 299 159 458 159 897)
Population mean number of elite cases: 4.20
Count of perfect (error zero) individuals by case: (897 439 439 299 159 299 159 458 159 897)
Population mean number of perfect (error zero) cases: 4.20
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_invert_first_then_and})
Best program: (in4 print_integer boolean_invert_first_then_and)
Errors: [0 1 1 1 0 1 0 0 0 0]
Total: 4
Mean: 0.4
Genome size: 3
Size: 4
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 5.795
Median total errors in population: 6
Error averages by case: (0.103 0.561 0.561 0.701 0.841 0.701 0.841 0.542 0.841 0.103)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 42.403
Average program size in population (points): 60.145
Average percent parens in population: 0.295
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.46575
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 81
Genome diversity (% unique genomes):	 0.667
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 83
Syntactic diversity (% unique Push programs):	 0.651
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.034
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 1457550
--- Timings ---
Current time: 1559584781085 milliseconds
Total Time:          12.0 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         7.1 seconds, 59.5%
Fitness Testing:      3.2 seconds, 27.1%
Report:               1.5 seconds, 12.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 print_integer exec_dup_times ())
Lexicase best errors: [0 1 1 1 1 1 1 1 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 8
Lexicase best mean error: 0.8
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 print_integer exec_dup_times ())
Zero cases best errors: [0 1 1 1 1 1 1 1 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 2
Zero cases best total error: 8
Zero cases best mean error: 0.8
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (445 247 1000 247 1000 234 234 1000 445 1000)
Population mean number of elite cases: 5.85
Count of perfect (error zero) individuals by case: (445 247 0 247 0 234 234 0 445 0)
Population mean number of perfect (error zero) cases: 1.85
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction integer_yank} {:close 1, :instruction print_integer} {:close 1, :instruction tag_boolean_859} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 1, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_empty} {:close 0, :instruction boolean_pop} {:close 1, :instruction exec_dup_times} {:close 1, :instruction boolean_dup_items} {:close 0, :instruction exec_eq} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction print_exec} {:close 1, :instruction exec_dup_items} {:close 1, :instruction integer_add} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction exec_stackdepth})
Best program: (in4 integer_yank print_integer tag_boolean_859 exec_swap (boolean_xor integer_swap) (exec_empty boolean_stackdepth boolean_empty boolean_pop exec_dup_times () boolean_dup_items) exec_eq exec_k_when_autoconstructing (print_exec (exec_dup_items) integer_add) (integer_inc integer_fromboolean exec_stackdepth))
Errors: [0 1 1 1 1 1 1 1 0 1]
Total: 8
Mean: 0.8
Genome size: 21
Size: 28
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 8.148
Median total errors in population: 8
Error averages by case: (0.555 0.753 1.0 0.753 1.0 0.766 0.766 1.0 0.555 1.0)
Error minima by case: (0 0 1 0 1 0 0 1 0 1)
Average genome size in population (length): 31.418
Average program size in population (points): 44.224
Average percent parens in population: 0.304
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 5.9925
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 219
Genome diversity (% unique genomes):	 0.581
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 230
Syntactic diversity (% unique Push programs):	 0.567
Total error diversity:				 0.002
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 1702341
--- Timings ---
Current time: 1559584783596 milliseconds
Total Time:          14.5 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:         9.1 seconds, 63.0%
Fitness Testing:      3.6 seconds, 24.7%
Report:               1.7 seconds, 11.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_min} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_rot} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gte} {:close 2, :instruction integer_sub} {:close 0, :instruction integer_min} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_yank} {:close 0, :instruction tagged_84} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_dup} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_when} {:close 0, :instruction 31} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_mod} {:close 0, :instruction print_integer} {:close 1, :instruction integer_gt} {:close 1, :instruction integer_stackdepth} {:close 1, :instruction exec_dup_times} {:close 0, :instruction exec_when} {:close 1, :instruction exec_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_when} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction -40} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_if} {:close 1, :instruction exec_yankdup} {:close 0, :instruction integer_flush} {:close 1, :instruction print_boolean} {:close 0, :instruction exec_s} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_k} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_flush})
Lexicase best program: (integer_min boolean_eq boolean_or exec_rot (in3 print_integer exec_s_when_autoconstructing (integer_pop exec_eq) (integer_gte integer_sub) () integer_min in4 integer_min boolean_yank tagged_84 exec_if (boolean_and exec_dup () exec_do*while (exec_when () 31 exec_s_when_autoconstructing (boolean_yankdup exec_flush integer_mod print_integer integer_gt) (integer_stackdepth) (exec_dup_times () exec_when (exec_rot () (print_boolean exec_noop exec_when (integer_shove exec_y_when_autoconstructing () -40 integer_gt exec_if () (exec_yankdup) integer_flush print_boolean) exec_s (integer_dup_times exec_s_when_autoconstructing (exec_while () boolean_yankdup integer_mod exec_k_when_autoconstructing (exec_k (integer_yankdup exec_if (boolean_swap exec_rot (exec_k_when_autoconstructing (integer_dup_times integer_add exec_do*count (boolean_flush)) ()) () ()) ()) ()) ()) () ()) () ()) ())))) ()) () ())
Lexicase best errors: [0 0 0 0 1 0 0 1 0 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 103
Percent parens: 0.417
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_min} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_rot} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gte} {:close 2, :instruction integer_sub} {:close 0, :instruction integer_min} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_yank} {:close 0, :instruction tagged_84} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_dup} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_when} {:close 0, :instruction 31} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_mod} {:close 0, :instruction print_integer} {:close 1, :instruction integer_gt} {:close 1, :instruction integer_stackdepth} {:close 1, :instruction exec_dup_times} {:close 0, :instruction exec_when} {:close 1, :instruction exec_rot} {:close 0, :instruction print_boolean} {:close 0, :instruction exec_noop} {:close 0, :instruction exec_when} {:close 0, :instruction integer_shove} {:close 1, :instruction exec_y_when_autoconstructing} {:close 0, :instruction -40} {:close 0, :instruction integer_gt} {:close 1, :instruction exec_if} {:close 1, :instruction exec_yankdup} {:close 0, :instruction integer_flush} {:close 1, :instruction print_boolean} {:close 0, :instruction exec_s} {:close 0, :instruction integer_dup_times} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction exec_k} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_flush})
Zero cases best program: (integer_min boolean_eq boolean_or exec_rot (in3 print_integer exec_s_when_autoconstructing (integer_pop exec_eq) (integer_gte integer_sub) () integer_min in4 integer_min boolean_yank tagged_84 exec_if (boolean_and exec_dup () exec_do*while (exec_when () 31 exec_s_when_autoconstructing (boolean_yankdup exec_flush integer_mod print_integer integer_gt) (integer_stackdepth) (exec_dup_times () exec_when (exec_rot () (print_boolean exec_noop exec_when (integer_shove exec_y_when_autoconstructing () -40 integer_gt exec_if () (exec_yankdup) integer_flush print_boolean) exec_s (integer_dup_times exec_s_when_autoconstructing (exec_while () boolean_yankdup integer_mod exec_k_when_autoconstructing (exec_k (integer_yankdup exec_if (boolean_swap exec_rot (exec_k_when_autoconstructing (integer_dup_times integer_add exec_do*count (boolean_flush)) ()) () ()) ()) ()) ()) () ()) () ()) ())))) ()) () ())
Zero cases best errors: [0 0 0 0 1 0 0 1 0 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 103
Percent parens: 0.417
--- Lexicase Population Statistics ---
Count of elite individuals by case: (906 289 289 289 329 906 289 1000 289 1000)
Population mean number of elite cases: 5.59
Count of perfect (error zero) individuals by case: (906 289 289 289 329 906 289 0 289 0)
Population mean number of perfect (error zero) cases: 3.59
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction integer_min} {:close 0, :instruction boolean_eq} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_rot} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_pop} {:close 1, :instruction exec_eq} {:close 0, :instruction integer_gte} {:close 1, :instruction integer_sub} {:close 0, :instruction integer_min} {:close 0, :instruction in4} {:close 0, :instruction integer_min} {:close 0, :instruction boolean_yank} {:close 0, :instruction tagged_84} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_and} {:close 1, :instruction exec_dup} {:close 0, :instruction print_exec} {:close 1, :instruction exec_dup_items} {:close 1, :instruction integer_add} {:close 0, :instruction integer_inc} {:close 0, :instruction integer_fromboolean} {:close 1, :instruction exec_stackdepth})
Best program: (integer_min boolean_eq boolean_or exec_rot (in3 print_integer exec_s_when_autoconstructing (integer_pop exec_eq) (integer_gte integer_sub) (integer_min in4 integer_min boolean_yank tagged_84 exec_if (boolean_and exec_dup () print_exec (exec_dup_items) integer_add) (integer_inc integer_fromboolean exec_stackdepth))) () ())
Errors: [0 0 0 0 1 0 0 1 0 1]
Total: 3
Mean: 0.3
Genome size: 25
Size: 36
Percent parens: 0.306
--- Population Statistics ---
Average total errors in population: 6.414
Median total errors in population: 7
Error averages by case: (0.094 0.711 0.711 0.711 0.671 0.094 0.711 1.0 0.711 1.0)
Error minima by case: (0 0 0 0 0 0 0 1 0 1)
Average genome size in population (length): 30.871
Average program size in population (points): 43.693
Average percent parens in population: 0.303
Minimum age in population: 5.0
Maximum age in population: 9.1875
Average age in population: 7.4583125
Median age in population: 7.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 192
Genome diversity (% unique genomes):	 0.611
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 203
Syntactic diversity (% unique Push programs):	 0.596
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 1945092
--- Timings ---
Current time: 1559584786182 milliseconds
Total Time:          17.1 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        11.2 seconds, 65.6%
Fitness Testing:      3.9 seconds, 22.8%
Report:               1.9 seconds, 11.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 1, :instruction integer_yank} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_859} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_eq} {:close 0, :instruction in4} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_max} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_do*count} {:close 0, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_y} {:close 0, :instruction exec_do*range})
Lexicase best program: (in4 integer_yank print_integer tag_boolean_859 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth integer_eq in4 exec_pop (integer_rot integer_shove integer_mod boolean_frominteger integer_empty exec_y (boolean_yank exec_flush integer_dup integer_max) integer_lte boolean_dup_times exec_do*count (print_integer integer_lte integer_add) exec_do*count (in4 boolean_shove exec_flush exec_y (exec_do*range ())))) () ()) ())
Lexicase best errors: [0 0 1 1 0 0 1 1 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 49
Percent parens: 0.245
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 1, :instruction integer_yank} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_859} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_eq} {:close 0, :instruction in4} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_max} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_do*count} {:close 0, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 1, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_y} {:close 0, :instruction exec_do*range})
Zero cases best program: (in4 integer_yank print_integer tag_boolean_859 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth integer_eq in4 exec_pop (integer_rot integer_shove integer_mod boolean_frominteger integer_empty exec_y (boolean_yank exec_flush integer_dup integer_max) integer_lte boolean_dup_times exec_do*count (print_integer integer_lte integer_add) exec_do*count (in4 boolean_shove exec_flush exec_y (exec_do*range ())))) () ()) ())
Zero cases best errors: [0 0 1 1 0 0 1 1 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 49
Percent parens: 0.245
--- Lexicase Population Statistics ---
Count of elite individuals by case: (132 132 1000 783 132 132 783 1000 783 1000)
Population mean number of elite cases: 5.88
Count of perfect (error zero) individuals by case: (132 132 0 783 132 132 783 0 783 0)
Population mean number of perfect (error zero) cases: 2.88
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction integer_yank} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_859} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_eq} {:close 1, :instruction in4} {:close 0, :instruction exec_pop} {:close 0, :instruction integer_rot} {:close 0, :instruction integer_shove} {:close 0, :instruction integer_mod} {:close 0, :instruction boolean_frominteger} {:close 0, :instruction integer_empty} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_yank} {:close 0, :instruction exec_flush} {:close 0, :instruction integer_dup} {:close 1, :instruction integer_max} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction exec_do*count} {:close 0, :instruction print_integer} {:close 0, :instruction integer_lte} {:close 0, :instruction integer_add} {:close 1, :instruction print_exec} {:close 0, :instruction integer_flush} {:close 0, :instruction boolean_empty} {:close 1, :instruction exec_noop} {:close 1, :instruction integer_empty} {:close 0, :instruction exec_stackdepth} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_mod} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_gte} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_rot} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_dup_times} {:close 0, :instruction integer_add} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_flush})
Best program: (in4 integer_yank print_integer tag_boolean_859 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth integer_eq in4) (exec_pop (integer_rot integer_shove integer_mod boolean_frominteger integer_empty exec_y (boolean_yank exec_flush integer_dup integer_max) integer_lte boolean_dup_times exec_do*count (print_integer integer_lte integer_add print_exec () integer_flush boolean_empty exec_noop) integer_empty) exec_stackdepth exec_while () boolean_yankdup integer_mod exec_k_when_autoconstructing (integer_gte integer_yankdup exec_if (boolean_swap exec_rot (exec_k_when_autoconstructing (integer_dup_times integer_add exec_do*count (boolean_flush)) ()) () ()) ()) ()) ()) ())
Errors: [0 0 1 1 0 0 1 1 1 1]
Total: 6
Mean: 0.6
Genome size: 51
Size: 72
Percent parens: 0.292
--- Population Statistics ---
Average total errors in population: 7.123
Median total errors in population: 7
Error averages by case: (0.868 0.868 1.0 0.217 0.868 0.868 0.217 1.0 0.217 1.0)
Error minima by case: (0 0 1 0 0 0 0 1 0 1)
Average genome size in population (length): 39.618
Average program size in population (points): 59.303
Average percent parens in population: 0.346
Minimum age in population: 6.0
Maximum age in population: 10.9375
Average age in population: 8.897
Median age in population: 8.9375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 85
Genome diversity (% unique genomes):	 0.636
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 89
Syntactic diversity (% unique Push programs):	 0.632
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.022
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 2131674
--- Timings ---
Current time: 1559584788889 milliseconds
Total Time:          19.7 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        13.4 seconds, 68.1%
Fitness Testing:      4.1 seconds, 21.0%
Report:               2.1 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Lexicase best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Lexicase best errors: [1 0 0 1 0 1 0 0 0 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 18
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Zero cases best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Zero cases best errors: [1 0 0 1 0 1 0 0 0 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 18
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 1 939 1000 548 546 1 1 1 1000)
Population mean number of elite cases: 5.04
Count of perfect (error zero) individuals by case: (0 1 939 0 548 546 1 1 1 0)
Population mean number of perfect (error zero) cases: 2.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Errors: [1 0 0 1 0 1 0 0 0 1]
Total: 4
Mean: 0.4
Genome size: 12
Size: 18
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.963
Median total errors in population: 7
Error averages by case: (1.0 0.999 0.061 1.0 0.452 0.454 0.999 0.999 0.999 1.0)
Error minima by case: (1 0 0 1 0 0 0 0 0 1)
Average genome size in population (length): 23.888
Average program size in population (points): 35.435
Average percent parens in population: 0.354
Minimum age in population: 7.5
Maximum age in population: 12.25
Average age in population: 10.368640625
Median age in population: 10.4375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 356
Genome diversity (% unique genomes):	 0.471
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 380
Syntactic diversity (% unique Push programs):	 0.468
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 2259893
--- Timings ---
Current time: 1559584790874 milliseconds
Total Time:          21.8 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        15.1 seconds, 69.1%
Fitness Testing:      4.3 seconds, 19.9%
Report:               2.3 seconds, 10.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Lexicase best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Lexicase best errors: [0 1 0 1 0 1 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 18
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Zero cases best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Zero cases best errors: [0 1 0 1 0 1 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 18
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (768 1 768 1000 959 1000 959 959 769 768)
Population mean number of elite cases: 7.95
Count of perfect (error zero) individuals by case: (768 1 768 0 959 0 959 959 769 768)
Population mean number of perfect (error zero) cases: 5.95
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Errors: [0 1 0 1 0 1 0 0 0 0]
Total: 3
Mean: 0.3
Genome size: 12
Size: 18
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 4.049
Median total errors in population: 3
Error averages by case: (0.232 0.999 0.232 1.0 0.041 1.0 0.041 0.041 0.231 0.232)
Error minima by case: (0 0 0 1 0 1 0 0 0 0)
Average genome size in population (length): 11.722
Average program size in population (points): 17.414
Average percent parens in population: 0.338
Minimum age in population: 9.90625
Maximum age in population: 13.4453125
Average age in population: 12.1427109375
Median age in population: 12.0078125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 648
Genome diversity (% unique genomes):	 0.175
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 675
Syntactic diversity (% unique Push programs):	 0.16
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 2373418
--- Timings ---
Current time: 1559584792926 milliseconds
Total Time:          23.9 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        16.8 seconds, 70.4%
Fitness Testing:      4.5 seconds, 18.9%
Report:               2.5 seconds, 10.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 9
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 9
;;******************************
;; -*- Smallest problem report - generation 9
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Lexicase best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Lexicase best errors: [1 0 1 1 0 0 0 1 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 18
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Zero cases best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Zero cases best errors: [1 0 1 1 0 0 0 1 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 18
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (239 727 239 4 727 971 727 239 970 731)
Population mean number of elite cases: 5.57
Count of perfect (error zero) individuals by case: (239 727 239 4 727 971 727 239 970 731)
Population mean number of perfect (error zero) cases: 5.57
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Errors: [1 0 1 1 0 0 0 1 0 0]
Total: 4
Mean: 0.4
Genome size: 12
Size: 18
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 4.426
Median total errors in population: 4
Error averages by case: (0.761 0.273 0.761 0.996 0.273 0.029 0.273 0.761 0.03 0.269)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.632
Average program size in population (points): 14.526
Average percent parens in population: 0.347
Minimum age in population: 11.9921875
Maximum age in population: 14.9375
Average age in population: 13.7302109375
Median age in population: 13.703125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 520
Genome diversity (% unique genomes):	 0.167
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 557
Syntactic diversity (% unique Push programs):	 0.157
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 10000
Number of point (instruction) evaluations so far: 2473559
--- Timings ---
Current time: 1559584794817 milliseconds
Total Time:          25.8 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        18.4 seconds, 71.5%
Fitness Testing:      4.7 seconds, 18.1%
Report:               2.6 seconds, 10.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 9
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 10
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 10
;;******************************
;; -*- Smallest problem report - generation 10
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 print_integer exec_dup_times ())
Lexicase best errors: [0 1 0 1 1 0 0 1 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 print_integer exec_dup_times ())
Zero cases best errors: [0 1 0 1 1 0 0 1 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (367 1000 367 1000 442 809 367 161 161 1000)
Population mean number of elite cases: 5.67
Count of perfect (error zero) individuals by case: (367 0 367 0 442 809 367 161 161 0)
Population mean number of perfect (error zero) cases: 2.67
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in3 print_integer exec_dup_times ())
Errors: [0 1 0 1 1 0 0 1 1 1]
Total: 6
Mean: 0.6
Genome size: 3
Size: 5
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 7.326
Median total errors in population: 8
Error averages by case: (0.633 1.0 0.633 1.0 0.558 0.191 0.633 0.839 0.839 1.0)
Error minima by case: (0 1 0 1 0 0 0 0 0 1)
Average genome size in population (length): 8.345
Average program size in population (points): 12.654
Average percent parens in population: 0.356
Minimum age in population: 12.9921875
Maximum age in population: 16.759765625
Average age in population: 15.23433984375
Median age in population: 15.203125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 345
Genome diversity (% unique genomes):	 0.174
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 354
Syntactic diversity (% unique Push programs):	 0.157
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 11000
Number of point (instruction) evaluations so far: 2561830
--- Timings ---
Current time: 1559584796627 milliseconds
Total Time:          27.6 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        20.0 seconds, 72.4%
Fitness Testing:      4.8 seconds, 17.4%
Report:               2.7 seconds,  9.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 10
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 11
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 11
;;******************************
;; -*- Smallest problem report - generation 11
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 print_integer exec_dup_times ())
Lexicase best errors: [1 1 1 0 1 0 1 0 0 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 print_integer exec_dup_times ())
Zero cases best errors: [1 1 1 0 1 0 1 0 0 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1 170 285 522 170 693 285 522 978 285)
Population mean number of elite cases: 3.91
Count of perfect (error zero) individuals by case: (1 170 285 522 170 693 285 522 978 285)
Population mean number of perfect (error zero) cases: 3.91
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction integer_dup} {:close 0, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Best program: (in4 integer_dup print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Errors: [1 1 0 1 1 1 0 1 0 0]
Total: 6
Mean: 0.6
Genome size: 12
Size: 18
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.089
Median total errors in population: 6
Error averages by case: (0.999 0.83 0.715 0.478 0.83 0.307 0.715 0.478 0.022 0.715)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 7.023
Average program size in population (points): 10.744
Average percent parens in population: 0.364
Minimum age in population: 14.703125
Maximum age in population: 18.53125
Average age in population: 16.741607421875
Median age in population: 16.7841796875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 471
Genome diversity (% unique genomes):	 0.171
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 496
Syntactic diversity (% unique Push programs):	 0.152
Total error diversity:				 0.003
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 12000
Number of point (instruction) evaluations so far: 2636803
--- Timings ---
Current time: 1559584798732 milliseconds
Total Time:          29.7 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        21.9 seconds, 73.7%
Fitness Testing:      4.9 seconds, 16.6%
Report:               2.8 seconds,  9.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 11
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 12
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 12
;;******************************
;; -*- Smallest problem report - generation 12
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Lexicase best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Lexicase best errors: [1 1 0 1 0 0 0 1 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 18
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Zero cases best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Zero cases best errors: [1 1 0 1 0 0 0 1 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 18
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (135 259 963 259 248 248 963 135 248 248)
Population mean number of elite cases: 3.71
Count of perfect (error zero) individuals by case: (135 259 963 259 248 248 963 135 248 248)
Population mean number of perfect (error zero) cases: 3.71
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Best program: (in4 in1 print_integer tag_boolean_765 tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Errors: [1 1 0 1 0 0 0 1 0 0]
Total: 4
Mean: 0.4
Genome size: 13
Size: 19
Percent parens: 0.316
--- Population Statistics ---
Average total errors in population: 6.294
Median total errors in population: 6
Error averages by case: (0.865 0.741 0.037 0.741 0.752 0.752 0.037 0.865 0.752 0.752)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.159
Average program size in population (points): 13.795
Average percent parens in population: 0.346
Minimum age in population: 15.9033203125
Maximum age in population: 20.1865234375
Average age in population: 18.3391533203125
Median age in population: 18.37744140625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 222
Genome diversity (% unique genomes):	 0.239
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 238
Syntactic diversity (% unique Push programs):	 0.215
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 13000
Number of point (instruction) evaluations so far: 2739198
--- Timings ---
Current time: 1559584801355 milliseconds
Total Time:          32.3 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        24.2 seconds, 74.9%
Fitness Testing:      5.1 seconds, 15.7%
Report:               2.9 seconds,  9.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 12
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 13
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 13
;;******************************
;; -*- Smallest problem report - generation 13
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_and} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Lexicase best program: (boolean_and in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_xor exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Lexicase best errors: [1 1 0 0 0 0 0 0 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 18
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_and} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Zero cases best program: (boolean_and in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_xor exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Zero cases best errors: [1 1 0 0 0 0 0 0 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 18
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (251 5 972 721 972 972 460 460 251 251)
Population mean number of elite cases: 5.32
Count of perfect (error zero) individuals by case: (251 5 972 721 972 972 460 460 251 251)
Population mean number of perfect (error zero) cases: 5.32
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in3 print_integer exec_dup_times ())
Errors: [0 1 0 1 0 0 1 1 0 0]
Total: 4
Mean: 0.4
Genome size: 3
Size: 5
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 4.685
Median total errors in population: 4
Error averages by case: (0.749 0.995 0.028 0.279 0.028 0.028 0.54 0.54 0.749 0.749)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.145
Average program size in population (points): 13.79
Average percent parens in population: 0.345
Minimum age in population: 16.9033203125
Maximum age in population: 21.753173828125
Average age in population: 19.87159423828125
Median age in population: 19.93994140625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 209
Genome diversity (% unique genomes):	 0.219
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 226
Syntactic diversity (% unique Push programs):	 0.197
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 14000
Number of point (instruction) evaluations so far: 2850407
--- Timings ---
Current time: 1559584803806 milliseconds
Total Time:          34.8 seconds
Initialization:       0.1 seconds,  0.3%
Reproduction:        26.4 seconds, 75.9%
Fitness Testing:      5.2 seconds, 15.0%
Report:               3.1 seconds,  8.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 13
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 14
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 14
;;******************************
;; -*- Smallest problem report - generation 14
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_stackdepth})
Lexicase best program: (in4 in1 print_integer tag_boolean_765 exec_if (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Lexicase best errors: [1 0 0 1 0 1 0 0 1 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 18
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_if} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 1, :instruction boolean_stackdepth})
Zero cases best program: (in4 in1 print_integer tag_boolean_765 exec_if (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Zero cases best errors: [1 0 0 1 0 1 0 0 1 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 18
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (439 973 346 1000 973 1000 346 347 188 1000)
Population mean number of elite cases: 6.61
Count of perfect (error zero) individuals by case: (439 973 346 0 973 0 346 347 188 0)
Population mean number of perfect (error zero) cases: 3.61
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 1, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup})
Best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth) (exec_s_when_autoconstructing (boolean_dup) () ()))
Errors: [1 0 0 1 0 1 0 0 1 1]
Total: 5
Mean: 0.5
Genome size: 11
Size: 17
Percent parens: 0.353
--- Population Statistics ---
Average total errors in population: 6.388
Median total errors in population: 7
Error averages by case: (0.561 0.027 0.654 1.0 0.027 1.0 0.654 0.653 0.812 1.0)
Error minima by case: (0 0 0 1 0 1 0 0 0 1)
Average genome size in population (length): 7.568
Average program size in population (points): 11.581
Average percent parens in population: 0.358
Minimum age in population: 17.9033203125
Maximum age in population: 22.9801025390625
Average age in population: 21.34583605957031
Median age in population: 21.399169921875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 347
Genome diversity (% unique genomes):	 0.186
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 382
Syntactic diversity (% unique Push programs):	 0.166
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.014
--- Run Statistics ---
Number of program evaluations used so far: 15000
Number of point (instruction) evaluations so far: 2946170
--- Timings ---
Current time: 1559584806208 milliseconds
Total Time:          37.2 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        28.6 seconds, 76.9%
Fitness Testing:      5.4 seconds, 14.5%
Report:               3.1 seconds,  8.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 14
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 15
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 15
;;******************************
;; -*- Smallest problem report - generation 15
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Lexicase best program: (in4 in1 print_integer tag_boolean_765 boolean_xor boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ())
Lexicase best errors: [0 1 0 1 0 1 1 1 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 16
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction boolean_xor} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Zero cases best program: (in4 in1 print_integer tag_boolean_765 boolean_xor boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ())
Zero cases best errors: [0 1 0 1 0 1 1 1 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 16
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (584 191 584 1000 584 1000 197 1000 191 781)
Population mean number of elite cases: 6.11
Count of perfect (error zero) individuals by case: (584 191 584 0 584 0 197 0 191 781)
Population mean number of perfect (error zero) cases: 3.11
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Best program: (in4 in1 print_integer tag_boolean_765 tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Errors: [0 1 0 1 0 1 1 1 1 0]
Total: 6
Mean: 0.6
Genome size: 13
Size: 19
Percent parens: 0.316
--- Population Statistics ---
Average total errors in population: 6.888
Median total errors in population: 6
Error averages by case: (0.416 0.809 0.416 1.0 0.416 1.0 0.803 1.0 0.809 0.219)
Error minima by case: (0 0 0 1 0 1 0 1 0 0)
Average genome size in population (length): 9.38
Average program size in population (points): 14.085
Average percent parens in population: 0.337
Minimum age in population: 19.8203125
Maximum age in population: 24.9473876953125
Average age in population: 22.82118420410156
Median age in population: 22.87631225585938
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 147
Genome diversity (% unique genomes):	 0.262
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 166
Syntactic diversity (% unique Push programs):	 0.228
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 16000
Number of point (instruction) evaluations so far: 3090387
--- Timings ---
Current time: 1559584808412 milliseconds
Total Time:          39.4 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        30.4 seconds, 77.4%
Fitness Testing:      5.6 seconds, 14.1%
Report:               3.3 seconds,  8.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 15
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 16
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 16
;;******************************
;; -*- Smallest problem report - generation 16
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction in2} {:close 0, :instruction boolean_xor})
Lexicase best program: (in4 in1 print_integer tag_boolean_765 in2 boolean_xor)
Lexicase best errors: [1 1 0 1 0 1 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 7
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction in2} {:close 0, :instruction boolean_xor})
Zero cases best program: (in4 in1 print_integer tag_boolean_765 in2 boolean_xor)
Zero cases best errors: [1 1 0 1 0 1 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 7
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (285 172 520 1000 520 1000 172 1000 520 520)
Population mean number of elite cases: 5.71
Count of perfect (error zero) individuals by case: (285 172 520 0 520 0 172 0 520 520)
Population mean number of perfect (error zero) cases: 2.71
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Errors: [1 1 0 1 0 1 1 1 0 0]
Total: 6
Mean: 0.6
Genome size: 12
Size: 18
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.291
Median total errors in population: 6
Error averages by case: (0.715 0.828 0.48 1.0 0.48 1.0 0.828 1.0 0.48 0.48)
Error minima by case: (0 0 0 1 0 1 0 1 0 0)
Average genome size in population (length): 8.72
Average program size in population (points): 13.172
Average percent parens in population: 0.343
Minimum age in population: 21.56494140625
Maximum age in population: 26.2047119140625
Average age in population: 24.31291189575195
Median age in population: 24.37237548828125
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 198
Genome diversity (% unique genomes):	 0.276
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 229
Syntactic diversity (% unique Push programs):	 0.241
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 17000
Number of point (instruction) evaluations so far: 3236584
--- Timings ---
Current time: 1559584810530 milliseconds
Total Time:          41.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        32.3 seconds, 77.8%
Fitness Testing:      5.8 seconds, 13.9%
Report:               3.4 seconds,  8.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 16
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 17
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 17
;;******************************
;; -*- Smallest problem report - generation 17
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Lexicase best program: (in4 in1 print_integer tag_boolean_765 exec_dup_times (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()))
Lexicase best errors: [1 0 1 1 0 1 0 1 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 17
Percent parens: 0.294
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_dup_times} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Zero cases best program: (in4 in1 print_integer tag_boolean_765 exec_dup_times (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()))
Zero cases best errors: [1 0 1 1 0 1 0 1 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 17
Percent parens: 0.294
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 545 1000 1000 965 288 545 1000 288 131)
Population mean number of elite cases: 6.76
Count of perfect (error zero) individuals by case: (0 545 0 0 965 288 545 0 288 131)
Population mean number of perfect (error zero) cases: 2.76
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ())
Errors: [1 0 1 1 0 1 0 1 1 1]
Total: 7
Mean: 0.7
Genome size: 12
Size: 18
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.238
Median total errors in population: 7
Error averages by case: (1.0 0.455 1.0 1.0 0.035 0.712 0.455 1.0 0.712 0.869)
Error minima by case: (1 0 1 1 0 0 0 1 0 0)
Average genome size in population (length): 9.822
Average program size in population (points): 14.777
Average percent parens in population: 0.334
Minimum age in population: 22.7724609375
Maximum age in population: 27.61824035644531
Average age in population: 25.73431784057617
Median age in population: 25.79743194580078
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 91
Genome diversity (% unique genomes):	 0.324
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 116
Syntactic diversity (% unique Push programs):	 0.291
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 18000
Number of point (instruction) evaluations so far: 3368543
--- Timings ---
Current time: 1559584812650 milliseconds
Total Time:          43.6 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        34.1 seconds, 78.1%
Fitness Testing:      5.9 seconds, 13.6%
Report:               3.5 seconds,  8.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 17
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 18
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 18
;;******************************
;; -*- Smallest problem report - generation 18
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_dup})
Lexicase best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_flush exec_empty boolean_stackdepth boolean_not boolean_dup) ())
Lexicase best errors: [0 1 1 1 1 1 1 1 0 0]
Lexicase best number of elite cases: 3
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 14
Percent parens: 0.214
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_flush} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_dup})
Zero cases best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_flush exec_empty boolean_stackdepth boolean_not boolean_dup) ())
Zero cases best errors: [0 1 1 1 1 1 1 1 0 0]
Zero cases best number of elite cases: 3
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 14
Percent parens: 0.214
--- Lexicase Population Statistics ---
Count of elite individuals by case: (359 405 207 405 405 1 1 1 359 359)
Population mean number of elite cases: 2.50
Count of perfect (error zero) individuals by case: (359 405 207 405 405 1 1 1 359 359)
Population mean number of perfect (error zero) cases: 2.50
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_stackdepth})
Best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_do*count (boolean_stackdepth exec_s_when_autoconstructing (exec_dup_items boolean_stackdepth) () ())) ())
Errors: [0 1 1 1 1 1 1 1 0 0]
Total: 7
Mean: 0.7
Genome size: 12
Size: 19
Percent parens: 0.368
--- Population Statistics ---
Average total errors in population: 7.498
Median total errors in population: 7
Error averages by case: (0.641 0.595 0.793 0.595 0.595 0.999 0.999 0.999 0.641 0.641)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 8.996
Average program size in population (points): 13.604
Average percent parens in population: 0.339
Minimum age in population: 23.7724609375
Maximum age in population: 29.11512756347656
Average age in population: 27.26569007873535
Median age in population: 27.31474685668945
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 136
Genome diversity (% unique genomes):	 0.319
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 165
Syntactic diversity (% unique Push programs):	 0.284
Total error diversity:				 0.003
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 19000
Number of point (instruction) evaluations so far: 3499136
--- Timings ---
Current time: 1559584815288 milliseconds
Total Time:          46.0 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        36.2 seconds, 78.6%
Fitness Testing:      6.1 seconds, 13.3%
Report:               3.6 seconds,  7.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 18
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 19
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 19
;;******************************
;; -*- Smallest problem report - generation 19
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor})
Lexicase best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor) ())
Lexicase best errors: [1 1 0 1 0 0 1 0 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 9
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor})
Zero cases best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor) ())
Zero cases best errors: [1 1 0 1 0 0 1 0 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 9
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (287 105 970 105 293 294 105 294 287 864)
Population mean number of elite cases: 3.60
Count of perfect (error zero) individuals by case: (287 105 970 105 293 294 105 294 287 864)
Population mean number of perfect (error zero) cases: 3.60
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth})
Best program: (in2 in1 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth) ())
Errors: [1 1 0 1 0 0 1 0 1 0]
Total: 5
Mean: 0.5
Genome size: 9
Size: 12
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 6.396
Median total errors in population: 6
Error averages by case: (0.713 0.895 0.03 0.895 0.707 0.706 0.895 0.706 0.713 0.136)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 10.154
Average program size in population (points): 15.538
Average percent parens in population: 0.342
Minimum age in population: 25.031982421875
Maximum age in population: 30.60006713867188
Average age in population: 29.06173668289185
Median age in population: 29.24089813232422
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 242
Genome diversity (% unique genomes):	 0.32
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 250
Syntactic diversity (% unique Push programs):	 0.283
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.013
--- Run Statistics ---
Number of program evaluations used so far: 20000
Number of point (instruction) evaluations so far: 3843701
--- Timings ---
Current time: 1559584817794 milliseconds
Total Time:          48.8 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        38.2 seconds, 78.4%
Fitness Testing:      6.5 seconds, 13.3%
Report:               4.0 seconds,  8.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 19
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 20
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 20
;;******************************
;; -*- Smallest problem report - generation 20
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction integer_swap})
Lexicase best program: (in3 print_integer integer_swap)
Lexicase best errors: [0 0 0 0 1 1 1 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 4
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction integer_swap})
Zero cases best program: (in3 print_integer integer_swap)
Zero cases best errors: [0 0 0 0 1 1 1 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 4
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (308 968 970 308 1000 267 267 267 394 308)
Population mean number of elite cases: 5.06
Count of perfect (error zero) individuals by case: (308 968 970 308 0 267 267 267 394 308)
Population mean number of perfect (error zero) cases: 4.06
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction exec_noop} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Best program: (in4 exec_noop print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) () ()) ())
Errors: [1 0 0 1 1 0 0 0 1 1]
Total: 5
Mean: 0.5
Genome size: 16
Size: 25
Percent parens: 0.360
--- Population Statistics ---
Average total errors in population: 5.943
Median total errors in population: 5
Error averages by case: (0.692 0.032 0.03 0.692 1.0 0.733 0.733 0.733 0.606 0.692)
Error minima by case: (0 0 0 0 1 0 0 0 0 0)
Average genome size in population (length): 8.151
Average program size in population (points): 12.255
Average percent parens in population: 0.337
Minimum age in population: 27.22152709960938
Maximum age in population: 32.30952835083008
Average age in population: 30.40965979003906
Median age in population: 30.48722839355469
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 178
Genome diversity (% unique genomes):	 0.313
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 240
Syntactic diversity (% unique Push programs):	 0.272
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 21000
Number of point (instruction) evaluations so far: 3956353
--- Timings ---
Current time: 1559584820581 milliseconds
Total Time:          51.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        40.7 seconds, 79.0%
Fitness Testing:      6.6 seconds, 12.9%
Report:               4.1 seconds,  7.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 21
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 21
;;******************************
;; -*- Smallest problem report - generation 21
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction exec_noop} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Lexicase best program: (in4 exec_noop print_integer exec_dup_times (exec_swap (boolean_xor integer_swap boolean_not boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ()))
Lexicase best errors: [1 1 0 1 1 1 1 0 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 19
Percent parens: 0.368
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction exec_noop} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Zero cases best program: (in4 exec_noop print_integer exec_dup_times (exec_swap (boolean_xor integer_swap boolean_not boolean_stackdepth exec_s_when_autoconstructing (boolean_dup boolean_stackdepth) () ()) ()))
Zero cases best errors: [1 1 0 1 1 1 1 0 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 19
Percent parens: 0.368
--- Lexicase Population Statistics ---
Count of elite individuals by case: (143 1000 397 427 143 1000 143 397 967 397)
Population mean number of elite cases: 5.01
Count of perfect (error zero) individuals by case: (143 0 397 427 143 0 143 397 967 397)
Population mean number of perfect (error zero) cases: 3.01
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap})
Best program: (in4 print_integer tag_boolean_765 boolean_swap boolean_xor integer_swap)
Errors: [1 1 0 1 1 1 1 0 0 0]
Total: 6
Mean: 0.6
Genome size: 6
Size: 7
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 6.986
Median total errors in population: 6
Error averages by case: (0.857 1.0 0.603 0.573 0.857 1.0 0.857 0.603 0.033 0.603)
Error minima by case: (0 1 0 0 0 1 0 0 0 0)
Average genome size in population (length): 7.13
Average program size in population (points): 10.839
Average percent parens in population: 0.345
Minimum age in population: 28.66290283203125
Maximum age in population: 33.64048194885254
Average age in population: 31.89301502513885
Median age in population: 31.99558591842651
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 229
Genome diversity (% unique genomes):	 0.285
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 321
Syntactic diversity (% unique Push programs):	 0.258
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.012
--- Run Statistics ---
Number of program evaluations used so far: 22000
Number of point (instruction) evaluations so far: 4040455
--- Timings ---
Current time: 1559584822928 milliseconds
Total Time:          53.9 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        42.8 seconds, 79.5%
Fitness Testing:      6.8 seconds, 12.6%
Report:               4.2 seconds,  7.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 21
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 22
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 22
;;******************************
;; -*- Smallest problem report - generation 22
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_stackdepth})
Lexicase best program: (in4 in1 print_integer tag_boolean_765 exec_swap (integer_sub integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (exec_dup_items boolean_stackdepth) () ()) ())
Lexicase best errors: [0 1 1 0 1 1 0 1 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 18
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_stackdepth})
Zero cases best program: (in4 in1 print_integer tag_boolean_765 exec_swap (integer_sub integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (exec_dup_items boolean_stackdepth) () ()) ())
Zero cases best errors: [0 1 1 0 1 1 0 1 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 18
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (443 380 1 443 380 141 443 141 443 964)
Population mean number of elite cases: 3.78
Count of perfect (error zero) individuals by case: (443 380 1 443 380 141 443 141 443 964)
Population mean number of perfect (error zero) cases: 3.78
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_dup} {:close 0, :instruction exec_dup_items} {:close 0, :instruction boolean_stackdepth})
Best program: (in4 in1 print_integer tag_boolean_765 boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_dup exec_dup_items boolean_stackdepth) () ())
Errors: [0 1 1 0 1 1 0 1 0 0]
Total: 5
Mean: 0.5
Genome size: 12
Size: 16
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 6.221
Median total errors in population: 7
Error averages by case: (0.557 0.62 0.999 0.557 0.62 0.859 0.557 0.859 0.557 0.036)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.146
Average program size in population (points): 13.641
Average percent parens in population: 0.324
Minimum age in population: 30.00442886352539
Maximum age in population: 35.44207525253296
Average age in population: 33.33764509105682
Median age in population: 33.38661241531372
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 65
Genome diversity (% unique genomes):	 0.34
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 109
Syntactic diversity (% unique Push programs):	 0.302
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 23000
Number of point (instruction) evaluations so far: 4168706
--- Timings ---
Current time: 1559584825126 milliseconds
Total Time:          56.1 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        44.7 seconds, 79.8%
Fitness Testing:      7.0 seconds, 12.4%
Report:               4.3 seconds,  7.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 23
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 23
;;******************************
;; -*- Smallest problem report - generation 23
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor})
Lexicase best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor) ())
Lexicase best errors: [0 0 1 1 1 1 0 1 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 9
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 1, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor})
Zero cases best program: (in4 in1 print_integer tag_boolean_765 exec_swap (boolean_xor) ())
Zero cases best errors: [0 0 1 1 1 1 0 1 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 9
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (449 449 214 214 210 210 448 210 750 964)
Population mean number of elite cases: 4.12
Count of perfect (error zero) individuals by case: (449 449 214 214 210 210 448 210 750 964)
Population mean number of perfect (error zero) cases: 4.12
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction exec_noop} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 1, :instruction exec_s_when_autoconstructing} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_s_when_autoconstructing} {:close 0, :instruction boolean_not} {:close 0, :instruction boolean_stackdepth})
Best program: (in4 exec_noop print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing () (integer_swap exec_empty boolean_stackdepth exec_s_when_autoconstructing (boolean_not boolean_stackdepth) () ()) ()) ())
Errors: [1 1 1 1 0 0 1 0 0 0]
Total: 5
Mean: 0.5
Genome size: 16
Size: 25
Percent parens: 0.360
--- Population Statistics ---
Average total errors in population: 5.882
Median total errors in population: 5
Error averages by case: (0.551 0.551 0.786 0.786 0.79 0.79 0.552 0.79 0.25 0.036)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 8.356
Average program size in population (points): 12.27
Average percent parens in population: 0.318
Minimum age in population: 31.64556884765625
Maximum age in population: 36.64750981330872
Average age in population: 34.79085383033752
Median age in population: 34.83689081668854
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 96
Genome diversity (% unique genomes):	 0.326
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 155
Syntactic diversity (% unique Push programs):	 0.292
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.017
--- Run Statistics ---
Number of program evaluations used so far: 24000
Number of point (instruction) evaluations so far: 4276852
--- Timings ---
Current time: 1559584827540 milliseconds
Total Time:          58.5 seconds
Initialization:       0.1 seconds,  0.2%
Reproduction:        46.9 seconds, 80.1%
Fitness Testing:      7.1 seconds, 12.2%
Report:               4.4 seconds,  7.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 23
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 24
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 24
;;******************************
;; -*- Smallest problem report - generation 24
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 1, :instruction exec_while} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Lexicase best program: (in4 exec_while () print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth integer_dup_times boolean_dup boolean_stackdepth) ())
Lexicase best errors: [1 0 1 0 1 0 0 1 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 16
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 1, :instruction exec_while} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction integer_dup_times} {:close 0, :instruction boolean_dup} {:close 0, :instruction boolean_stackdepth})
Zero cases best program: (in4 exec_while () print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap exec_empty boolean_stackdepth integer_dup_times boolean_dup boolean_stackdepth) ())
Zero cases best errors: [1 0 1 0 1 0 0 1 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 16
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 374 229 737 229 374 374 1000 1000 374)
Population mean number of elite cases: 5.69
Count of perfect (error zero) individuals by case: (0 374 229 737 229 374 374 0 0 374)
Population mean number of perfect (error zero) cases: 2.69
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 1, :instruction print_integer} {:close 0, :instruction tag_boolean_765} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap})
Best program: (in4 print_integer tag_boolean_765 exec_swap (boolean_xor integer_swap) ())
Errors: [1 0 1 0 1 0 0 1 1 0]
Total: 5
Mean: 0.5
Genome size: 6
Size: 9
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.309
Median total errors in population: 8
Error averages by case: (1.0 0.626 0.771 0.263 0.771 0.626 0.626 1.0 1.0 0.626)
Error minima by case: (1 0 0 0 0 0 0 1 1 0)
Average genome size in population (length): 8.194
Average program size in population (points): 12.263
Average percent parens in population: 0.332
Minimum age in population: 33.28263854980469
Maximum age in population: 38.18320429325104
Average age in population: 36.29363089036942
Median age in population: 36.35273730754852
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 101
Genome diversity (% unique genomes):	 0.358
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 167
Syntactic diversity (% unique Push programs):	 0.318
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 25000
Number of point (instruction) evaluations so far: 4376223
--- Timings ---
Current time: 1559584830477 milliseconds
Total Time:          61.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        49.5 seconds, 80.6%
Fitness Testing:      7.3 seconds, 11.8%
Report:               4.6 seconds,  7.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 24
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 25
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 25
;;******************************
;; -*- Smallest problem report - generation 25
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 print_integer exec_dup_times ())
Lexicase best errors: [0 1 1 1 1 0 1 0 1 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 print_integer exec_dup_times ())
Zero cases best errors: [0 1 1 1 1 0 1 0 1 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (282 1000 1 1000 1000 282 1000 282 1000 1000)
Population mean number of elite cases: 6.85
Count of perfect (error zero) individuals by case: (282 0 1 0 0 282 0 282 0 0)
Population mean number of perfect (error zero) cases: 0.85
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in3 print_integer exec_dup_times ())
Errors: [0 1 1 1 1 0 1 0 1 1]
Total: 7
Mean: 0.7
Genome size: 3
Size: 5
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 9.153
Median total errors in population: 10
Error averages by case: (0.718 1.0 0.999 1.0 1.0 0.718 1.0 0.718 1.0 1.0)
Error minima by case: (0 1 0 1 1 0 1 0 1 1)
Average genome size in population (length): 7.568
Average program size in population (points): 11.52
Average percent parens in population: 0.340
Minimum age in population: 34.93988227844238
Maximum age in population: 39.75161004066467
Average age in population: 37.82457164555788
Median age in population: 37.91085851192474
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 133
Genome diversity (% unique genomes):	 0.245
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 215
Syntactic diversity (% unique Push programs):	 0.211
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.007
--- Run Statistics ---
Number of program evaluations used so far: 26000
Number of point (instruction) evaluations so far: 4458713
--- Timings ---
Current time: 1559584832690 milliseconds
Total Time:          63.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        51.5 seconds, 80.9%
Fitness Testing:      7.4 seconds, 11.6%
Report:               4.7 seconds,  7.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 25
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 26
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 26
;;******************************
;; -*- Smallest problem report - generation 26
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 print_integer exec_dup_times ())
Lexicase best errors: [1 1 0 1 1 0 1 1 1 1]
Lexicase best number of elite cases: 9
Lexicase best total error: 8
Lexicase best mean error: 0.8
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 print_integer exec_dup_times ())
Zero cases best errors: [1 1 0 1 1 0 1 1 1 1]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 2
Zero cases best total error: 8
Zero cases best mean error: 0.8
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 1000 746 1000 1000 746 1000 1000 1 1000)
Population mean number of elite cases: 8.49
Count of perfect (error zero) individuals by case: (0 0 746 0 0 746 0 0 1 0)
Population mean number of perfect (error zero) cases: 1.49
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in3 print_integer exec_dup_times ())
Errors: [1 1 0 1 1 0 1 1 1 1]
Total: 8
Mean: 0.8
Genome size: 3
Size: 5
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 8.507
Median total errors in population: 8
Error averages by case: (1.0 1.0 0.254 1.0 1.0 0.254 1.0 1.0 0.999 1.0)
Error minima by case: (1 1 0 1 1 0 1 1 0 1)
Average genome size in population (length): 5.156
Average program size in population (points): 8.161
Average percent parens in population: 0.366
Minimum age in population: 36.71213483810425
Maximum age in population: 41.42381542921066
Average age in population: 38.88686325073242
Median age in population: 38.97684034705162
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 289
Genome diversity (% unique genomes):	 0.095
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 536
Syntactic diversity (% unique Push programs):	 0.079
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 27000
Number of point (instruction) evaluations so far: 4510843
--- Timings ---
Current time: 1559584834410 milliseconds
Total Time:          65.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        53.1 seconds, 81.2%
Fitness Testing:      7.5 seconds, 11.5%
Report:               4.7 seconds,  7.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 26
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 27
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 27
;;******************************
;; -*- Smallest problem report - generation 27
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dup})
Lexicase best program: (in3 print_integer integer_dup)
Lexicase best errors: [0 1 0 0 1 0 0 1 1 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 4
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dup})
Zero cases best program: (in3 print_integer integer_dup)
Zero cases best errors: [0 1 0 0 1 0 0 1 1 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 4
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (654 1000 654 654 1000 654 654 1000 1000 654)
Population mean number of elite cases: 7.92
Count of perfect (error zero) individuals by case: (654 0 654 654 0 654 654 0 0 654)
Population mean number of perfect (error zero) cases: 3.92
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dup})
Best program: (in3 print_integer integer_dup)
Errors: [0 1 0 0 1 0 0 1 1 0]
Total: 4
Mean: 0.4
Genome size: 3
Size: 4
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 6.076
Median total errors in population: 4
Error averages by case: (0.346 1.0 0.346 0.346 1.0 0.346 0.346 1.0 1.0 0.346)
Error minima by case: (0 1 0 0 1 0 0 1 1 0)
Average genome size in population (length): 3.076
Average program size in population (points): 4.94
Average percent parens in population: 0.376
Minimum age in population: 38.24712181091309
Maximum age in population: 42.56918422877789
Average age in population: 40.60054594618082
Median age in population: 40.66163417696953
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 312
Genome diversity (% unique genomes):	 0.069
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 460
Syntactic diversity (% unique Push programs):	 0.058
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Behavioral diversity:				 0.006
--- Run Statistics ---
Number of program evaluations used so far: 28000
Number of point (instruction) evaluations so far: 4541613
--- Timings ---
Current time: 1559584836148 milliseconds
Total Time:          67.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        54.7 seconds, 81.4%
Fitness Testing:      7.6 seconds, 11.3%
Report:               4.8 seconds,  7.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 27
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 28
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 28
;;******************************
;; -*- Smallest problem report - generation 28
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 print_integer exec_dup_times ())
Lexicase best errors: [1 1 1 0 0 0 1 1 1 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 print_integer exec_dup_times ())
Zero cases best errors: [1 1 1 0 0 0 1 1 1 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 1000 1000 974 974 974 1000 1000 1000 974)
Population mean number of elite cases: 9.90
Count of perfect (error zero) individuals by case: (0 0 0 974 974 974 0 0 0 974)
Population mean number of perfect (error zero) cases: 3.90
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in3 print_integer exec_dup_times ())
Errors: [1 1 1 0 0 0 1 1 1 0]
Total: 6
Mean: 0.6
Genome size: 3
Size: 5
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 6.104
Median total errors in population: 6
Error averages by case: (1.0 1.0 1.0 0.026 0.026 0.026 1.0 1.0 1.0 0.026)
Error minima by case: (1 1 1 0 0 0 1 1 1 0)
Average genome size in population (length): 3.146
Average program size in population (points): 4.968
Average percent parens in population: 0.366
Minimum age in population: 39.60243034362793
Maximum age in population: 44.09174838662148
Average age in population: 42.15166476429254
Median age in population: 42.20381937175989
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 361
Genome diversity (% unique genomes):	 0.075
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 682
Syntactic diversity (% unique Push programs):	 0.06
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Behavioral diversity:				 0.004
--- Run Statistics ---
Number of program evaluations used so far: 29000
Number of point (instruction) evaluations so far: 4573362
--- Timings ---
Current time: 1559584837944 milliseconds
Total Time:          69.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        56.3 seconds, 81.7%
Fitness Testing:      7.7 seconds, 11.1%
Report:               4.9 seconds,  7.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 28
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 29
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 29
;;******************************
;; -*- Smallest problem report - generation 29
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap})
Lexicase best program: (in3 print_integer boolean_xor integer_swap)
Lexicase best errors: [0 0 1 1 0 1 1 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 5
Percent parens: 0.200
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap})
Zero cases best program: (in3 print_integer boolean_xor integer_swap)
Zero cases best errors: [0 0 1 1 0 1 1 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 5
Percent parens: 0.200
--- Lexicase Population Statistics ---
Count of elite individuals by case: (976 976 1000 1000 976 1000 1000 976 976 976)
Population mean number of elite cases: 9.86
Count of perfect (error zero) individuals by case: (976 976 0 0 976 0 0 976 976 976)
Population mean number of perfect (error zero) cases: 5.86
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in3 print_integer exec_dup_times ())
Errors: [0 0 1 1 0 1 1 0 0 0]
Total: 4
Mean: 0.4
Genome size: 3
Size: 5
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 4.144
Median total errors in population: 4
Error averages by case: (0.024 0.024 1.0 1.0 0.024 1.0 1.0 0.024 0.024 0.024)
Error minima by case: (0 0 1 1 0 1 1 0 0 0)
Average genome size in population (length): 3.125
Average program size in population (points): 4.924
Average percent parens in population: 0.363
Minimum age in population: 40.90465080738068
Maximum age in population: 45.84213487431407
Average age in population: 43.68819398168474
Median age in population: 43.76051157526672
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 333
Genome diversity (% unique genomes):	 0.084
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 671
Syntactic diversity (% unique Push programs):	 0.06
Total error diversity:				 0.002
Error (vector) diversity:			 0.002
Behavioral diversity:				 0.003
--- Run Statistics ---
Number of program evaluations used so far: 30000
Number of point (instruction) evaluations so far: 4605527
--- Timings ---
Current time: 1559584839549 milliseconds
Total Time:          70.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        57.8 seconds, 81.9%
Fitness Testing:      7.8 seconds, 11.0%
Report:               4.9 seconds,  7.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 29
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 30
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 30
;;******************************
;; -*- Smallest problem report - generation 30
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 boolean_shove print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 1 1 0 1 1 1 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 boolean_shove print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 1 1 0 1 1 1 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (985 1 984 1000 1000 1 1000 1000 1000 1)
Population mean number of elite cases: 6.97
Count of perfect (error zero) individuals by case: (985 1 984 0 0 1 0 0 0 1)
Population mean number of perfect (error zero) cases: 1.97
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 boolean_shove print_integer exec_dup_times ())
Errors: [0 0 1 1 1 0 1 1 1 0]
Total: 6
Mean: 0.6
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 8.028
Median total errors in population: 8
Error averages by case: (0.015 0.999 0.016 1.0 1.0 0.999 1.0 1.0 1.0 0.999)
Error minima by case: (0 0 0 1 1 0 1 1 1 0)
Average genome size in population (length): 3.114
Average program size in population (points): 4.887
Average percent parens in population: 0.361
Minimum age in population: 41.95405292510986
Maximum age in population: 47.36871538124979
Average age in population: 45.14984777778201
Median age in population: 45.17415127716959
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 333
Genome diversity (% unique genomes):	 0.081
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 663
Syntactic diversity (% unique Push programs):	 0.058
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.005
--- Run Statistics ---
Number of program evaluations used so far: 31000
Number of point (instruction) evaluations so far: 4636897
--- Timings ---
Current time: 1559584841150 milliseconds
Total Time:          72.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        59.2 seconds, 82.1%
Fitness Testing:      7.9 seconds, 10.9%
Report:               5.0 seconds,  6.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 30
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 31
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 31
;;******************************
;; -*- Smallest problem report - generation 31
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 boolean_shove print_integer exec_dup_times ())
Lexicase best errors: [1 0 0 0 0 1 1 1 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 boolean_shove print_integer exec_dup_times ())
Zero cases best errors: [1 0 0 0 0 1 1 1 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (257 976 717 717 976 2 1000 2 1000 1000)
Population mean number of elite cases: 6.65
Count of perfect (error zero) individuals by case: (257 976 717 717 976 2 0 2 0 0)
Population mean number of perfect (error zero) cases: 3.65
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 boolean_shove print_integer exec_dup_times ())
Errors: [1 0 0 0 0 1 1 1 1 1]
Total: 6
Mean: 0.6
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.353
Median total errors in population: 6
Error averages by case: (0.743 0.024 0.283 0.283 0.024 0.998 1.0 0.998 1.0 1.0)
Error minima by case: (0 0 0 0 0 0 1 0 1 1)
Average genome size in population (length): 3.771
Average program size in population (points): 5.707
Average percent parens in population: 0.340
Minimum age in population: 44.25773470103741
Maximum age in population: 48.67870751116425
Average age in population: 46.54410793979
Median age in population: 46.67480063764378
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 699
Genome diversity (% unique genomes):	 0.074
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 709
Syntactic diversity (% unique Push programs):	 0.058
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.007
--- Run Statistics ---
Number of program evaluations used so far: 32000
Number of point (instruction) evaluations so far: 4674667
--- Timings ---
Current time: 1559584842747 milliseconds
Total Time:          73.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        60.6 seconds, 82.2%
Fitness Testing:      7.9 seconds, 10.8%
Report:               5.1 seconds,  6.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 31
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 32
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 32
;;******************************
;; -*- Smallest problem report - generation 32
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 boolean_shove print_integer exec_dup_times ())
Lexicase best errors: [1 1 0 1 0 1 0 0 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 boolean_shove print_integer exec_dup_times ())
Zero cases best errors: [1 1 0 1 0 1 0 0 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 408 387 1000 387 173 387 387 387 173)
Population mean number of elite cases: 4.69
Count of perfect (error zero) individuals by case: (0 408 387 0 387 173 387 387 387 173)
Population mean number of perfect (error zero) cases: 2.69
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 boolean_shove print_integer exec_dup_times ())
Errors: [1 1 0 1 0 1 0 0 0 1]
Total: 5
Mean: 0.5
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.311
Median total errors in population: 8
Error averages by case: (1.0 0.592 0.613 1.0 0.613 0.827 0.613 0.613 0.613 0.827)
Error minima by case: (1 0 0 1 0 0 0 0 0 0)
Average genome size in population (length): 3.854
Average program size in population (points): 5.829
Average percent parens in population: 0.340
Minimum age in population: 46.14733333140612
Maximum age in population: 49.55699218763039
Average age in population: 48.24748286971031
Median age in population: 48.16373778437264
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 368
Genome diversity (% unique genomes):	 0.079
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 373
Syntactic diversity (% unique Push programs):	 0.063
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.006
--- Run Statistics ---
Number of program evaluations used so far: 33000
Number of point (instruction) evaluations so far: 4713285
--- Timings ---
Current time: 1559584844504 milliseconds
Total Time:          75.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        62.2 seconds, 82.4%
Fitness Testing:      8.0 seconds, 10.7%
Report:               5.1 seconds,  6.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 32
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 33
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 33
;;******************************
;; -*- Smallest problem report - generation 33
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 print_integer exec_dup_times ())
Lexicase best errors: [0 1 1 1 0 1 0 0 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 print_integer exec_dup_times ())
Zero cases best errors: [0 1 1 1 0 1 0 0 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (117 247 247 1000 117 247 117 117 364 117)
Population mean number of elite cases: 2.69
Count of perfect (error zero) individuals by case: (117 247 247 0 117 247 117 117 364 117)
Population mean number of perfect (error zero) cases: 1.69
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in1 print_integer exec_dup_times ())
Errors: [0 1 1 1 0 1 0 0 0 0]
Total: 4
Mean: 0.4
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 8.31
Median total errors in population: 10
Error averages by case: (0.883 0.753 0.753 1.0 0.883 0.753 0.883 0.883 0.636 0.883)
Error minima by case: (0 0 0 1 0 0 0 0 0 0)
Average genome size in population (length): 3.774
Average program size in population (points): 5.717
Average percent parens in population: 0.340
Minimum age in population: 47.28079548291862
Maximum age in population: 51.27305796812288
Average age in population: 49.63299518268206
Median age in population: 49.73222096299287
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 552
Genome diversity (% unique genomes):	 0.09
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 568
Syntactic diversity (% unique Push programs):	 0.07
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 34000
Number of point (instruction) evaluations so far: 4751125
--- Timings ---
Current time: 1559584846710 milliseconds
Total Time:          77.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        64.2 seconds, 82.7%
Fitness Testing:      8.1 seconds, 10.5%
Report:               5.2 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 33
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 34
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 34
;;******************************
;; -*- Smallest problem report - generation 34
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 print_integer exec_dup_times ())
Lexicase best errors: [0 1 0 1 1 0 1 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 print_integer exec_dup_times ())
Zero cases best errors: [0 1 0 1 1 0 1 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2 1000 2 1000 386 977 589 589 386 2)
Population mean number of elite cases: 4.93
Count of perfect (error zero) individuals by case: (2 0 2 0 386 977 589 589 386 2)
Population mean number of perfect (error zero) cases: 2.93
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction exec_s} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 exec_s () () (print_integer exec_dup_times ()))
Errors: [0 1 0 1 1 0 1 1 1 0]
Total: 6
Mean: 0.6
Genome size: 4
Size: 9
Percent parens: 0.556
--- Population Statistics ---
Average total errors in population: 7.067
Median total errors in population: 7
Error averages by case: (0.998 1.0 0.998 1.0 0.614 0.023 0.411 0.411 0.614 0.998)
Error minima by case: (0 1 0 1 0 0 0 0 0 0)
Average genome size in population (length): 3.7
Average program size in population (points): 5.641
Average percent parens in population: 0.344
Minimum age in population: 49.00382175249979
Maximum age in population: 53.02543335082009
Average age in population: 51.25317381447949
Median age in population: 51.29937573621282
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 291
Genome diversity (% unique genomes):	 0.073
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 300
Syntactic diversity (% unique Push programs):	 0.054
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.005
--- Run Statistics ---
Number of program evaluations used so far: 35000
Number of point (instruction) evaluations so far: 4789275
--- Timings ---
Current time: 1559584848801 milliseconds
Total Time:          79.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        66.1 seconds, 82.9%
Fitness Testing:      8.3 seconds, 10.3%
Report:               5.3 seconds,  6.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 34
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 35
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 35
;;******************************
;; -*- Smallest problem report - generation 35
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction exec_s} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 exec_s () () (print_integer exec_dup_times ()))
Lexicase best errors: [0 1 0 0 1 1 1 0 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 9
Percent parens: 0.556
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction exec_s} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 exec_s () () (print_integer exec_dup_times ()))
Zero cases best errors: [0 1 0 0 1 1 1 0 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 9
Percent parens: 0.556
--- Lexicase Population Statistics ---
Count of elite individuals by case: (452 248 452 452 271 1000 271 452 248 271)
Population mean number of elite cases: 4.12
Count of perfect (error zero) individuals by case: (452 248 452 452 271 0 271 452 248 271)
Population mean number of perfect (error zero) cases: 3.12
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 print_integer exec_dup_times ())
Errors: [0 1 0 0 1 1 1 0 1 1]
Total: 6
Mean: 0.6
Genome size: 3
Size: 5
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 6.883
Median total errors in population: 7
Error averages by case: (0.548 0.752 0.548 0.548 0.729 1.0 0.729 0.548 0.752 0.729)
Error minima by case: (0 0 0 0 0 1 0 0 0 0)
Average genome size in population (length): 3.527
Average program size in population (points): 6.198
Average percent parens in population: 0.412
Minimum age in population: 50.14555826876312
Maximum age in population: 54.7191108133411
Average age in population: 52.87554522587871
Median age in population: 52.88405512738973
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 236
Genome diversity (% unique genomes):	 0.084
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 236
Syntactic diversity (% unique Push programs):	 0.065
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 36000
Number of point (instruction) evaluations so far: 4831130
--- Timings ---
Current time: 1559584850825 milliseconds
Total Time:          81.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        68.0 seconds, 83.1%
Fitness Testing:      8.4 seconds, 10.2%
Report:               5.4 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 35
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 36
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 36
;;******************************
;; -*- Smallest problem report - generation 36
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 print_integer exec_dup_times ())
Lexicase best errors: [1 1 0 0 1 0 0 0 1 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 print_integer exec_dup_times ())
Zero cases best errors: [1 1 0 0 1 0 0 0 1 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 312 215 215 312 661 215 973 1000 1000)
Population mean number of elite cases: 5.90
Count of perfect (error zero) individuals by case: (0 312 215 215 312 661 215 973 0 0)
Population mean number of perfect (error zero) cases: 2.90
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in1 boolean_shove print_integer exec_dup_times ())
Errors: [1 1 0 0 1 0 0 0 1 1]
Total: 5
Mean: 0.5
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.097
Median total errors in population: 7
Error averages by case: (1.0 0.688 0.785 0.785 0.688 0.339 0.785 0.027 1.0 1.0)
Error minima by case: (1 0 0 0 0 0 0 0 1 1)
Average genome size in population (length): 3.504
Average program size in population (points): 6.121
Average percent parens in population: 0.407
Minimum age in population: 51.14555826876312
Maximum age in population: 56.02952559248661
Average age in population: 54.30567862286908
Median age in population: 54.3408628294128
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 214
Genome diversity (% unique genomes):	 0.096
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 215
Syntactic diversity (% unique Push programs):	 0.073
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.007
--- Run Statistics ---
Number of program evaluations used so far: 37000
Number of point (instruction) evaluations so far: 4870900
--- Timings ---
Current time: 1559584853062 milliseconds
Total Time:          84.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        70.0 seconds, 83.3%
Fitness Testing:      8.5 seconds, 10.1%
Report:               5.5 seconds,  6.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 36
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 37
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 37
;;******************************
;; -*- Smallest problem report - generation 37
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 2, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_invert_first_then_and})
Lexicase best program: (in3 print_integer boolean_invert_first_then_and)
Lexicase best errors: [0 1 1 1 1 1 0 1 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 4
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 2, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_invert_first_then_and})
Zero cases best program: (in3 print_integer boolean_invert_first_then_and)
Zero cases best errors: [0 1 1 1 1 1 0 1 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 4
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (341 4 1000 4 1000 636 341 4 977 636)
Population mean number of elite cases: 4.94
Count of perfect (error zero) individuals by case: (341 4 0 4 0 636 341 4 977 636)
Population mean number of perfect (error zero) cases: 2.94
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in1 print_integer exec_dup_times ())
Errors: [1 1 1 1 1 0 1 1 0 0]
Total: 7
Mean: 0.7
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.057
Median total errors in population: 7
Error averages by case: (0.659 0.996 1.0 0.996 1.0 0.364 0.659 0.996 0.023 0.364)
Error minima by case: (0 0 1 0 1 0 0 0 0 0)
Average genome size in population (length): 3.74
Average program size in population (points): 5.685
Average percent parens in population: 0.343
Minimum age in population: 52.14555826876312
Maximum age in population: 57.67610376227822
Average age in population: 55.69953258216448
Median age in population: 55.7802414865364
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 320
Genome diversity (% unique genomes):	 0.09
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 342
Syntactic diversity (% unique Push programs):	 0.065
Total error diversity:				 0.002
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.006
--- Run Statistics ---
Number of program evaluations used so far: 38000
Number of point (instruction) evaluations so far: 4908720
--- Timings ---
Current time: 1559584855153 milliseconds
Total Time:          86.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        71.9 seconds, 83.5%
Fitness Testing:      8.6 seconds, 10.0%
Report:               5.5 seconds,  6.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 37
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 38
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 38
;;******************************
;; -*- Smallest problem report - generation 38
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 print_integer exec_dup_times ())
Lexicase best errors: [1 0 1 0 0 1 1 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 print_integer exec_dup_times ())
Zero cases best errors: [1 0 1 0 0 1 1 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 323 371 323 984 288 288 371 1000 323)
Population mean number of elite cases: 5.27
Count of perfect (error zero) individuals by case: (0 323 371 323 984 288 288 371 0 323)
Population mean number of perfect (error zero) cases: 3.27
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in1 boolean_shove print_integer exec_dup_times ())
Errors: [1 0 1 0 0 1 1 1 1 0]
Total: 6
Mean: 0.6
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.729
Median total errors in population: 7
Error averages by case: (1.0 0.677 0.629 0.677 0.016 0.712 0.712 0.629 1.0 0.677)
Error minima by case: (1 0 0 0 0 0 0 0 1 0)
Average genome size in population (length): 3.771
Average program size in population (points): 5.893
Average percent parens in population: 0.358
Minimum age in population: 53.14555826876312
Maximum age in population: 58.96927519129531
Average age in population: 57.26191774694547
Median age in population: 57.33723143701718
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 150
Genome diversity (% unique genomes):	 0.095
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 200
Syntactic diversity (% unique Push programs):	 0.062
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.007
--- Run Statistics ---
Number of program evaluations used so far: 39000
Number of point (instruction) evaluations so far: 4949902
--- Timings ---
Current time: 1559584856994 milliseconds
Total Time:          88.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        73.6 seconds, 83.6%
Fitness Testing:      8.7 seconds,  9.9%
Report:               5.6 seconds,  6.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 38
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 39
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 39
;;******************************
;; -*- Smallest problem report - generation 39
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in1 boolean_shove print_integer exec_dup_times ())
Lexicase best errors: [0 0 0 1 0 0 1 1 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in1 boolean_shove print_integer exec_dup_times ())
Zero cases best errors: [0 0 0 1 0 0 1 1 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (433 433 433 256 433 433 256 1000 433 256)
Population mean number of elite cases: 4.37
Count of perfect (error zero) individuals by case: (433 433 433 256 433 433 256 0 433 256)
Population mean number of perfect (error zero) cases: 3.37
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in1 print_integer exec_dup_times ())
Errors: [0 0 0 1 0 0 1 1 0 1]
Total: 4
Mean: 0.4
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.634
Median total errors in population: 7
Error averages by case: (0.567 0.567 0.567 0.744 0.567 0.567 0.744 1.0 0.567 0.744)
Error minima by case: (0 0 0 0 0 0 0 1 0 0)
Average genome size in population (length): 3.792
Average program size in population (points): 5.876
Average percent parens in population: 0.354
Minimum age in population: 54.98912374861538
Maximum age in population: 60.47945816017091
Average age in population: 58.75592647536092
Median age in population: 58.83746547874762
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 175
Genome diversity (% unique genomes):	 0.11
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 208
Syntactic diversity (% unique Push programs):	 0.077
Total error diversity:				 0.003
Error (vector) diversity:			 0.003
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 40000
Number of point (instruction) evaluations so far: 4990011
--- Timings ---
Current time: 1559584859181 milliseconds
Total Time:          90.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        75.5 seconds, 83.8%
Fitness Testing:      8.8 seconds,  9.8%
Report:               5.7 seconds,  6.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 39
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 40
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 40
;;******************************
;; -*- Smallest problem report - generation 40
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 in3 print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 0 1 0 0 1 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 in3 print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 0 1 0 0 1 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (355 355 1 355 1000 976 976 1 620 1000)
Population mean number of elite cases: 5.64
Count of perfect (error zero) individuals by case: (355 355 1 355 0 976 976 1 620 0)
Population mean number of perfect (error zero) cases: 3.64
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap})
Best program: (in3 print_integer boolean_xor integer_swap)
Errors: [0 0 1 0 1 0 0 1 1 1]
Total: 5
Mean: 0.5
Genome size: 4
Size: 5
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 6.361
Median total errors in population: 7
Error averages by case: (0.645 0.645 0.999 0.645 1.0 0.024 0.024 0.999 0.38 1.0)
Error minima by case: (0 0 0 0 1 0 0 0 0 1)
Average genome size in population (length): 3.754
Average program size in population (points): 5.694
Average percent parens in population: 0.341
Minimum age in population: 55.98912374861538
Maximum age in population: 62.14974103309942
Average age in population: 60.20825512406407
Median age in population: 60.29612315265967
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 242
Genome diversity (% unique genomes):	 0.107
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 305
Syntactic diversity (% unique Push programs):	 0.075
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 41000
Number of point (instruction) evaluations so far: 5028540
--- Timings ---
Current time: 1559584861286 milliseconds
Total Time:          92.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        77.5 seconds, 83.9%
Fitness Testing:      9.0 seconds,  9.7%
Report:               5.8 seconds,  6.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 40
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 41
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 41
;;******************************
;; -*- Smallest problem report - generation 41
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 print_integer exec_dup_times ())
Lexicase best errors: [1 1 1 0 1 1 1 0 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 print_integer exec_dup_times ())
Zero cases best errors: [1 1 1 0 1 1 1 0 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (472 1000 302 501 1000 170 170 501 973 501)
Population mean number of elite cases: 5.59
Count of perfect (error zero) individuals by case: (472 0 302 501 0 170 170 501 973 501)
Population mean number of perfect (error zero) cases: 3.59
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 3, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in3 print_integer exec_dup_times ())
Errors: [1 1 1 0 1 1 1 0 0 0]
Total: 6
Mean: 0.6
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.41
Median total errors in population: 6
Error averages by case: (0.528 1.0 0.698 0.499 1.0 0.83 0.83 0.499 0.027 0.499)
Error minima by case: (0 1 0 0 1 0 0 0 0 0)
Average genome size in population (length): 3.312
Average program size in population (points): 5.214
Average percent parens in population: 0.364
Minimum age in population: 58.88208845225745
Maximum age in population: 63.66242622515892
Average age in population: 62.12691596298897
Median age in population: 62.32941981998147
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 296
Genome diversity (% unique genomes):	 0.105
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 321
Syntactic diversity (% unique Push programs):	 0.077
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.007
--- Run Statistics ---
Number of program evaluations used so far: 42000
Number of point (instruction) evaluations so far: 5061970
--- Timings ---
Current time: 1559584863132 milliseconds
Total Time:          94.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        79.1 seconds, 84.1%
Fitness Testing:      9.1 seconds,  9.6%
Report:               5.9 seconds,  6.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 41
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 42
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 42
;;******************************
;; -*- Smallest problem report - generation 42
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction integer_yank})
Lexicase best program: (in1 boolean_shove print_integer integer_yank)
Lexicase best errors: [0 0 1 1 1 0 0 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 5
Percent parens: 0.200
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction integer_yank})
Zero cases best program: (in1 boolean_shove print_integer integer_yank)
Zero cases best errors: [0 0 1 1 1 0 0 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 5
Percent parens: 0.200
--- Lexicase Population Statistics ---
Count of elite individuals by case: (389 389 420 169 1000 389 389 169 1000 420)
Population mean number of elite cases: 4.73
Count of perfect (error zero) individuals by case: (389 389 420 169 0 389 389 169 0 420)
Population mean number of perfect (error zero) cases: 2.73
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in1 boolean_shove print_integer exec_dup_times ())
Errors: [0 0 1 1 1 0 0 1 1 1]
Total: 6
Mean: 0.6
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.266
Median total errors in population: 8
Error averages by case: (0.611 0.611 0.58 0.831 1.0 0.611 0.611 0.831 1.0 0.58)
Error minima by case: (0 0 0 0 1 0 0 0 1 0)
Average genome size in population (length): 3.478
Average program size in population (points): 5.353
Average percent parens in population: 0.351
Minimum age in population: 60.32067034381907
Maximum age in population: 65.56731989582386
Average age in population: 63.54161314367082
Median age in population: 63.58965534161621
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 163
Genome diversity (% unique genomes):	 0.105
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 264
Syntactic diversity (% unique Push programs):	 0.077
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.005
--- Run Statistics ---
Number of program evaluations used so far: 43000
Number of point (instruction) evaluations so far: 5097430
--- Timings ---
Current time: 1559584865236 milliseconds
Total Time:          96.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        81.0 seconds, 84.2%
Fitness Testing:      9.2 seconds,  9.5%
Report:               6.0 seconds,  6.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 42
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 43
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 43
;;******************************
;; -*- Smallest problem report - generation 43
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 print_integer exec_dup_times ())
Lexicase best errors: [1 0 0 0 0 1 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 print_integer exec_dup_times ())
Zero cases best errors: [1 0 0 0 0 1 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (240 235 235 235 738 503 240 1000 235 235)
Population mean number of elite cases: 3.90
Count of perfect (error zero) individuals by case: (240 235 235 235 738 503 240 0 235 235)
Population mean number of perfect (error zero) cases: 2.90
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap})
Best program: (in3 print_integer boolean_xor integer_swap)
Errors: [1 0 0 0 0 1 1 1 0 0]
Total: 4
Mean: 0.4
Genome size: 4
Size: 5
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 7.104
Median total errors in population: 8
Error averages by case: (0.76 0.765 0.765 0.765 0.262 0.497 0.76 1.0 0.765 0.765)
Error minima by case: (0 0 0 0 0 0 0 1 0 0)
Average genome size in population (length): 3.58
Average program size in population (points): 5.473
Average percent parens in population: 0.347
Minimum age in population: 61.95787988179654
Maximum age in population: 67.24954170089745
Average age in population: 65.0982325186197
Median age in population: 65.17256747641204
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 231
Genome diversity (% unique genomes):	 0.11
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 232
Syntactic diversity (% unique Push programs):	 0.081
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.007
--- Run Statistics ---
Number of program evaluations used so far: 44000
Number of point (instruction) evaluations so far: 5135070
--- Timings ---
Current time: 1559584867286 milliseconds
Total Time:          98.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        82.9 seconds, 84.3%
Fitness Testing:      9.3 seconds,  9.4%
Report:               6.0 seconds,  6.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 43
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 44
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 44
;;******************************
;; -*- Smallest problem report - generation 44
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 2, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 1 0 1 0 1 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 2, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 1 0 1 0 1 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (660 660 121 320 781 121 660 1000 781 1000)
Population mean number of elite cases: 6.10
Count of perfect (error zero) individuals by case: (660 660 121 320 781 121 660 0 781 0)
Population mean number of perfect (error zero) cases: 4.10
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in3 print_integer exec_dup_times ())
Errors: [0 0 1 1 0 1 0 1 0 1]
Total: 5
Mean: 0.5
Genome size: 3
Size: 5
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 5.896
Median total errors in population: 5
Error averages by case: (0.34 0.34 0.879 0.68 0.219 0.879 0.34 1.0 0.219 1.0)
Error minima by case: (0 0 0 0 0 0 0 1 0 1)
Average genome size in population (length): 3.27
Average program size in population (points): 5.076
Average percent parens in population: 0.355
Minimum age in population: 62.95787988179654
Maximum age in population: 68.48831921674866
Average age in population: 66.50197354658182
Median age in population: 66.57417697813969
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 190
Genome diversity (% unique genomes):	 0.091
Min copy number of one Push program: 1
Median copy number of one Push program: 2
Max copy number of one Push program: 358
Syntactic diversity (% unique Push programs):	 0.065
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.005
--- Run Statistics ---
Number of program evaluations used so far: 45000
Number of point (instruction) evaluations so far: 5170110
--- Timings ---
Current time: 1559584869390 milliseconds
Total Time:         100.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        84.8 seconds, 84.5%
Fitness Testing:      9.4 seconds,  9.3%
Report:               6.1 seconds,  6.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 44
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 45
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 45
;;******************************
;; -*- Smallest problem report - generation 45
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction integer_pop} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (integer_pop in1 print_integer exec_dup_times ())
Lexicase best errors: [1 0 1 0 0 1 0 0 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction integer_pop} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (integer_pop in1 print_integer exec_dup_times ())
Zero cases best errors: [1 0 1 0 0 1 0 0 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (479 985 1000 506 506 1 506 506 1 506)
Population mean number of elite cases: 5.00
Count of perfect (error zero) individuals by case: (479 985 0 506 506 1 506 506 1 506)
Population mean number of perfect (error zero) cases: 4.00
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in1 print_integer exec_dup_times ())
Errors: [1 0 1 0 0 1 0 0 1 0]
Total: 4
Mean: 0.4
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.004
Median total errors in population: 4
Error averages by case: (0.521 0.015 1.0 0.494 0.494 0.999 0.494 0.494 0.999 0.494)
Error minima by case: (0 0 1 0 0 0 0 0 0 0)
Average genome size in population (length): 3.596
Average program size in population (points): 5.406
Average percent parens in population: 0.333
Minimum age in population: 63.95787988179654
Maximum age in population: 69.939965876727
Average age in population: 67.96958525984742
Median age in population: 68.07977375356802
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 154
Genome diversity (% unique genomes):	 0.09
Min copy number of one Push program: 1
Median copy number of one Push program: 2
Max copy number of one Push program: 255
Syntactic diversity (% unique Push programs):	 0.062
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.005
--- Run Statistics ---
Number of program evaluations used so far: 46000
Number of point (instruction) evaluations so far: 5212301
--- Timings ---
Current time: 1559584871302 milliseconds
Total Time:         102.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        86.5 seconds, 84.6%
Fitness Testing:      9.5 seconds,  9.3%
Report:               6.2 seconds,  6.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 45
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 46
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 46
;;******************************
;; -*- Smallest problem report - generation 46
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in1 boolean_shove print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 1 1 0 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in1 boolean_shove print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 1 1 0 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (616 617 1000 232 1000 749 133 232 616 982)
Population mean number of elite cases: 6.18
Count of perfect (error zero) individuals by case: (616 617 0 232 0 749 133 232 616 982)
Population mean number of perfect (error zero) cases: 4.18
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in1 boolean_shove print_integer exec_dup_times ())
Errors: [0 0 1 1 1 0 1 1 0 0]
Total: 5
Mean: 0.5
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 5.823
Median total errors in population: 5
Error averages by case: (0.384 0.383 1.0 0.768 1.0 0.251 0.867 0.768 0.384 0.018)
Error minima by case: (0 0 1 0 1 0 0 0 0 0)
Average genome size in population (length): 3.835
Average program size in population (points): 5.698
Average percent parens in population: 0.325
Minimum age in population: 65.49065034558953
Maximum age in population: 71.58346072240695
Average age in population: 69.70576654778291
Median age in population: 69.86181626287475
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 223
Genome diversity (% unique genomes):	 0.098
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 288
Syntactic diversity (% unique Push programs):	 0.072
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.007
--- Run Statistics ---
Number of program evaluations used so far: 47000
Number of point (instruction) evaluations so far: 5256153
--- Timings ---
Current time: 1559584873161 milliseconds
Total Time:         104.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        88.2 seconds, 84.7%
Fitness Testing:      9.6 seconds,  9.2%
Report:               6.2 seconds,  6.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 46
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 47
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 47
;;******************************
;; -*- Smallest problem report - generation 47
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 0 1 1 0 0 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 0 1 1 0 0 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (179 179 1000 971 1000 276 179 696 275 517)
Population mean number of elite cases: 5.27
Count of perfect (error zero) individuals by case: (179 179 0 971 0 276 179 696 275 517)
Population mean number of perfect (error zero) cases: 3.27
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in3 print_integer exec_dup_times ())
Errors: [0 0 1 0 1 1 0 0 1 1]
Total: 5
Mean: 0.5
Genome size: 3
Size: 5
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 6.728
Median total errors in population: 7
Error averages by case: (0.821 0.821 1.0 0.029 1.0 0.724 0.821 0.304 0.725 0.483)
Error minima by case: (0 0 1 0 1 0 0 0 0 0)
Average genome size in population (length): 3.803
Average program size in population (points): 5.662
Average percent parens in population: 0.326
Minimum age in population: 67.45774408554735
Maximum age in population: 73.2335597229741
Average age in population: 71.25597353574274
Median age in population: 71.27270429826699
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 255
Genome diversity (% unique genomes):	 0.112
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 261
Syntactic diversity (% unique Push programs):	 0.081
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 48000
Number of point (instruction) evaluations so far: 5299620
--- Timings ---
Current time: 1559584875140 milliseconds
Total Time:         106.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        90.0 seconds, 84.8%
Fitness Testing:      9.7 seconds,  9.2%
Report:               6.3 seconds,  6.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 47
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 48
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 48
;;******************************
;; -*- Smallest problem report - generation 48
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 integer_yankdup print_integer exec_dup_times ())
Lexicase best errors: [0 1 0 1 0 1 1 1 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 integer_yankdup print_integer exec_dup_times ())
Zero cases best errors: [0 1 0 1 0 1 1 1 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (290 1000 290 1000 290 683 1000 1000 179 504)
Population mean number of elite cases: 6.24
Count of perfect (error zero) individuals by case: (290 0 290 0 290 683 0 0 179 504)
Population mean number of perfect (error zero) cases: 2.24
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 integer_yankdup print_integer exec_dup_times ())
Errors: [0 1 0 1 0 1 1 1 1 1]
Total: 7
Mean: 0.7
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.764
Median total errors in population: 8
Error averages by case: (0.71 1.0 0.71 1.0 0.71 0.317 1.0 1.0 0.821 0.496)
Error minima by case: (0 1 0 1 0 0 1 1 0 0)
Average genome size in population (length): 3.568
Average program size in population (points): 5.324
Average percent parens in population: 0.328
Minimum age in population: 69.34513482223235
Maximum age in population: 74.77642740949264
Average age in population: 72.76795523045308
Median age in population: 72.84265316904758
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 259
Genome diversity (% unique genomes):	 0.116
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 266
Syntactic diversity (% unique Push programs):	 0.084
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 49000
Number of point (instruction) evaluations so far: 5338311
--- Timings ---
Current time: 1559584877182 milliseconds
Total Time:         108.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        91.9 seconds, 84.9%
Fitness Testing:      9.8 seconds,  9.1%
Report:               6.4 seconds,  5.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 48
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 49
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 49
;;******************************
;; -*- Smallest problem report - generation 49
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 print_integer exec_dup_times ())
Lexicase best errors: [1 0 0 1 0 0 0 1 0 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 print_integer exec_dup_times ())
Zero cases best errors: [1 0 0 1 0 0 0 1 0 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (466 970 256 466 256 970 256 250 256 1000)
Population mean number of elite cases: 5.15
Count of perfect (error zero) individuals by case: (466 970 256 466 256 970 256 250 256 0)
Population mean number of perfect (error zero) cases: 4.15
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 1, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 1, :instruction exec_dup_times})
Best program: (in1 boolean_shove print_integer exec_dup_times ())
Errors: [1 0 0 1 0 0 0 1 0 1]
Total: 4
Mean: 0.4
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 5.854
Median total errors in population: 6
Error averages by case: (0.534 0.03 0.744 0.534 0.744 0.03 0.744 0.75 0.744 1.0)
Error minima by case: (0 0 0 0 0 0 0 0 0 1)
Average genome size in population (length): 3.76
Average program size in population (points): 5.616
Average percent parens in population: 0.329
Minimum age in population: 71.00707390601158
Maximum age in population: 76.36854022093107
Average age in population: 74.32305081590596
Median age in population: 74.41132944156514
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 404
Genome diversity (% unique genomes):	 0.122
Min copy number of one Push program: 1
Median copy number of one Push program: 3/2
Max copy number of one Push program: 420
Syntactic diversity (% unique Push programs):	 0.09
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 50000
Number of point (instruction) evaluations so far: 5377338
--- Timings ---
Current time: 1559584879864 milliseconds
Total Time:         110.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        94.4 seconds, 85.1%
Fitness Testing:      9.9 seconds,  9.0%
Report:               6.4 seconds,  5.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 49
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 50
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 50
;;******************************
;; -*- Smallest problem report - generation 50
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 2, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 1 0 0 0 1 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 2, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 1 0 0 0 1 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (149 149 1000 567 978 149 978 567 567 149)
Population mean number of elite cases: 5.25
Count of perfect (error zero) individuals by case: (149 149 0 567 978 149 978 567 567 149)
Population mean number of perfect (error zero) cases: 4.25
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_shove})
Best program: (in3 print_integer boolean_shove)
Errors: [0 0 1 1 0 0 0 1 1 0]
Total: 4
Mean: 0.4
Genome size: 3
Size: 4
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 5.747
Median total errors in population: 5
Error averages by case: (0.851 0.851 1.0 0.433 0.022 0.851 0.022 0.433 0.433 0.851)
Error minima by case: (0 0 1 0 0 0 0 0 0 0)
Average genome size in population (length): 3.824
Average program size in population (points): 5.661
Average percent parens in population: 0.323
Minimum age in population: 72.00707390601158
Maximum age in population: 77.72710266268513
Average age in population: 75.76799117221589
Median age in population: 75.87204492444128
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 231
Genome diversity (% unique genomes):	 0.109
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 266
Syntactic diversity (% unique Push programs):	 0.081
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 51000
Number of point (instruction) evaluations so far: 5416952
--- Timings ---
Current time: 1559584881905 milliseconds
Total Time:         112.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        96.3 seconds, 85.3%
Fitness Testing:     10.0 seconds,  8.9%
Report:               6.5 seconds,  5.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 50
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 51
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 51
;;******************************
;; -*- Smallest problem report - generation 51
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 0 0 1 1 1 1 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 0 0 1 1 1 1 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (971 972 1 567 567 405 1 405 1000 972)
Population mean number of elite cases: 5.86
Count of perfect (error zero) individuals by case: (971 972 1 567 567 405 1 405 0 972)
Population mean number of perfect (error zero) cases: 4.86
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_dup})
Best program: (in1 boolean_shove print_integer boolean_dup)
Errors: [0 0 1 1 1 0 1 0 1 0]
Total: 5
Mean: 0.5
Genome size: 4
Size: 5
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 5.139
Median total errors in population: 5
Error averages by case: (0.029 0.028 0.999 0.433 0.433 0.595 0.999 0.595 1.0 0.028)
Error minima by case: (0 0 0 0 0 0 0 0 1 0)
Average genome size in population (length): 3.518
Average program size in population (points): 5.206
Average percent parens in population: 0.322
Minimum age in population: 73.0212826102628
Maximum age in population: 79.42666056792373
Average age in population: 77.16127497307971
Median age in population: 77.24578581460354
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 117
Genome diversity (% unique genomes):	 0.114
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 249
Syntactic diversity (% unique Push programs):	 0.084
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.007
--- Run Statistics ---
Number of program evaluations used so far: 52000
Number of point (instruction) evaluations so far: 5454394
--- Timings ---
Current time: 1559584883899 milliseconds
Total Time:         114.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        98.1 seconds, 85.4%
Fitness Testing:     10.1 seconds,  8.8%
Report:               6.6 seconds,  5.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 51
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 52
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 52
;;******************************
;; -*- Smallest problem report - generation 52
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in1 boolean_shove print_integer exec_dup_times ())
Lexicase best errors: [0 1 1 1 0 1 1 0 0 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in1 boolean_shove print_integer exec_dup_times ())
Zero cases best errors: [0 1 1 1 0 1 1 0 0 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (364 329 1 281 975 281 329 364 364 1)
Population mean number of elite cases: 3.29
Count of perfect (error zero) individuals by case: (364 329 1 281 975 281 329 364 364 1)
Population mean number of perfect (error zero) cases: 3.29
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in1 print_integer exec_dup_times ())
Errors: [0 1 1 1 0 1 1 0 0 1]
Total: 6
Mean: 0.6
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.711
Median total errors in population: 7
Error averages by case: (0.636 0.671 0.999 0.719 0.025 0.719 0.671 0.636 0.636 0.999)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.711
Average program size in population (points): 5.503
Average percent parens in population: 0.325
Minimum age in population: 74.0212826102628
Maximum age in population: 80.697855348629
Average age in population: 79.08774119036987
Median age in population: 79.23763199484291
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 267
Genome diversity (% unique genomes):	 0.123
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 273
Syntactic diversity (% unique Push programs):	 0.09
Total error diversity:				 0.003
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.006
--- Run Statistics ---
Number of program evaluations used so far: 53000
Number of point (instruction) evaluations so far: 5493444
--- Timings ---
Current time: 1559584885906 milliseconds
Total Time:         116.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:        99.9 seconds, 85.5%
Fitness Testing:     10.2 seconds,  8.8%
Report:               6.7 seconds,  5.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 52
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 53
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 53
;;******************************
;; -*- Smallest problem report - generation 53
Test total error for best: 656
Test mean error for best: 0.65600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 20                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: 49                 
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: -67                
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 53                 
Correct output: 34                  | Program output: 78                 
Correct output: 23                  | Program output: 76                 
Correct output: 44                  | Program output: 44                 
Correct output: 23                  | Program output: 56                 
Correct output: 46                  | Program output: 51                 
Correct output: 16                  | Program output: 50                 
Correct output: 40                  | Program output: 74                 
Correct output: 16                  | Program output: 52                 
Correct output: 6                   | Program output: 74                 
Correct output: 3                   | Program output: 78                 
Correct output: 36                  | Program output: 69                 
Correct output: 58                  | Program output: 64                 
Correct output: 0                   | Program output: 61                 
Correct output: 20                  | Program output: 27                 
Correct output: 16                  | Program output: 60                 
Correct output: 0                   | Program output: 66                 
Correct output: 19                  | Program output: 78                 
Correct output: 1                   | Program output: 1                  
Correct output: 42                  | Program output: 42                 
Correct output: -41                 | Program output: -36                
Correct output: -81                 | Program output: 58                 
Correct output: -37                 | Program output: -17                
Correct output: 16                  | Program output: 16                 
Correct output: -6                  | Program output: 34                 
Correct output: -69                 | Program output: -50                
Correct output: -75                 | Program output: 69                 
Correct output: -46                 | Program output: -46                
Correct output: -100                | Program output: 3                  
Correct output: -89                 | Program output: 34                 
Correct output: -91                 | Program output: 9                  
Correct output: -59                 | Program output: 30                 
Correct output: -24                 | Program output: 84                 
Correct output: -71                 | Program output: -46                
Correct output: -100                | Program output: -81                
Correct output: -43                 | Program output: -28                
Correct output: -43                 | Program output: -33                
Correct output: -35                 | Program output: 88                 
Correct output: -78                 | Program output: -78                
Correct output: -30                 | Program output: 34                 
Correct output: -62                 | Program output: 96                 
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -37                
Correct output: -98                 | Program output: 63                 
Correct output: -42                 | Program output: -12                
Correct output: -36                 | Program output: 2                  
Correct output: -64                 | Program output: -64                
Correct output: -73                 | Program output: 3                  
Correct output: -74                 | Program output: 90                 
Correct output: -97                 | Program output: 46                 
Correct output: -59                 | Program output: 84                 
Correct output: -76                 | Program output: 25                 
Correct output: -29                 | Program output: 41                 
Correct output: -34                 | Program output: 8                  
Correct output: -45                 | Program output: 29                 
Correct output: -94                 | Program output: -94                
Correct output: -94                 | Program output: -52                
Correct output: -71                 | Program output: 70                 
Correct output: -82                 | Program output: -82                
Correct output: -84                 | Program output: -7                 
Correct output: -45                 | Program output: 81                 
Correct output: -90                 | Program output: -62                
Correct output: -28                 | Program output: -28                
Correct output: -32                 | Program output: 83                 
Correct output: -98                 | Program output: -98                
Correct output: -82                 | Program output: 1                  
Correct output: -56                 | Program output: 36                 
Correct output: -73                 | Program output: -58                
Correct output: -34                 | Program output: -18                
Correct output: -84                 | Program output: 98                 
Correct output: -76                 | Program output: -42                
Correct output: -48                 | Program output: 29                 
Correct output: -71                 | Program output: 26                 
Correct output: -84                 | Program output: -84                
Correct output: -31                 | Program output: 17                 
Correct output: -73                 | Program output: -66                
Correct output: -37                 | Program output: -7                 
Correct output: -86                 | Program output: -9                 
Correct output: -55                 | Program output: -55                
Correct output: -92                 | Program output: -89                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in2} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in2 boolean_shove print_integer exec_dup_times ())
Lexicase best errors: [0 1 0 1 0 0 0 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in2} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in2 boolean_shove print_integer exec_dup_times ())
Zero cases best errors: [0 1 0 1 0 0 0 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (217 346 217 216 779 217 756 217 217 217)
Population mean number of elite cases: 3.40
Count of perfect (error zero) individuals by case: (217 346 217 216 779 217 756 217 217 217)
Population mean number of perfect (error zero) cases: 3.40
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in2 boolean_shove print_integer exec_dup_times ())
Errors: [0 1 0 1 0 0 0 0 0 0]
Total: 2
Mean: 0.2
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.601
Median total errors in population: 7
Error averages by case: (0.783 0.654 0.783 0.784 0.221 0.783 0.244 0.783 0.783 0.783)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.807
Average program size in population (points): 5.653
Average percent parens in population: 0.324
Minimum age in population: 77.05136181861172
Maximum age in population: 82.62086563814042
Average age in population: 80.55976171643204
Median age in population: 80.64538712838949
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 207
Genome diversity (% unique genomes):	 0.126
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 210
Syntactic diversity (% unique Push programs):	 0.096
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 54000
Number of point (instruction) evaluations so far: 5535672
--- Timings ---
Current time: 1559584888026 milliseconds
Total Time:         119.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       101.8 seconds, 85.6%
Fitness Testing:     10.4 seconds,  8.7%
Report:               6.7 seconds,  5.7%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 53
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 54
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 54
;;******************************
;; -*- Smallest problem report - generation 54
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in1 boolean_shove print_integer exec_dup_times ())
Lexicase best errors: [1 0 1 1 1 0 1 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in1 boolean_shove print_integer exec_dup_times ())
Zero cases best errors: [1 0 1 1 1 0 1 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 126 1000 1000 94 126 1000 970 126 220)
Population mean number of elite cases: 5.66
Count of perfect (error zero) individuals by case: (0 126 0 0 94 126 0 970 126 220)
Population mean number of perfect (error zero) cases: 1.66
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in1 boolean_shove print_integer exec_dup_times ())
Errors: [1 0 1 1 1 0 1 0 0 0]
Total: 5
Mean: 0.5
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 8.338
Median total errors in population: 9
Error averages by case: (1.0 0.874 1.0 1.0 0.906 0.874 1.0 0.03 0.874 0.78)
Error minima by case: (1 0 1 1 0 0 1 0 0 0)
Average genome size in population (length): 3.907
Average program size in population (points): 5.825
Average percent parens in population: 0.329
Minimum age in population: 78.05136181861172
Maximum age in population: 83.79433544608526
Average age in population: 82.06607853601145
Median age in population: 82.13436675726877
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 685
Genome diversity (% unique genomes):	 0.107
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 699
Syntactic diversity (% unique Push programs):	 0.086
Total error diversity:				 0.004
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 55000
Number of point (instruction) evaluations so far: 5576682
--- Timings ---
Current time: 1559584890385 milliseconds
Total Time:         121.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       104.0 seconds, 85.7%
Fitness Testing:     10.5 seconds,  8.6%
Report:               6.8 seconds,  5.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 54
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 55
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 55
;;******************************
;; -*- Smallest problem report - generation 55
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction exec_s_when_autoconstructing} {:close 0, :instruction print_integer})
Lexicase best program: (in4 exec_s_when_autoconstructing () () (print_integer))
Lexicase best errors: [0 0 1 1 0 0 1 1 0 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 7
Percent parens: 0.571
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction exec_s_when_autoconstructing} {:close 0, :instruction print_integer})
Zero cases best program: (in4 exec_s_when_autoconstructing () () (print_integer))
Zero cases best errors: [0 0 1 1 0 0 1 1 0 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 7
Percent parens: 0.571
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3 3 1000 247 3 970 1000 1000 3 720)
Population mean number of elite cases: 4.95
Count of perfect (error zero) individuals by case: (3 3 0 247 3 970 0 0 3 720)
Population mean number of perfect (error zero) cases: 1.95
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 print_integer exec_dup_times ())
Errors: [0 0 1 1 0 0 1 1 0 1]
Total: 5
Mean: 0.5
Genome size: 3
Size: 5
Percent parens: 0.400
--- Population Statistics ---
Average total errors in population: 8.051
Median total errors in population: 8
Error averages by case: (0.997 0.997 1.0 0.753 0.997 0.03 1.0 1.0 0.997 0.28)
Error minima by case: (0 0 1 0 0 0 1 1 0 0)
Average genome size in population (length): 3.715
Average program size in population (points): 5.439
Average percent parens in population: 0.314
Minimum age in population: 79.05136181861172
Maximum age in population: 85.2599709749671
Average age in population: 83.48136726947043
Median age in population: 83.5773950818363
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 194
Genome diversity (% unique genomes):	 0.112
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 303
Syntactic diversity (% unique Push programs):	 0.084
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.007
--- Run Statistics ---
Number of program evaluations used so far: 56000
Number of point (instruction) evaluations so far: 5622932
--- Timings ---
Current time: 1559584892271 milliseconds
Total Time:         123.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       105.7 seconds, 85.8%
Fitness Testing:     10.6 seconds,  8.6%
Report:               6.9 seconds,  5.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 55
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 56
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 56
;;******************************
;; -*- Smallest problem report - generation 56
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 print_integer exec_dup_times ())
Lexicase best errors: [1 1 1 0 0 1 0 0 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 print_integer exec_dup_times ())
Zero cases best errors: [1 1 1 0 0 1 0 0 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (649 1000 168 156 156 168 156 156 648 168)
Population mean number of elite cases: 3.42
Count of perfect (error zero) individuals by case: (649 0 168 156 156 168 156 156 648 168)
Population mean number of perfect (error zero) cases: 2.42
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap})
Best program: (in3 print_integer boolean_xor integer_swap)
Errors: [1 1 1 0 0 1 0 0 1 1]
Total: 6
Mean: 0.6
Genome size: 4
Size: 5
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 7.575
Median total errors in population: 8
Error averages by case: (0.351 1.0 0.832 0.844 0.844 0.832 0.844 0.844 0.352 0.832)
Error minima by case: (0 1 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.401
Average program size in population (points): 5.521
Average percent parens in population: 0.368
Minimum age in population: 82.35301585314318
Maximum age in population: 86.87542041864344
Average age in population: 85.11165802821772
Median age in population: 85.16739546043388
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 216
Genome diversity (% unique genomes):	 0.108
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 217
Syntactic diversity (% unique Push programs):	 0.079
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 57000
Number of point (instruction) evaluations so far: 5660771
--- Timings ---
Current time: 1559584894882 milliseconds
Total Time:         125.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       108.2 seconds, 85.9%
Fitness Testing:     10.7 seconds,  8.5%
Report:               7.0 seconds,  5.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 56
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 57
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 57
;;******************************
;; -*- Smallest problem report - generation 57
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 1 1 1 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 5
Percent parens: 0.400
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 1 1 1 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 5
Percent parens: 0.400
--- Lexicase Population Statistics ---
Count of elite individuals by case: (231 542 433 1000 310 433 1000 1000 231 231)
Population mean number of elite cases: 5.41
Count of perfect (error zero) individuals by case: (231 542 433 0 310 433 0 0 231 231)
Population mean number of perfect (error zero) cases: 2.41
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction integer_gt} {:close 0, :instruction print_integer} {:close 0, :instruction exec_eq})
Best program: (in4 integer_gt print_integer exec_eq)
Errors: [0 0 1 1 1 1 1 1 0 0]
Total: 6
Mean: 0.6
Genome size: 4
Size: 5
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 7.589
Median total errors in population: 8
Error averages by case: (0.769 0.458 0.567 1.0 0.69 0.567 1.0 1.0 0.769 0.769)
Error minima by case: (0 0 0 1 0 0 1 1 0 0)
Average genome size in population (length): 3.446
Average program size in population (points): 5.237
Average percent parens in population: 0.334
Minimum age in population: 83.35301585314318
Maximum age in population: 88.55550806637655
Average age in population: 86.59224797083984
Median age in population: 86.62355201380363
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 76
Genome diversity (% unique genomes):	 0.117
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 146
Syntactic diversity (% unique Push programs):	 0.084
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 58000
Number of point (instruction) evaluations so far: 5700291
--- Timings ---
Current time: 1559584896806 milliseconds
Total Time:         127.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       109.9 seconds, 86.0%
Fitness Testing:     10.8 seconds,  8.4%
Report:               7.0 seconds,  5.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 57
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 58
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 58
;;******************************
;; -*- Smallest problem report - generation 58
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction boolean_or} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 1, :instruction exec_y})
Lexicase best program: (boolean_or in1 print_integer exec_y ())
Lexicase best errors: [0 0 0 0 1 0 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction boolean_or} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 1, :instruction exec_y})
Zero cases best program: (boolean_or in1 print_integer exec_y ())
Zero cases best errors: [0 0 0 0 1 0 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (978 696 978 978 282 185 511 282 978 186)
Population mean number of elite cases: 6.05
Count of perfect (error zero) individuals by case: (978 696 978 978 282 185 511 282 978 186)
Population mean number of perfect (error zero) cases: 6.05
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in1 boolean_shove print_integer exec_dup_times ())
Errors: [0 0 0 0 1 0 1 1 0 0]
Total: 3
Mean: 0.3
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 3.946
Median total errors in population: 4
Error averages by case: (0.022 0.304 0.022 0.022 0.718 0.815 0.489 0.718 0.022 0.814)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.409
Average program size in population (points): 5.394
Average percent parens in population: 0.354
Minimum age in population: 85.26113215223994
Maximum age in population: 89.95437040143054
Average age in population: 88.0500092725461
Median age in population: 88.11603657011229
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 175
Genome diversity (% unique genomes):	 0.113
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 181
Syntactic diversity (% unique Push programs):	 0.077
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.006
--- Run Statistics ---
Number of program evaluations used so far: 59000
Number of point (instruction) evaluations so far: 5738291
--- Timings ---
Current time: 1559584899010 milliseconds
Total Time:         130.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       111.9 seconds, 86.1%
Fitness Testing:     10.9 seconds,  8.4%
Report:               7.1 seconds,  5.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 58
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 59
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 59
;;******************************
;; -*- Smallest problem report - generation 59
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in3} {:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in3 in3 print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 0 1 1 0 0 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in3} {:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in3 in3 print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 0 1 1 0 0 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (334 334 220 334 220 427 334 981 220 1)
Population mean number of elite cases: 3.40
Count of perfect (error zero) individuals by case: (334 334 220 334 220 427 334 981 220 1)
Population mean number of perfect (error zero) cases: 3.40
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction print_integer})
Best program: (in3 print_integer print_integer)
Errors: [0 0 1 0 1 1 0 0 1 1]
Total: 5
Mean: 0.5
Genome size: 3
Size: 4
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 6.595
Median total errors in population: 6
Error averages by case: (0.666 0.666 0.78 0.666 0.78 0.573 0.666 0.019 0.78 0.999)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.533
Average program size in population (points): 5.317
Average percent parens in population: 0.326
Minimum age in population: 86.40365959738843
Maximum age in population: 91.55203676145666
Average age in population: 89.53095151067104
Median age in population: 89.62591160569964
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 72
Genome diversity (% unique genomes):	 0.124
Min copy number of one Push program: 1
Median copy number of one Push program: 2
Max copy number of one Push program: 119
Syntactic diversity (% unique Push programs):	 0.085
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 60000
Number of point (instruction) evaluations so far: 5785641
--- Timings ---
Current time: 1559584901651 milliseconds
Total Time:         132.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       114.4 seconds, 86.2%
Fitness Testing:     11.0 seconds,  8.3%
Report:               7.2 seconds,  5.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 59
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 60
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 60
;;******************************
;; -*- Smallest problem report - generation 60
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in1 boolean_shove print_integer exec_dup_times ())
Lexicase best errors: [0 1 0 1 0 1 0 1 0 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in1 boolean_shove print_integer exec_dup_times ())
Zero cases best errors: [0 1 0 1 0 1 0 1 0 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (874 438 115 1 115 1 115 1 115 438)
Population mean number of elite cases: 2.21
Count of perfect (error zero) individuals by case: (874 438 115 1 115 1 115 1 115 438)
Population mean number of perfect (error zero) cases: 2.21
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in1 boolean_shove print_integer exec_dup_times ())
Errors: [0 1 0 1 0 1 0 1 0 1]
Total: 5
Mean: 0.5
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.787
Median total errors in population: 7
Error averages by case: (0.126 0.562 0.885 0.999 0.885 0.999 0.885 0.999 0.885 0.562)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.338
Average program size in population (points): 5.079
Average percent parens in population: 0.328
Minimum age in population: 87.49635257260512
Maximum age in population: 93.00196870142484
Average age in population: 91.16515825595032
Median age in population: 91.2810540999393
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 104
Genome diversity (% unique genomes):	 0.122
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 116
Syntactic diversity (% unique Push programs):	 0.088
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 61000
Number of point (instruction) evaluations so far: 5822231
--- Timings ---
Current time: 1559584903862 milliseconds
Total Time:         134.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       116.4 seconds, 86.3%
Fitness Testing:     11.1 seconds,  8.2%
Report:               7.2 seconds,  5.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 60
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 61
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 61
;;******************************
;; -*- Smallest problem report - generation 61
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer})
Lexicase best program: (in1 boolean_shove print_integer)
Lexicase best errors: [0 0 0 0 1 1 1 1 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 4
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer})
Zero cases best program: (in1 boolean_shove print_integer)
Zero cases best errors: [0 0 0 0 1 1 1 1 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 4
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (457 457 977 977 2 234 2 284 457 457)
Population mean number of elite cases: 4.30
Count of perfect (error zero) individuals by case: (457 457 977 977 2 234 2 284 457 457)
Population mean number of perfect (error zero) cases: 4.30
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer})
Best program: (in1 boolean_shove print_integer)
Errors: [0 0 0 0 1 1 1 1 0 0]
Total: 4
Mean: 0.4
Genome size: 3
Size: 4
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 5.696
Median total errors in population: 7
Error averages by case: (0.543 0.543 0.023 0.023 0.998 0.766 0.998 0.716 0.543 0.543)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.476
Average program size in population (points): 4.902
Average percent parens in population: 0.287
Minimum age in population: 88.98928268586864
Maximum age in population: 94.48400109735447
Average age in population: 92.61420772940565
Median age in population: 92.67783440252946
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 278
Genome diversity (% unique genomes):	 0.117
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 280
Syntactic diversity (% unique Push programs):	 0.079
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 62000
Number of point (instruction) evaluations so far: 5865299
--- Timings ---
Current time: 1559584906169 milliseconds
Total Time:         137.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       118.6 seconds, 86.4%
Fitness Testing:     11.2 seconds,  8.2%
Report:               7.3 seconds,  5.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 61
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 62
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 62
;;******************************
;; -*- Smallest problem report - generation 62
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 0 0 0 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 0 0 0 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (462 462 131 841 464 462 243 243 462 972)
Population mean number of elite cases: 4.74
Count of perfect (error zero) individuals by case: (462 462 131 841 464 462 243 243 462 972)
Population mean number of perfect (error zero) cases: 4.74
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer})
Best program: (in4 in1 print_integer)
Errors: [0 0 1 0 0 0 1 1 0 0]
Total: 3
Mean: 0.3
Genome size: 3
Size: 4
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 5.258
Median total errors in population: 6
Error averages by case: (0.538 0.538 0.869 0.159 0.536 0.538 0.757 0.757 0.538 0.028)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.587
Average program size in population (points): 4.948
Average percent parens in population: 0.273
Minimum age in population: 91.52191664339254
Maximum age in population: 95.95965155124318
Average age in population: 93.8813121117682
Median age in population: 93.94031705610516
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 129
Genome diversity (% unique genomes):	 0.133
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 132
Syntactic diversity (% unique Push programs):	 0.09
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 63000
Number of point (instruction) evaluations so far: 5905679
--- Timings ---
Current time: 1559584908369 milliseconds
Total Time:         139.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       120.6 seconds, 86.5%
Fitness Testing:     11.3 seconds,  8.1%
Report:               7.4 seconds,  5.3%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 62
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 63
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 63
;;******************************
;; -*- Smallest problem report - generation 63
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction print_integer})
Lexicase best program: (in3 print_integer print_integer)
Lexicase best errors: [0 1 0 0 1 1 1 0 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 4
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction print_integer})
Zero cases best program: (in3 print_integer print_integer)
Zero cases best errors: [0 1 0 0 1 1 1 0 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 4
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (132 224 132 132 224 612 836 132 1000 612)
Population mean number of elite cases: 4.04
Count of perfect (error zero) individuals by case: (132 224 132 132 224 612 836 132 0 612)
Population mean number of perfect (error zero) cases: 3.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer})
Best program: (in3 print_integer)
Errors: [0 1 0 0 1 1 1 0 1 1]
Total: 6
Mean: 0.6
Genome size: 2
Size: 3
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.964
Median total errors in population: 7
Error averages by case: (0.868 0.776 0.868 0.868 0.776 0.388 0.164 0.868 1.0 0.388)
Error minima by case: (0 0 0 0 0 0 0 0 1 0)
Average genome size in population (length): 3.717
Average program size in population (points): 5.169
Average percent parens in population: 0.278
Minimum age in population: 92.76283771409268
Maximum age in population: 97.43320583343332
Average age in population: 95.32505991224595
Median age in population: 95.40509856920714
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 108
Genome diversity (% unique genomes):	 0.142
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 152
Syntactic diversity (% unique Push programs):	 0.102
Total error diversity:				 0.003
Error (vector) diversity:			 0.004
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 64000
Number of point (instruction) evaluations so far: 5950547
--- Timings ---
Current time: 1559584910645 milliseconds
Total Time:         141.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       122.7 seconds, 86.6%
Fitness Testing:     11.4 seconds,  8.1%
Report:               7.4 seconds,  5.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 63
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 64
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 64
;;******************************
;; -*- Smallest problem report - generation 64
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in1 boolean_shove print_integer exec_dup_times ())
Lexicase best errors: [1 0 0 0 0 1 1 1 1 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in1 boolean_shove print_integer exec_dup_times ())
Zero cases best errors: [1 0 0 0 0 1 1 1 1 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (2 976 258 709 258 2 267 449 267 258)
Population mean number of elite cases: 3.45
Count of perfect (error zero) individuals by case: (2 976 258 709 258 2 267 449 267 258)
Population mean number of perfect (error zero) cases: 3.45
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in1 boolean_shove print_integer exec_dup_times ())
Errors: [1 0 0 0 0 1 1 1 1 0]
Total: 5
Mean: 0.5
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.554
Median total errors in population: 7
Error averages by case: (0.998 0.024 0.742 0.291 0.742 0.998 0.733 0.551 0.733 0.742)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.449
Average program size in population (points): 4.771
Average percent parens in population: 0.276
Minimum age in population: 94.21924578170263
Maximum age in population: 98.80784404925411
Average age in population: 96.78600966818098
Median age in population: 96.85959332848832
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 128
Genome diversity (% unique genomes):	 0.129
Min copy number of one Push program: 1
Median copy number of one Push program: 2
Max copy number of one Push program: 137
Syntactic diversity (% unique Push programs):	 0.089
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 65000
Number of point (instruction) evaluations so far: 5992177
--- Timings ---
Current time: 1559584912746 milliseconds
Total Time:         143.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       124.6 seconds, 86.7%
Fitness Testing:     11.5 seconds,  8.0%
Report:               7.5 seconds,  5.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 64
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 65
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 65
;;******************************
;; -*- Smallest problem report - generation 65
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in1 boolean_shove print_integer exec_dup_times ())
Lexicase best errors: [0 0 0 0 1 1 1 0 1 1]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in1 boolean_shove print_integer exec_dup_times ())
Zero cases best errors: [0 0 0 0 1 1 1 0 1 1]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (972 633 375 375 215 215 258 375 124 258)
Population mean number of elite cases: 3.80
Count of perfect (error zero) individuals by case: (972 633 375 375 215 215 258 375 124 258)
Population mean number of perfect (error zero) cases: 3.80
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in1 boolean_shove print_integer exec_dup_times ())
Errors: [0 0 0 0 1 1 1 0 1 1]
Total: 5
Mean: 0.5
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.2
Median total errors in population: 6
Error averages by case: (0.028 0.367 0.625 0.625 0.785 0.785 0.742 0.625 0.876 0.742)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.779
Average program size in population (points): 5.221
Average percent parens in population: 0.273
Minimum age in population: 95.21924578170263
Maximum age in population: 100.0453896445674
Average age in population: 98.09326660474403
Median age in population: 98.17605573955721
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 131
Genome diversity (% unique genomes):	 0.14
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 132
Syntactic diversity (% unique Push programs):	 0.104
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 66000
Number of point (instruction) evaluations so far: 6033877
--- Timings ---
Current time: 1559584915369 milliseconds
Total Time:         146.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       127.1 seconds, 86.8%
Fitness Testing:     11.7 seconds,  8.0%
Report:               7.6 seconds,  5.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 65
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 66
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 66
;;******************************
;; -*- Smallest problem report - generation 66
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction integer_div} {:close 0, :instruction print_integer})
Lexicase best program: (in4 integer_div print_integer)
Lexicase best errors: [1 0 0 1 1 1 1 1 0 0]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 4
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction integer_div} {:close 0, :instruction print_integer})
Zero cases best program: (in4 integer_div print_integer)
Zero cases best errors: [1 0 0 1 1 1 1 1 0 0]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 4
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (392 208 979 279 100 279 392 671 208 208)
Population mean number of elite cases: 3.72
Count of perfect (error zero) individuals by case: (392 208 979 279 100 279 392 671 208 208)
Population mean number of perfect (error zero) cases: 3.72
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in1 print_integer exec_dup_times ())
Errors: [0 1 0 1 1 1 0 0 1 1]
Total: 6
Mean: 0.6
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.284
Median total errors in population: 6
Error averages by case: (0.608 0.792 0.021 0.721 0.9 0.721 0.608 0.329 0.792 0.792)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.803
Average program size in population (points): 5.258
Average percent parens in population: 0.272
Minimum age in population: 96.21924578170263
Maximum age in population: 101.6574454423529
Average age in population: 99.5589852604363
Median age in population: 99.64935355484577
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 144
Genome diversity (% unique genomes):	 0.152
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 145
Syntactic diversity (% unique Push programs):	 0.107
Total error diversity:				 0.003
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 67000
Number of point (instruction) evaluations so far: 6076477
--- Timings ---
Current time: 1559584917724 milliseconds
Total Time:         148.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       129.2 seconds, 86.9%
Fitness Testing:     11.8 seconds,  7.9%
Report:               7.6 seconds,  5.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 66
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 67
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 67
;;******************************
;; -*- Smallest problem report - generation 67
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction print_integer})
Lexicase best program: (in3 print_integer print_integer)
Lexicase best errors: [1 0 1 1 0 1 1 0 1 1]
Lexicase best number of elite cases: 3
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 4
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction print_integer})
Zero cases best program: (in3 print_integer print_integer)
Zero cases best errors: [1 0 1 1 0 1 1 0 1 1]
Zero cases best number of elite cases: 3
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 4
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (259 111 312 259 111 294 312 111 312 294)
Population mean number of elite cases: 2.38
Count of perfect (error zero) individuals by case: (259 111 312 259 111 294 312 111 312 294)
Population mean number of perfect (error zero) cases: 2.38
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 2, :instruction integer_div} {:close 0, :instruction print_integer})
Best program: (in4 integer_div print_integer)
Errors: [1 1 0 1 1 1 0 1 0 1]
Total: 7
Mean: 0.7
Genome size: 3
Size: 4
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 7.625
Median total errors in population: 8
Error averages by case: (0.741 0.889 0.688 0.741 0.889 0.706 0.688 0.889 0.688 0.706)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.725
Average program size in population (points): 5.105
Average percent parens in population: 0.266
Minimum age in population: 97.21924578170263
Maximum age in population: 103.0116703601498
Average age in population: 101.0170016296369
Median age in population: 101.0747768109294
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 162
Genome diversity (% unique genomes):	 0.155
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 171
Syntactic diversity (% unique Push programs):	 0.111
Total error diversity:				 0.003
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 68000
Number of point (instruction) evaluations so far: 6116937
--- Timings ---
Current time: 1559584920050 milliseconds
Total Time:         151.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       131.3 seconds, 86.9%
Fitness Testing:     11.9 seconds,  7.9%
Report:               7.7 seconds,  5.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 67
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 68
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 68
;;******************************
;; -*- Smallest problem report - generation 68
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 print_integer exec_dup_times ())
Lexicase best errors: [0 1 1 1 1 1 0 1 1 0]
Lexicase best number of elite cases: 3
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 print_integer exec_dup_times ())
Zero cases best errors: [0 1 1 1 1 1 0 1 1 0]
Zero cases best number of elite cases: 3
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (208 189 283 297 297 283 208 189 283 208)
Population mean number of elite cases: 2.44
Count of perfect (error zero) individuals by case: (208 189 283 297 297 283 208 189 283 208)
Population mean number of perfect (error zero) cases: 2.44
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction integer_dup})
Best program: (in3 print_integer integer_dup)
Errors: [1 1 0 1 1 0 1 1 0 1]
Total: 7
Mean: 0.7
Genome size: 3
Size: 4
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 7.555
Median total errors in population: 8
Error averages by case: (0.792 0.811 0.717 0.703 0.703 0.717 0.792 0.811 0.717 0.792)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.588
Average program size in population (points): 4.959
Average percent parens in population: 0.273
Minimum age in population: 99.52834520489576
Maximum age in population: 104.5417172497668
Average age in population: 102.55729953009
Median age in population: 102.6253084112324
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 157
Genome diversity (% unique genomes):	 0.149
Min copy number of one Push program: 1
Median copy number of one Push program: 2
Max copy number of one Push program: 167
Syntactic diversity (% unique Push programs):	 0.108
Total error diversity:				 0.003
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.011
--- Run Statistics ---
Number of program evaluations used so far: 69000
Number of point (instruction) evaluations so far: 6154777
--- Timings ---
Current time: 1559584922384 milliseconds
Total Time:         153.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       133.5 seconds, 87.0%
Fitness Testing:     12.0 seconds,  7.8%
Report:               7.8 seconds,  5.1%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 68
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 69
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 69
;;******************************
;; -*- Smallest problem report - generation 69
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap})
Lexicase best program: (in3 print_integer boolean_xor integer_swap)
Lexicase best errors: [0 1 1 0 1 0 1 1 0 0]
Lexicase best number of elite cases: 5
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 5
Percent parens: 0.200
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_xor} {:close 0, :instruction integer_swap})
Zero cases best program: (in3 print_integer boolean_xor integer_swap)
Zero cases best errors: [0 1 1 0 1 0 1 1 0 0]
Zero cases best number of elite cases: 5
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 5
Percent parens: 0.200
--- Lexicase Population Statistics ---
Count of elite individuals by case: (301 305 198 301 503 976 198 172 778 301)
Population mean number of elite cases: 4.03
Count of perfect (error zero) individuals by case: (301 305 198 301 503 976 198 172 778 301)
Population mean number of perfect (error zero) cases: 4.03
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer})
Best program: (in3 print_integer)
Errors: [0 1 1 0 1 0 1 1 0 0]
Total: 5
Mean: 0.5
Genome size: 2
Size: 3
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 5.967
Median total errors in population: 6
Error averages by case: (0.699 0.695 0.802 0.699 0.497 0.024 0.802 0.828 0.222 0.699)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.662
Average program size in population (points): 5.104
Average percent parens in population: 0.279
Minimum age in population: 101.0349802111841
Maximum age in population: 105.9854611853339
Average age in population: 104.098801146677
Median age in population: 104.1924963221804
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 104
Genome diversity (% unique genomes):	 0.156
Min copy number of one Push program: 1
Median copy number of one Push program: 2
Max copy number of one Push program: 106
Syntactic diversity (% unique Push programs):	 0.112
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 70000
Number of point (instruction) evaluations so far: 6197577
--- Timings ---
Current time: 1559584924847 milliseconds
Total Time:         155.9 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       135.8 seconds, 87.1%
Fitness Testing:     12.2 seconds,  7.8%
Report:               7.8 seconds,  5.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 69
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 70
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 70
;;******************************
;; -*- Smallest problem report - generation 70
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction print_integer})
Lexicase best program: (in3 print_integer print_integer)
Lexicase best errors: [0 1 0 1 1 1 0 0 1 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 4
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction print_integer})
Zero cases best program: (in3 print_integer print_integer)
Zero cases best errors: [0 1 0 1 1 1 0 0 1 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 4
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (383 114 383 210 272 210 383 383 210 272)
Population mean number of elite cases: 2.82
Count of perfect (error zero) individuals by case: (383 114 383 210 272 210 383 383 210 272)
Population mean number of perfect (error zero) cases: 2.82
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in3} {:close 1, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in3 in3 print_integer exec_dup_times ())
Errors: [0 1 0 1 1 1 0 0 1 1]
Total: 6
Mean: 0.6
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.18
Median total errors in population: 7
Error averages by case: (0.617 0.886 0.617 0.79 0.728 0.79 0.617 0.617 0.79 0.728)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.643
Average program size in population (points): 5.09
Average percent parens in population: 0.281
Minimum age in population: 102.0349802111841
Maximum age in population: 107.3347580450118
Average age in population: 105.5621579300147
Median age in population: 105.6073536932954
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 159
Genome diversity (% unique genomes):	 0.162
Min copy number of one Push program: 1
Median copy number of one Push program: 2
Max copy number of one Push program: 160
Syntactic diversity (% unique Push programs):	 0.116
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 71000
Number of point (instruction) evaluations so far: 6239099
--- Timings ---
Current time: 1559584927267 milliseconds
Total Time:         158.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       138.0 seconds, 87.2%
Fitness Testing:     12.3 seconds,  7.8%
Report:               7.9 seconds,  5.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 70
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 71
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 71
;;******************************
;; -*- Smallest problem report - generation 71
Test total error for best: 649
Test mean error for best: 0.64900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: 52                 
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: 57                 
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -42                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 87                 
Correct output: 23                  | Program output: 83                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 74                 
Correct output: 40                  | Program output: 89                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 95                 
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 98                 
Correct output: 20                  | Program output: 61                 
Correct output: 16                  | Program output: 100                
Correct output: 0                   | Program output: 91                 
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: 100                
Correct output: -81                 | Program output: 19                 
Correct output: -37                 | Program output: 32                 
Correct output: 16                  | Program output: 49                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: 52                 
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: 77                 
Correct output: -100                | Program output: 90                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -84                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -15                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: 13                 
Correct output: -43                 | Program output: 31                 
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: 80                 
Correct output: -78                 | Program output: 9                  
Correct output: -30                 | Program output: 88                 
Correct output: -62                 | Program output: 18                 
Correct output: -26                 | Program output: 88                 
Correct output: -63                 | Program output: -9                 
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: 6                  
Correct output: -36                 | Program output: 18                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 69                 
Correct output: -74                 | Program output: -58                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -31                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: 90                 
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: 97                 
Correct output: -71                 | Program output: 37                 
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: 17                 
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 43                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -18                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -10                
Correct output: -31                 | Program output: 98                 
Correct output: -73                 | Program output: 32                 
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 87                 
Correct output: -92                 | Program output: 30                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction print_integer})
Lexicase best program: (in3 print_integer print_integer)
Lexicase best errors: [0 0 1 0 0 0 0 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 4
Percent parens: 0.250
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction print_integer} {:close 0, :instruction print_integer})
Zero cases best program: (in3 print_integer print_integer)
Zero cases best errors: [0 0 1 0 0 0 0 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 4
Percent parens: 0.250
--- Lexicase Population Statistics ---
Count of elite individuals by case: (979 385 292 385 385 385 385 198 198 292)
Population mean number of elite cases: 3.88
Count of perfect (error zero) individuals by case: (979 385 292 385 385 385 385 198 198 292)
Population mean number of perfect (error zero) cases: 3.88
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in3} {:close 0, :instruction boolean_empty} {:close 0, :instruction print_integer})
Best program: (in3 boolean_empty print_integer)
Errors: [0 0 1 0 0 0 0 1 1 1]
Total: 4
Mean: 0.4
Genome size: 3
Size: 4
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 6.116
Median total errors in population: 7
Error averages by case: (0.021 0.615 0.708 0.615 0.615 0.615 0.615 0.802 0.802 0.708)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.627
Average program size in population (points): 5.069
Average percent parens in population: 0.282
Minimum age in population: 103.0349802111841
Maximum age in population: 108.9388220801205
Average age in population: 107.0416658653708
Median age in population: 107.1089839235173
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 119
Genome diversity (% unique genomes):	 0.158
Min copy number of one Push program: 1
Median copy number of one Push program: 2
Max copy number of one Push program: 120
Syntactic diversity (% unique Push programs):	 0.114
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.006
--- Run Statistics ---
Number of program evaluations used so far: 72000
Number of point (instruction) evaluations so far: 6284543
--- Timings ---
Current time: 1559584929604 milliseconds
Total Time:         160.6 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       140.1 seconds, 87.2%
Fitness Testing:     12.4 seconds,  7.7%
Report:               8.0 seconds,  5.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 71
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 72
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 72
;;******************************
;; -*- Smallest problem report - generation 72
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in1 boolean_shove print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 1 0 0 1 1 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in1 boolean_shove print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 1 0 0 1 1 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (980 221 3 3 221 472 508 248 221 472)
Population mean number of elite cases: 3.35
Count of perfect (error zero) individuals by case: (980 221 3 3 221 472 508 248 221 472)
Population mean number of perfect (error zero) cases: 3.35
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 1, :instruction in4} {:close 1, :instruction in1} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_not})
Best program: (in4 in1 print_integer boolean_not)
Errors: [0 0 1 1 0 0 1 1 0 0]
Total: 4
Mean: 0.4
Genome size: 4
Size: 5
Percent parens: 0.200
--- Population Statistics ---
Average total errors in population: 6.651
Median total errors in population: 8
Error averages by case: (0.02 0.779 0.997 0.997 0.779 0.528 0.492 0.752 0.779 0.528)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.582
Average program size in population (points): 5.033
Average percent parens in population: 0.287
Minimum age in population: 104.0349802111841
Maximum age in population: 110.7442654627113
Average age in population: 108.5267945707176
Median age in population: 108.6155742454386
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 141
Genome diversity (% unique genomes):	 0.15
Min copy number of one Push program: 1
Median copy number of one Push program: 2
Max copy number of one Push program: 144
Syntactic diversity (% unique Push programs):	 0.111
Total error diversity:				 0.005
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 73000
Number of point (instruction) evaluations so far: 6328567
--- Timings ---
Current time: 1559584932083 milliseconds
Total Time:         163.1 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       142.4 seconds, 87.3%
Fitness Testing:     12.5 seconds,  7.7%
Report:               8.1 seconds,  4.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 72
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 73
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 73
;;******************************
;; -*- Smallest problem report - generation 73
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 integer_rot print_integer exec_dup_times ())
Lexicase best errors: [0 1 0 1 1 1 0 1 0 1]
Lexicase best number of elite cases: 4
Lexicase best total error: 6
Lexicase best mean error: 0.6
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 integer_rot print_integer exec_dup_times ())
Zero cases best errors: [0 1 0 1 1 1 0 1 0 1]
Zero cases best number of elite cases: 4
Zero cases best number of zero cases: 4
Zero cases best total error: 6
Zero cases best mean error: 0.6
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (302 411 302 411 118 554 302 118 302 118)
Population mean number of elite cases: 2.94
Count of perfect (error zero) individuals by case: (302 411 302 411 118 554 302 118 302 118)
Population mean number of perfect (error zero) cases: 2.94
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction print_integer})
Best program: (in4 print_integer)
Errors: [0 1 0 1 1 1 0 1 0 1]
Total: 6
Mean: 0.6
Genome size: 2
Size: 3
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.062
Median total errors in population: 7
Error averages by case: (0.698 0.589 0.698 0.589 0.882 0.446 0.698 0.882 0.698 0.882)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 3.541
Average program size in population (points): 5.04
Average percent parens in population: 0.300
Minimum age in population: 105.7331090582803
Maximum age in population: 112.2796471209506
Average age in population: 110.2296731159849
Median age in population: 110.3239305509522
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 191
Genome diversity (% unique genomes):	 0.151
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 191
Syntactic diversity (% unique Push programs):	 0.117
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.009
--- Run Statistics ---
Number of program evaluations used so far: 74000
Number of point (instruction) evaluations so far: 6383002
--- Timings ---
Current time: 1559584934141 milliseconds
Total Time:         165.2 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       144.3 seconds, 87.4%
Fitness Testing:     12.6 seconds,  7.7%
Report:               8.1 seconds,  4.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 73
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 74
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 74
;;******************************
;; -*- Smallest problem report - generation 74
Test total error for best: 637
Test mean error for best: 0.63700
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 68                 
Correct output: 34                  | Program output: 100                
Correct output: 23                  | Program output: 38                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 48                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 23                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 17                 
Correct output: 36                  | Program output: 45                 
Correct output: 58                  | Program output: 91                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 83                 
Correct output: 1                   | Program output: 57                 
Correct output: 42                  | Program output: 51                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 95                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: 100                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 31                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 79                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: 27                 
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 63                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 47                 
Correct output: -94                 | Program output: 84                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 97                 
Correct output: -90                 | Program output: 49                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 62                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 8                  
Correct output: -34                 | Program output: 19                 
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: 66                 
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 69                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 1 1 1 0 0 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 2, :instruction in1} {:close 1, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 1 1 1 0 0 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (281 281 290 1000 407 290 570 977 281 406)
Population mean number of elite cases: 4.78
Count of perfect (error zero) individuals by case: (281 281 290 0 407 290 570 977 281 406)
Population mean number of perfect (error zero) cases: 3.78
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in1 boolean_shove print_integer exec_dup_times ())
Errors: [0 0 1 1 1 1 0 0 0 1]
Total: 5
Mean: 0.5
Genome size: 4
Size: 6
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 6.217
Median total errors in population: 6
Error averages by case: (0.719 0.719 0.71 1.0 0.593 0.71 0.43 0.023 0.719 0.594)
Error minima by case: (0 0 0 1 0 0 0 0 0 0)
Average genome size in population (length): 3.205
Average program size in population (points): 4.586
Average percent parens in population: 0.303
Minimum age in population: 108.6505653642002
Maximum age in population: 113.5545894983104
Average age in population: 111.7388072771038
Median age in population: 111.8268089078884
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 2
Max copy number of one genome: 269
Genome diversity (% unique genomes):	 0.125
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 270
Syntactic diversity (% unique Push programs):	 0.097
Total error diversity:				 0.004
Error (vector) diversity:			 0.005
Behavioral diversity:				 0.008
--- Run Statistics ---
Number of program evaluations used so far: 75000
Number of point (instruction) evaluations so far: 6419739
--- Timings ---
Current time: 1559584936506 milliseconds
Total Time:         167.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       146.5 seconds, 87.4%
Fitness Testing:     12.7 seconds,  7.6%
Report:               8.2 seconds,  4.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 74
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 75
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 75
;;******************************
;; -*- Smallest problem report - generation 75
Test total error for best: 629
Test mean error for best: 0.62900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -47                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 28                 
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 4                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: 74                 
Correct output: -81                 | Program output: -31                
Correct output: -37                 | Program output: 17                 
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: 55                 
Correct output: -75                 | Program output: 65                 
Correct output: -46                 | Program output: -33                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: 2                  
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: 2                  
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -9                 
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: 98                 
Correct output: -78                 | Program output: 73                 
Correct output: -30                 | Program output: 86                 
Correct output: -62                 | Program output: -59                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -33                
Correct output: -42                 | Program output: -15                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: 15                 
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: 81                 
Correct output: -76                 | Program output: 60                 
Correct output: -29                 | Program output: -18                
Correct output: -34                 | Program output: -12                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: 55                 
Correct output: -71                 | Program output: -61                
Correct output: -82                 | Program output: -30                
Correct output: -84                 | Program output: -41                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: 61                 
Correct output: -82                 | Program output: 81                 
Correct output: -56                 | Program output: 45                 
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: 53                 
Correct output: -76                 | Program output: 90                 
Correct output: -48                 | Program output: 22                 
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -29                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -53                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 integer_rot print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 1 0 0 1 1 0 0]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 6
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction integer_rot} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 integer_rot print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 1 0 0 1 1 0 0]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 6
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (969 467 518 277 173 467 277 277 969 173)
Population mean number of elite cases: 4.57
Count of perfect (error zero) individuals by case: (969 467 518 277 173 467 277 277 969 173)
Population mean number of perfect (error zero) cases: 4.57
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction print_integer})
Best program: (in4 print_integer)
Errors: [0 0 1 1 0 0 1 1 0 0]
Total: 4
Mean: 0.4
Genome size: 2
Size: 3
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 5.433
Median total errors in population: 5
Error averages by case: (0.031 0.533 0.482 0.723 0.827 0.533 0.723 0.723 0.031 0.827)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 4.393
Average program size in population (points): 5.966
Average percent parens in population: 0.278
Minimum age in population: 110.0971468529381
Maximum age in population: 114.9471207452527
Average age in population: 113.2557302090414
Median age in population: 113.285218193458
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 279
Genome diversity (% unique genomes):	 0.142
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 285
Syntactic diversity (% unique Push programs):	 0.11
Total error diversity:				 0.005
Error (vector) diversity:			 0.008
Behavioral diversity:				 0.01
--- Run Statistics ---
Number of program evaluations used so far: 76000
Number of point (instruction) evaluations so far: 6469268
--- Timings ---
Current time: 1559584938643 milliseconds
Total Time:         169.7 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       148.4 seconds, 87.5%
Fitness Testing:     12.9 seconds,  7.6%
Report:               8.3 seconds,  4.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 75
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 76
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 76
;;******************************
;; -*- Smallest problem report - generation 76
Test total error for best: 525
Test mean error for best: 0.52500
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 69                 
Correct output: 6                   | Program output: 34                 
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 48                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 90                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 96                 
Correct output: 40                  | Program output: 70                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 48                 
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 46                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 97                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 82                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction in1} {:close 1, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 boolean_shove in1 integer_yankdup print_integer exec_dup_times ())
Lexicase best errors: [0 0 0 0 1 0 0 1 0 1]
Lexicase best number of elite cases: 8
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 9
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction in1} {:close 1, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 boolean_shove in1 integer_yankdup print_integer exec_dup_times ())
Zero cases best errors: [0 0 0 0 1 0 0 1 0 1]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 9
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (294 294 295 294 292 615 617 1000 294 384)
Population mean number of elite cases: 4.38
Count of perfect (error zero) individuals by case: (294 294 295 294 292 615 617 0 294 384)
Population mean number of perfect (error zero) cases: 3.38
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction in1} {:close 1, :instruction integer_yankdup} {:close 0, :instruction in1} {:close 1, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in1 boolean_shove in1 integer_yankdup in1 integer_yankdup print_integer exec_dup_times ())
Errors: [0 0 0 0 1 0 0 1 0 1]
Total: 3
Mean: 0.3
Genome size: 9
Size: 11
Percent parens: 0.182
--- Population Statistics ---
Average total errors in population: 6.621
Median total errors in population: 7
Error averages by case: (0.706 0.706 0.705 0.706 0.708 0.385 0.383 1.0 0.706 0.616)
Error minima by case: (0 0 0 0 0 0 0 1 0 0)
Average genome size in population (length): 4.727
Average program size in population (points): 6.33
Average percent parens in population: 0.276
Minimum age in population: 111.0971468529381
Maximum age in population: 116.4313760793106
Average age in population: 114.6522080200814
Median age in population: 114.7274941467015
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 247
Genome diversity (% unique genomes):	 0.116
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 249
Syntactic diversity (% unique Push programs):	 0.092
Total error diversity:				 0.007
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.016
--- Run Statistics ---
Number of program evaluations used so far: 77000
Number of point (instruction) evaluations so far: 6517176
--- Timings ---
Current time: 1559584941471 milliseconds
Total Time:         172.4 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       151.0 seconds, 87.6%
Fitness Testing:     13.0 seconds,  7.5%
Report:               8.3 seconds,  4.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 76
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 77
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 77
;;******************************
;; -*- Smallest problem report - generation 77
Test total error for best: 536
Test mean error for best: 0.53600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_yankdup} {:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction in1} {:close 1, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 in3 integer_dup_times integer_yankdup in1 boolean_shove in1 integer_yankdup print_integer exec_dup_times ())
Lexicase best errors: [1 0 1 0 1 0 0 0 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 13
Percent parens: 0.154
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_yankdup} {:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction in1} {:close 1, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 in3 integer_dup_times integer_yankdup in1 boolean_shove in1 integer_yankdup print_integer exec_dup_times ())
Zero cases best errors: [1 0 1 0 1 0 0 0 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 13
Percent parens: 0.154
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 761 190 761 190 838 761 521 526 753)
Population mean number of elite cases: 6.30
Count of perfect (error zero) individuals by case: (0 761 190 761 190 838 761 521 526 753)
Population mean number of perfect (error zero) cases: 5.30
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_yankdup} {:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction in1} {:close 1, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in1 in3 integer_dup_times integer_yankdup in1 boolean_shove in1 integer_yankdup print_integer exec_dup_times ())
Errors: [1 0 1 0 1 0 0 0 0 0]
Total: 3
Mean: 0.3
Genome size: 11
Size: 13
Percent parens: 0.154
--- Population Statistics ---
Average total errors in population: 4.699
Median total errors in population: 4
Error averages by case: (1.0 0.239 0.81 0.239 0.81 0.162 0.239 0.479 0.474 0.247)
Error minima by case: (1 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 6.823
Average program size in population (points): 8.808
Average percent parens in population: 0.229
Minimum age in population: 113.9425959908831
Maximum age in population: 118.0220073183942
Average age in population: 116.4289650130932
Median age in population: 116.4145620720646
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 307
Genome diversity (% unique genomes):	 0.11
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 314
Syntactic diversity (% unique Push programs):	 0.091
Total error diversity:				 0.008
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.027
--- Run Statistics ---
Number of program evaluations used so far: 78000
Number of point (instruction) evaluations so far: 6586491
--- Timings ---
Current time: 1559584944544 milliseconds
Total Time:         175.5 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       153.8 seconds, 87.6%
Fitness Testing:     13.2 seconds,  7.5%
Report:               8.4 seconds,  4.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 77
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 78
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 78
;;******************************
;; -*- Smallest problem report - generation 78
Test total error for best: 536
Test mean error for best: 0.53600
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 0                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 62                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 54                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 73                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 59                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 68                 
Correct output: 58                  | Program output: 81                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 27                 
Correct output: 42                  | Program output: 69                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: 32                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -19                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: -76                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: 10                 
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -12                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -12                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -66                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: 52                 
Correct output: -94                 | Program output: 79                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -3                 
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: 58                 
Correct output: -98                 | Program output: -39                
Correct output: -82                 | Program output: -18                
Correct output: -56                 | Program output: -12                
Correct output: -73                 | Program output: 93                 
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: -29                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: 0                  
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: 18                 
Correct output: -86                 | Program output: -1                 
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_yankdup} {:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction in1} {:close 1, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 in3 integer_dup_times integer_yankdup in1 boolean_shove in1 integer_yankdup print_integer exec_dup_times ())
Lexicase best errors: [0 1 0 0 1 0 1 0 1 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 13
Percent parens: 0.154
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_yankdup} {:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction in1} {:close 1, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 in3 integer_dup_times integer_yankdup in1 boolean_shove in1 integer_yankdup print_integer exec_dup_times ())
Zero cases best errors: [0 1 0 0 1 0 1 0 1 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 13
Percent parens: 0.154
--- Lexicase Population Statistics ---
Count of elite individuals by case: (943 1000 960 627 315 956 1000 969 1000 946)
Population mean number of elite cases: 8.72
Count of perfect (error zero) individuals by case: (943 0 960 627 315 956 0 969 0 946)
Population mean number of perfect (error zero) cases: 5.72
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction integer_dup_times} {:close 1, :instruction integer_yankdup} {:close 0, :instruction in1} {:close 2, :instruction boolean_shove} {:close 0, :instruction in1} {:close 1, :instruction integer_yankdup} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in1 in3 integer_dup_times integer_yankdup in1 boolean_shove in1 integer_yankdup print_integer exec_dup_times ())
Errors: [0 1 0 0 1 0 1 0 1 0]
Total: 4
Mean: 0.4
Genome size: 11
Size: 13
Percent parens: 0.154
--- Population Statistics ---
Average total errors in population: 4.284
Median total errors in population: 4
Error averages by case: (0.057 1.0 0.04 0.373 0.685 0.044 1.0 0.031 1.0 0.054)
Error minima by case: (0 1 0 0 0 0 1 0 1 0)
Average genome size in population (length): 9.674
Average program size in population (points): 11.672
Average percent parens in population: 0.178
Minimum age in population: 116.1400478381348
Maximum age in population: 119.178507175673
Average age in population: 118.3097845550019
Median age in population: 118.1477523583598
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 555
Genome diversity (% unique genomes):	 0.14
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 581
Syntactic diversity (% unique Push programs):	 0.116
Total error diversity:				 0.006
Error (vector) diversity:			 0.019
Behavioral diversity:				 0.03
--- Run Statistics ---
Number of program evaluations used so far: 79000
Number of point (instruction) evaluations so far: 6683243
--- Timings ---
Current time: 1559584946831 milliseconds
Total Time:         177.8 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       155.7 seconds, 87.6%
Fitness Testing:     13.4 seconds,  7.6%
Report:               8.6 seconds,  4.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 78
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 79
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 79
;;******************************
;; -*- Smallest problem report - generation 79
Test total error for best: 418
Test mean error for best: 0.41800
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 96                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 50                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 9                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 49                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 24                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: 76                 
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: 29                 
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -59                
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: -16                
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 85                 
Correct output: -63                 | Program output: -41                
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: 12                 
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: 26                 
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -44                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: 45                 
Correct output: -90                 | Program output: 16                 
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -29                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -60                
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: 20                 
Correct output: -73                 | Program output: -65                
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 28                 
Correct output: -92                 | Program output: -56                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 in3 in1 integer_min print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 0 0 0 0 0 1 1]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 9
Percent parens: 0.222
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 in3 in1 integer_min print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 0 0 0 0 0 1 1]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 9
Percent parens: 0.222
--- Lexicase Population Statistics ---
Count of elite individuals by case: (471 900 67 824 900 598 967 471 196 1)
Population mean number of elite cases: 5.39
Count of perfect (error zero) individuals by case: (471 900 67 824 900 598 967 471 196 1)
Population mean number of perfect (error zero) cases: 5.39
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in1 in3 in1 integer_min print_integer exec_dup_times ())
Errors: [0 0 1 0 0 0 0 0 1 1]
Total: 3
Mean: 0.3
Genome size: 7
Size: 9
Percent parens: 0.222
--- Population Statistics ---
Average total errors in population: 4.605
Median total errors in population: 5
Error averages by case: (0.529 0.1 0.933 0.176 0.1 0.402 0.033 0.529 0.804 0.999)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 8.761
Average program size in population (points): 10.766
Average percent parens in population: 0.192
Minimum age in population: 117.1400478381348
Maximum age in population: 121.1631297670164
Average age in population: 119.6079008467192
Median age in population: 119.6757296005959
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 321
Genome diversity (% unique genomes):	 0.156
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 351
Syntactic diversity (% unique Push programs):	 0.122
Total error diversity:				 0.007
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.028
--- Run Statistics ---
Number of program evaluations used so far: 80000
Number of point (instruction) evaluations so far: 6772355
--- Timings ---
Current time: 1559584949009 milliseconds
Total Time:         180.0 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       157.5 seconds, 87.5%
Fitness Testing:     13.7 seconds,  7.6%
Report:               8.7 seconds,  4.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 79
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 80
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 80
;;******************************
;; -*- Smallest problem report - generation 80
Test total error for best: 192
Test mean error for best: 0.19200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 in3 in1 integer_min in4 integer_min print_integer exec_dup_times ())
Lexicase best errors: [0 0 0 0 1 0 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 in3 in1 integer_min in4 integer_min print_integer exec_dup_times ())
Zero cases best errors: [0 0 0 0 1 0 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (673 595 911 652 2 618 2 122 531 533)
Population mean number of elite cases: 4.64
Count of perfect (error zero) individuals by case: (673 595 911 652 2 618 2 122 531 533)
Population mean number of perfect (error zero) cases: 4.64
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in1 in3 in1 integer_min in4 integer_min print_integer exec_dup_times ())
Errors: [0 0 0 0 1 0 1 1 0 0]
Total: 3
Mean: 0.3
Genome size: 9
Size: 11
Percent parens: 0.182
--- Population Statistics ---
Average total errors in population: 5.361
Median total errors in population: 5
Error averages by case: (0.327 0.405 0.089 0.348 0.998 0.382 0.998 0.878 0.469 0.467)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 7.711
Average program size in population (points): 9.718
Average percent parens in population: 0.210
Minimum age in population: 118.482636303207
Maximum age in population: 122.8470010006507
Average age in population: 121.1724657512148
Median age in population: 121.1458262283036
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 284
Genome diversity (% unique genomes):	 0.152
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 292
Syntactic diversity (% unique Push programs):	 0.125
Total error diversity:				 0.006
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.021
--- Run Statistics ---
Number of program evaluations used so far: 81000
Number of point (instruction) evaluations so far: 6853218
--- Timings ---
Current time: 1559584951296 milliseconds
Total Time:         182.3 seconds
Initialization:       0.1 seconds,  0.1%
Reproduction:       159.5 seconds, 87.5%
Fitness Testing:     13.9 seconds,  7.6%
Report:               8.8 seconds,  4.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 80
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 81
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 81
;;******************************
;; -*- Smallest problem report - generation 81
Test total error for best: 192
Test mean error for best: 0.19200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 in3 in1 integer_min in4 integer_min print_integer exec_dup_times ())
Lexicase best errors: [0 0 0 1 0 0 0 1 1 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 in3 in1 integer_min in4 integer_min print_integer exec_dup_times ())
Zero cases best errors: [0 0 0 1 0 0 0 1 1 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (580 584 953 4 955 588 589 4 4 311)
Population mean number of elite cases: 4.57
Count of perfect (error zero) individuals by case: (580 584 953 4 955 588 589 4 4 311)
Population mean number of perfect (error zero) cases: 4.57
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in1 in3 in1 integer_min in4 integer_min print_integer exec_dup_times ())
Errors: [0 0 0 1 0 0 0 1 1 1]
Total: 4
Mean: 0.4
Genome size: 9
Size: 11
Percent parens: 0.182
--- Population Statistics ---
Average total errors in population: 5.428
Median total errors in population: 4
Error averages by case: (0.42 0.416 0.047 0.996 0.045 0.412 0.411 0.996 0.996 0.689)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.734
Average program size in population (points): 11.729
Average percent parens in population: 0.173
Minimum age in population: 121.6209320819631
Maximum age in population: 124.5547219662061
Average age in population: 122.8270231869804
Median age in population: 122.705616133203
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 523
Genome diversity (% unique genomes):	 0.129
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 544
Syntactic diversity (% unique Push programs):	 0.104
Total error diversity:				 0.007
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.029
--- Run Statistics ---
Number of program evaluations used so far: 82000
Number of point (instruction) evaluations so far: 6952137
--- Timings ---
Current time: 1559584953530 milliseconds
Total Time:         184.5 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       161.4 seconds, 87.5%
Fitness Testing:     14.1 seconds,  7.6%
Report:               8.9 seconds,  4.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 81
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 82
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 82
;;******************************
;; -*- Smallest problem report - generation 82
Test total error for best: 192
Test mean error for best: 0.19200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 in3 in1 integer_min in4 integer_min print_integer exec_dup_times ())
Lexicase best errors: [0 0 0 0 0 1 0 1 0 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 in3 in1 integer_min in4 integer_min print_integer exec_dup_times ())
Zero cases best errors: [0 0 0 0 0 1 0 1 0 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (574 643 643 642 643 373 952 373 517 516)
Population mean number of elite cases: 5.88
Count of perfect (error zero) individuals by case: (574 643 643 642 643 373 952 373 517 516)
Population mean number of perfect (error zero) cases: 5.88
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction integer_swap} {:close 1, :instruction integer_yankdup} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in2 in1 in3 integer_swap integer_yankdup in3 in1 integer_min in4 integer_min print_integer exec_dup_times ())
Errors: [0 0 0 0 0 1 0 1 0 0]
Total: 2
Mean: 0.2
Genome size: 12
Size: 14
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 4.124
Median total errors in population: 2
Error averages by case: (0.426 0.357 0.357 0.358 0.357 0.627 0.048 0.627 0.483 0.484)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 9.153
Average program size in population (points): 11.301
Average percent parens in population: 0.198
Minimum age in population: 122.705616133203
Maximum age in population: 126.1438028609037
Average age in population: 124.3967207258918
Median age in population: 124.6014010099265
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 427
Genome diversity (% unique genomes):	 0.176
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 460
Syntactic diversity (% unique Push programs):	 0.141
Total error diversity:				 0.008
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.031
--- Run Statistics ---
Number of program evaluations used so far: 83000
Number of point (instruction) evaluations so far: 7043553
--- Timings ---
Current time: 1559584955866 milliseconds
Total Time:         186.8 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       163.4 seconds, 87.5%
Fitness Testing:     14.3 seconds,  7.7%
Report:               9.0 seconds,  4.8%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 82
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 83
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 83
;;******************************
;; -*- Smallest problem report - generation 83
Test total error for best: 192
Test mean error for best: 0.19200
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 99                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: 49                 
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 46                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 25                 
Correct output: 42                  | Program output: 43                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 32                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: -38                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -31                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: 30                 
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: 11                 
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: 59                 
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -38                
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: 15                 
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -53                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: 15                 
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in4 in1 in3 in1 integer_min in4 integer_min print_integer exec_dup_times ())
Lexicase best errors: [0 0 1 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 9
Lexicase best total error: 1
Lexicase best mean error: 0.1
Lexicase best size: 11
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in4 in1 in3 in1 integer_min in4 integer_min print_integer exec_dup_times ())
Zero cases best errors: [0 0 1 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 9
Zero cases best number of zero cases: 9
Zero cases best total error: 1
Zero cases best mean error: 0.1
Zero cases best size: 11
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (418 830 537 418 543 543 830 418 970 543)
Population mean number of elite cases: 6.05
Count of perfect (error zero) individuals by case: (418 830 537 418 543 543 830 418 970 543)
Population mean number of perfect (error zero) cases: 6.05
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in1} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in4 in1 in3 in1 integer_min in4 integer_min print_integer exec_dup_times ())
Errors: [0 0 1 0 0 0 0 0 0 0]
Total: 1
Mean: 0.1
Genome size: 9
Size: 11
Percent parens: 0.182
--- Population Statistics ---
Average total errors in population: 3.95
Median total errors in population: 5
Error averages by case: (0.582 0.17 0.463 0.582 0.457 0.457 0.17 0.582 0.03 0.457)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 7.619
Average program size in population (points): 9.632
Average percent parens in population: 0.216
Minimum age in population: 123.705616133203
Maximum age in population: 127.5924455079553
Average age in population: 125.9327862856501
Median age in population: 126.0924455079553
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 308
Genome diversity (% unique genomes):	 0.152
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 345
Syntactic diversity (% unique Push programs):	 0.118
Total error diversity:				 0.009
Error (vector) diversity:			 0.016
Behavioral diversity:				 0.025
--- Run Statistics ---
Number of program evaluations used so far: 84000
Number of point (instruction) evaluations so far: 7120830
--- Timings ---
Current time: 1559584958013 milliseconds
Total Time:         189.0 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       165.3 seconds, 87.5%
Fitness Testing:     14.4 seconds,  7.6%
Report:               9.2 seconds,  4.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 83
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 84
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 84
;;******************************
;; -*- Smallest problem report - generation 84
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 20                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: -67                
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 44                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 1                  
Correct output: 42                  | Program output: 42                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 16                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: -46                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -78                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: -64                
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: -94                
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -82                
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -98                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -84                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: -55                
Correct output: -92                 | Program output: -92                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in2} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in2} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Lexicase best program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 14
Percent parens: 0.143
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in2} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in2} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Zero cases best program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 14
Percent parens: 0.143
--- Lexicase Population Statistics ---
Count of elite individuals by case: (796 386 961 730 968 968 969 961 795 960)
Population mean number of elite cases: 8.49
Count of perfect (error zero) individuals by case: (796 386 961 730 968 968 969 961 795 960)
Population mean number of perfect (error zero) cases: 8.49
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 0, :instruction in1} {:close 2, :instruction in3} {:close 0, :instruction in2} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 1, :instruction integer_min} {:close 0, :instruction in4} {:close 1, :instruction integer_min} {:close 0, :instruction print_integer} {:close 0, :instruction exec_dup_times})
Best program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 12
Size: 14
Percent parens: 0.143
--- Population Statistics ---
Average total errors in population: 1.506
Median total errors in population: 1
Error averages by case: (0.204 0.614 0.039 0.27 0.032 0.032 0.031 0.039 0.205 0.04)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 8.92
Average program size in population (points): 10.908
Average percent parens in population: 0.183
Minimum age in population: 124.705616133203
Maximum age in population: 129.304212541264
Average age in population: 127.6071530320611
Median age in population: 127.679212541264
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 398
Genome diversity (% unique genomes):	 0.159
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 474
Syntactic diversity (% unique Push programs):	 0.118
Total error diversity:				 0.009
Error (vector) diversity:			 0.018
Behavioral diversity:				 0.026
--- Run Statistics ---
Number of program evaluations used so far: 85000
Number of point (instruction) evaluations so far: 7211495
--- Timings ---
Current time: 1559584960297 milliseconds
Total Time:         191.2 seconds
Initialization:       0.1 seconds,  0.0%
Reproduction:       167.2 seconds, 87.4%
Fitness Testing:     14.6 seconds,  7.7%
Report:               9.3 seconds,  4.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 84
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 84
Successful program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 14


Auto-simplifying with starting size: 14
step: 0
program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 500
program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 1000
program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 1500
program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 2000
program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 2500
program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 3000
program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 3500
program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 4000
program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 4500
program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

step: 5000
program: (in2 in1 in3 in2 integer_min in4 integer_min integer_min in4 integer_min print_integer exec_dup_times ())
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 14

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 84
Test total error for best: 0
Test mean error for best: 0.00000
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 0
Test Case    9 | Error: 0
Test Case   10 | Error: 0
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 0
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 0
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 0
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 0
Test Case   27 | Error: 0
Test Case   28 | Error: 0
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 0
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 0
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 0
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 0
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 0
Test Case   55 | Error: 0
Test Case   56 | Error: 0
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 0
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 0
Test Case   65 | Error: 0
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 0
Test Case   71 | Error: 0
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 0
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 0
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 0
Test Case   83 | Error: 0
Test Case   84 | Error: 0
Test Case   85 | Error: 0
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 0
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 0
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 0
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 0
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 0
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 0
Test Case  201 | Error: 0
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 0
Test Case  208 | Error: 0
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 0
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 0
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 0
Test Case  221 | Error: 0
Test Case  222 | Error: 0
Test Case  223 | Error: 0
Test Case  224 | Error: 0
Test Case  225 | Error: 0
Test Case  226 | Error: 0
Test Case  227 | Error: 0
Test Case  228 | Error: 0
Test Case  229 | Error: 0
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 0
Test Case  233 | Error: 0
Test Case  234 | Error: 0
Test Case  235 | Error: 0
Test Case  236 | Error: 0
Test Case  237 | Error: 0
Test Case  238 | Error: 0
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 0
Test Case  247 | Error: 0
Test Case  248 | Error: 0
Test Case  249 | Error: 0
Test Case  250 | Error: 0
Test Case  251 | Error: 0
Test Case  252 | Error: 0
Test Case  253 | Error: 0
Test Case  254 | Error: 0
Test Case  255 | Error: 0
Test Case  256 | Error: 0
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 0
Test Case  261 | Error: 0
Test Case  262 | Error: 0
Test Case  263 | Error: 0
Test Case  264 | Error: 0
Test Case  265 | Error: 0
Test Case  266 | Error: 0
Test Case  267 | Error: 0
Test Case  268 | Error: 0
Test Case  269 | Error: 0
Test Case  270 | Error: 0
Test Case  271 | Error: 0
Test Case  272 | Error: 0
Test Case  273 | Error: 0
Test Case  274 | Error: 0
Test Case  275 | Error: 0
Test Case  276 | Error: 0
Test Case  277 | Error: 0
Test Case  278 | Error: 0
Test Case  279 | Error: 0
Test Case  280 | Error: 0
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 0
Test Case  285 | Error: 0
Test Case  286 | Error: 0
Test Case  287 | Error: 0
Test Case  288 | Error: 0
Test Case  289 | Error: 0
Test Case  290 | Error: 0
Test Case  291 | Error: 0
Test Case  292 | Error: 0
Test Case  293 | Error: 0
Test Case  294 | Error: 0
Test Case  295 | Error: 0
Test Case  296 | Error: 0
Test Case  297 | Error: 0
Test Case  298 | Error: 0
Test Case  299 | Error: 0
Test Case  300 | Error: 0
Test Case  301 | Error: 0
Test Case  302 | Error: 0
Test Case  303 | Error: 0
Test Case  304 | Error: 0
Test Case  305 | Error: 0
Test Case  306 | Error: 0
Test Case  307 | Error: 0
Test Case  308 | Error: 0
Test Case  309 | Error: 0
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 0
Test Case  313 | Error: 0
Test Case  314 | Error: 0
Test Case  315 | Error: 0
Test Case  316 | Error: 0
Test Case  317 | Error: 0
Test Case  318 | Error: 0
Test Case  319 | Error: 0
Test Case  320 | Error: 0
Test Case  321 | Error: 0
Test Case  322 | Error: 0
Test Case  323 | Error: 0
Test Case  324 | Error: 0
Test Case  325 | Error: 0
Test Case  326 | Error: 0
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 0
Test Case  330 | Error: 0
Test Case  331 | Error: 0
Test Case  332 | Error: 0
Test Case  333 | Error: 0
Test Case  334 | Error: 0
Test Case  335 | Error: 0
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 0
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 0
Test Case  344 | Error: 0
Test Case  345 | Error: 0
Test Case  346 | Error: 0
Test Case  347 | Error: 0
Test Case  348 | Error: 0
Test Case  349 | Error: 0
Test Case  350 | Error: 0
Test Case  351 | Error: 0
Test Case  352 | Error: 0
Test Case  353 | Error: 0
Test Case  354 | Error: 0
Test Case  355 | Error: 0
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 0
Test Case  361 | Error: 0
Test Case  362 | Error: 0
Test Case  363 | Error: 0
Test Case  364 | Error: 0
Test Case  365 | Error: 0
Test Case  366 | Error: 0
Test Case  367 | Error: 0
Test Case  368 | Error: 0
Test Case  369 | Error: 0
Test Case  370 | Error: 0
Test Case  371 | Error: 0
Test Case  372 | Error: 0
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 0
Test Case  378 | Error: 0
Test Case  379 | Error: 0
Test Case  380 | Error: 0
Test Case  381 | Error: 0
Test Case  382 | Error: 0
Test Case  383 | Error: 0
Test Case  384 | Error: 0
Test Case  385 | Error: 0
Test Case  386 | Error: 0
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 0
Test Case  390 | Error: 0
Test Case  391 | Error: 0
Test Case  392 | Error: 0
Test Case  393 | Error: 0
Test Case  394 | Error: 0
Test Case  395 | Error: 0
Test Case  396 | Error: 0
Test Case  397 | Error: 0
Test Case  398 | Error: 0
Test Case  399 | Error: 0
Test Case  400 | Error: 0
Test Case  401 | Error: 0
Test Case  402 | Error: 0
Test Case  403 | Error: 0
Test Case  404 | Error: 0
Test Case  405 | Error: 0
Test Case  406 | Error: 0
Test Case  407 | Error: 0
Test Case  408 | Error: 0
Test Case  409 | Error: 0
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 0
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 0
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 0
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 0
Test Case  428 | Error: 0
Test Case  429 | Error: 0
Test Case  430 | Error: 0
Test Case  431 | Error: 0
Test Case  432 | Error: 0
Test Case  433 | Error: 0
Test Case  434 | Error: 0
Test Case  435 | Error: 0
Test Case  436 | Error: 0
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 0
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 0
Test Case  443 | Error: 0
Test Case  444 | Error: 0
Test Case  445 | Error: 0
Test Case  446 | Error: 0
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 0
Test Case  450 | Error: 0
Test Case  451 | Error: 0
Test Case  452 | Error: 0
Test Case  453 | Error: 0
Test Case  454 | Error: 0
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 0
Test Case  459 | Error: 0
Test Case  460 | Error: 0
Test Case  461 | Error: 0
Test Case  462 | Error: 0
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 0
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 0
Test Case  469 | Error: 0
Test Case  470 | Error: 0
Test Case  471 | Error: 0
Test Case  472 | Error: 0
Test Case  473 | Error: 0
Test Case  474 | Error: 0
Test Case  475 | Error: 0
Test Case  476 | Error: 0
Test Case  477 | Error: 0
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 0
Test Case  481 | Error: 0
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 0
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 0
Test Case  495 | Error: 0
Test Case  496 | Error: 0
Test Case  497 | Error: 0
Test Case  498 | Error: 0
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 0
Test Case  502 | Error: 0
Test Case  503 | Error: 0
Test Case  504 | Error: 0
Test Case  505 | Error: 0
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 0
Test Case  509 | Error: 0
Test Case  510 | Error: 0
Test Case  511 | Error: 0
Test Case  512 | Error: 0
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 0
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 0
Test Case  521 | Error: 0
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 0
Test Case  525 | Error: 0
Test Case  526 | Error: 0
Test Case  527 | Error: 0
Test Case  528 | Error: 0
Test Case  529 | Error: 0
Test Case  530 | Error: 0
Test Case  531 | Error: 0
Test Case  532 | Error: 0
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 0
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 0
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 0
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 0
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 0
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 0
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 0
Test Case  571 | Error: 0
Test Case  572 | Error: 0
Test Case  573 | Error: 0
Test Case  574 | Error: 0
Test Case  575 | Error: 0
Test Case  576 | Error: 0
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 0
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 0
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 0
Test Case  590 | Error: 0
Test Case  591 | Error: 0
Test Case  592 | Error: 0
Test Case  593 | Error: 0
Test Case  594 | Error: 0
Test Case  595 | Error: 0
Test Case  596 | Error: 0
Test Case  597 | Error: 0
Test Case  598 | Error: 0
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 0
Test Case  604 | Error: 0
Test Case  605 | Error: 0
Test Case  606 | Error: 0
Test Case  607 | Error: 0
Test Case  608 | Error: 0
Test Case  609 | Error: 0
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 0
Test Case  614 | Error: 0
Test Case  615 | Error: 0
Test Case  616 | Error: 0
Test Case  617 | Error: 0
Test Case  618 | Error: 0
Test Case  619 | Error: 0
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 0
Test Case  625 | Error: 0
Test Case  626 | Error: 0
Test Case  627 | Error: 0
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 0
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 0
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 0
Test Case  644 | Error: 0
Test Case  645 | Error: 0
Test Case  646 | Error: 0
Test Case  647 | Error: 0
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 0
Test Case  651 | Error: 0
Test Case  652 | Error: 0
Test Case  653 | Error: 0
Test Case  654 | Error: 0
Test Case  655 | Error: 0
Test Case  656 | Error: 0
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 0
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 0
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 0
Test Case  672 | Error: 0
Test Case  673 | Error: 0
Test Case  674 | Error: 0
Test Case  675 | Error: 0
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 0
Test Case  680 | Error: 0
Test Case  681 | Error: 0
Test Case  682 | Error: 0
Test Case  683 | Error: 0
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 0
Test Case  688 | Error: 0
Test Case  689 | Error: 0
Test Case  690 | Error: 0
Test Case  691 | Error: 0
Test Case  692 | Error: 0
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 0
Test Case  696 | Error: 0
Test Case  697 | Error: 0
Test Case  698 | Error: 0
Test Case  699 | Error: 0
Test Case  700 | Error: 0
Test Case  701 | Error: 0
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 0
Test Case  705 | Error: 0
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 0
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 0
Test Case  712 | Error: 0
Test Case  713 | Error: 0
Test Case  714 | Error: 0
Test Case  715 | Error: 0
Test Case  716 | Error: 0
Test Case  717 | Error: 0
Test Case  718 | Error: 0
Test Case  719 | Error: 0
Test Case  720 | Error: 0
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 0
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 0
Test Case  729 | Error: 0
Test Case  730 | Error: 0
Test Case  731 | Error: 0
Test Case  732 | Error: 0
Test Case  733 | Error: 0
Test Case  734 | Error: 0
Test Case  735 | Error: 0
Test Case  736 | Error: 0
Test Case  737 | Error: 0
Test Case  738 | Error: 0
Test Case  739 | Error: 0
Test Case  740 | Error: 0
Test Case  741 | Error: 0
Test Case  742 | Error: 0
Test Case  743 | Error: 0
Test Case  744 | Error: 0
Test Case  745 | Error: 0
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 0
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 0
Test Case  757 | Error: 0
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 0
Test Case  762 | Error: 0
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 0
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 0
Test Case  770 | Error: 0
Test Case  771 | Error: 0
Test Case  772 | Error: 0
Test Case  773 | Error: 0
Test Case  774 | Error: 0
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 0
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 0
Test Case  785 | Error: 0
Test Case  786 | Error: 0
Test Case  787 | Error: 0
Test Case  788 | Error: 0
Test Case  789 | Error: 0
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 0
Test Case  794 | Error: 0
Test Case  795 | Error: 0
Test Case  796 | Error: 0
Test Case  797 | Error: 0
Test Case  798 | Error: 0
Test Case  799 | Error: 0
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 0
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 0
Test Case  815 | Error: 0
Test Case  816 | Error: 0
Test Case  817 | Error: 0
Test Case  818 | Error: 0
Test Case  819 | Error: 0
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 0
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 0
Test Case  830 | Error: 0
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 0
Test Case  834 | Error: 0
Test Case  835 | Error: 0
Test Case  836 | Error: 0
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 0
Test Case  846 | Error: 0
Test Case  847 | Error: 0
Test Case  848 | Error: 0
Test Case  849 | Error: 0
Test Case  850 | Error: 0
Test Case  851 | Error: 0
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 0
Test Case  856 | Error: 0
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 0
Test Case  861 | Error: 0
Test Case  862 | Error: 0
Test Case  863 | Error: 0
Test Case  864 | Error: 0
Test Case  865 | Error: 0
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 0
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 0
Test Case  873 | Error: 0
Test Case  874 | Error: 0
Test Case  875 | Error: 0
Test Case  876 | Error: 0
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 0
Test Case  882 | Error: 0
Test Case  883 | Error: 0
Test Case  884 | Error: 0
Test Case  885 | Error: 0
Test Case  886 | Error: 0
Test Case  887 | Error: 0
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 0
Test Case  894 | Error: 0
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 0
Test Case  900 | Error: 0
Test Case  901 | Error: 0
Test Case  902 | Error: 0
Test Case  903 | Error: 0
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 0
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 0
Test Case  913 | Error: 0
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 0
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 0
Test Case  923 | Error: 0
Test Case  924 | Error: 0
Test Case  925 | Error: 0
Test Case  926 | Error: 0
Test Case  927 | Error: 0
Test Case  928 | Error: 0
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 0
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 0
Test Case  938 | Error: 0
Test Case  939 | Error: 0
Test Case  940 | Error: 0
Test Case  941 | Error: 0
Test Case  942 | Error: 0
Test Case  943 | Error: 0
Test Case  944 | Error: 0
Test Case  945 | Error: 0
Test Case  946 | Error: 0
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 0
Test Case  950 | Error: 0
Test Case  951 | Error: 0
Test Case  952 | Error: 0
Test Case  953 | Error: 0
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 0
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 0
Test Case  960 | Error: 0
Test Case  961 | Error: 0
Test Case  962 | Error: 0
Test Case  963 | Error: 0
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 0
Test Case  967 | Error: 0
Test Case  968 | Error: 0
Test Case  969 | Error: 0
Test Case  970 | Error: 0
Test Case  971 | Error: 0
Test Case  972 | Error: 0
Test Case  973 | Error: 0
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 0
Test Case  979 | Error: 0
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 0
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 0
Test Case  996 | Error: 0
Test Case  997 | Error: 0
Test Case  998 | Error: 0
Test Case  999 | Error: 0
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 99                 
Correct output: 20                  | Program output: 20                 
Correct output: -89                 | Program output: -89                
Correct output: -90                 | Program output: -90                
Correct output: -13                 | Program output: -13                
Correct output: -47                 | Program output: -47                
Correct output: 64                  | Program output: 64                 
Correct output: 6                   | Program output: 6                  
Correct output: -67                 | Program output: -67                
Correct output: -61                 | Program output: -61                
Correct output: 30                  | Program output: 30                 
Correct output: -29                 | Program output: -29                
Correct output: 87                  | Program output: 87                 
Correct output: 3                   | Program output: 3                  
Correct output: -51                 | Program output: -51                
Correct output: -54                 | Program output: -54                
Correct output: 44                  | Program output: 44                 
Correct output: 34                  | Program output: 34                 
Correct output: 23                  | Program output: 23                 
Correct output: 44                  | Program output: 44                 
Correct output: 23                  | Program output: 23                 
Correct output: 46                  | Program output: 46                 
Correct output: 16                  | Program output: 16                 
Correct output: 40                  | Program output: 40                 
Correct output: 16                  | Program output: 16                 
Correct output: 6                   | Program output: 6                  
Correct output: 3                   | Program output: 3                  
Correct output: 36                  | Program output: 36                 
Correct output: 58                  | Program output: 58                 
Correct output: 0                   | Program output: 0                  
Correct output: 20                  | Program output: 20                 
Correct output: 16                  | Program output: 16                 
Correct output: 0                   | Program output: 0                  
Correct output: 19                  | Program output: 19                 
Correct output: 1                   | Program output: 1                  
Correct output: 42                  | Program output: 42                 
Correct output: -41                 | Program output: -41                
Correct output: -81                 | Program output: -81                
Correct output: -37                 | Program output: -37                
Correct output: 16                  | Program output: 16                 
Correct output: -6                  | Program output: -6                 
Correct output: -69                 | Program output: -69                
Correct output: -75                 | Program output: -75                
Correct output: -46                 | Program output: -46                
Correct output: -100                | Program output: -100               
Correct output: -89                 | Program output: -89                
Correct output: -91                 | Program output: -91                
Correct output: -59                 | Program output: -59                
Correct output: -24                 | Program output: -24                
Correct output: -71                 | Program output: -71                
Correct output: -100                | Program output: -100               
Correct output: -43                 | Program output: -43                
Correct output: -43                 | Program output: -43                
Correct output: -35                 | Program output: -35                
Correct output: -78                 | Program output: -78                
Correct output: -30                 | Program output: -30                
Correct output: -62                 | Program output: -62                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -63                
Correct output: -98                 | Program output: -98                
Correct output: -42                 | Program output: -42                
Correct output: -36                 | Program output: -36                
Correct output: -64                 | Program output: -64                
Correct output: -73                 | Program output: -73                
Correct output: -74                 | Program output: -74                
Correct output: -97                 | Program output: -97                
Correct output: -59                 | Program output: -59                
Correct output: -76                 | Program output: -76                
Correct output: -29                 | Program output: -29                
Correct output: -34                 | Program output: -34                
Correct output: -45                 | Program output: -45                
Correct output: -94                 | Program output: -94                
Correct output: -94                 | Program output: -94                
Correct output: -71                 | Program output: -71                
Correct output: -82                 | Program output: -82                
Correct output: -84                 | Program output: -84                
Correct output: -45                 | Program output: -45                
Correct output: -90                 | Program output: -90                
Correct output: -28                 | Program output: -28                
Correct output: -32                 | Program output: -32                
Correct output: -98                 | Program output: -98                
Correct output: -82                 | Program output: -82                
Correct output: -56                 | Program output: -56                
Correct output: -73                 | Program output: -73                
Correct output: -34                 | Program output: -34                
Correct output: -84                 | Program output: -84                
Correct output: -76                 | Program output: -76                
Correct output: -48                 | Program output: -48                
Correct output: -71                 | Program output: -71                
Correct output: -84                 | Program output: -84                
Correct output: -31                 | Program output: -31                
Correct output: -73                 | Program output: -73                
Correct output: -37                 | Program output: -37                
Correct output: -86                 | Program output: -86                
Correct output: -55                 | Program output: -55                
Correct output: -92                 | Program output: -92                
;;******************************
