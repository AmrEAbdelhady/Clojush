Command line args: clojush.problems.software.smallest :parent-selection :lexicase :print-timings true :down-sample-factor 0.1 :max-generations 2000
######################################
Parameters set at command line or in problem file argmap; may or may not be default:
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
down-sample-factor = 0.1
epigenetic-markers = [:close]
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
evalpush-limit = 200
final-report-simplifications = 5000
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
max-error = 1
max-generations = 2000
max-genome-size-in-initial-program = 100
max-points = 800
parent-selection = :lexicase
population-size = 1000
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
report-simplifications = 0
sub-training-cases = ()
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[73 -53 73 73] -53] [[-61 84 -61 -61] -61] [[59 -44 59 59] -44] [[-6 -50 -50 -50] -50] [[-4 -4 -24 -4] -24] [[-12 11 -12 -12] -12] [[-4 -27 -4 -4] -27] [[-10 -1 -10 -10] -10] [[-78 -78 -78 1] -78] [[-37 35 35 35] -37] [(71 71 71 71) 71] [(49 49 49 49) 49] [(-10 -10 -10 -10) -10] [(-27 -27 -27 -27) -27] [(-38 -38 -38 -38) -38] [(37 45 91 70) 37] [(7 67 28 21) 7] [(68 15 13 1) 1] [(34 3 71 49) 3] [(85 15 67 7) 7] [(88 32 96 99) 32] [(77 12 79 9) 9] [(32 59 59 8) 8] [(12 45 33 2) 2] [(78 54 50 0) 0] [(25 97 24 24) 24] [(37 72 23 11) 11] [(52 0 58 38) 0] [(63 94 1 57) 1] [(71 75 90 59) 59] [(75 65 42 97) 42] [(66 13 25 31) 13] [(44 65 30 95) 30] [(11 35 21 50) 11] [(32 39 77 0) 0] [(-75 33 43 97) -75] [(82 -94 84 -33) -94] [(-63 25 -17 73) -63] [(27 -52 -3 1) -52] [(-74 91 62 63) -74] [(10 -60 -43 -69) -69] [(-95 -55 -9 -22) -95] [(65 29 -7 43) -7] [(-10 57 -33 -93) -93] [(60 73 92 12) 12] [(-100 -57 -62 -14) -100] [(-8 60 90 -22) -22] [(-47 16 -50 -68) -68] [(-23 -76 44 66) -76] [(97 46 -10 42) -10] [(14 96 44 -69) -69] [(88 60 98 -43) -43] [(29 -54 -15 21) -54] [(-78 -78 21 92) -78] [(80 74 -63 85) -63] [(-52 46 7 -34) -52] [(18 56 -92 21) -92] [(47 -91 46 -93) -93] [(13 21 91 13) 13] [(-93 75 -13 -75) -93] [(-51 51 -76 -54) -76] [(53 -17 -30 21) -30] [(14 38 59 56) 14] [(-60 -80 -3 -44) -80] [(48 10 -98 -59) -98] [(30 -52 72 0) -52] [(-35 -60 -72 28) -72] [(-64 25 -82 68) -82] [(85 46 -90 38) -90] [(-71 -71 -39 33) -71] [(-5 78 23 46) -5] [(66 -65 51 -52) -65] [(1 -91 83 14) -91] [(34 -26 16 32) -26] [(-8 -61 51 -63) -63] [(30 11 96 7) 7] [(69 41 -99 19) -99] [(67 33 -90 -20) -90] [(-30 20 -56 97) -56] [(-95 -8 33 -78) -95] [(80 -73 34 -26) -73] [(68 -68 60 77) -68] [(-13 62 76 -72) -72] [(84 -95 -53 -69) -95] [(-50 39 -57 -49) -57] [(-65 2 79 -37) -65] [(-10 -98 96 64) -98] [(92 8 27 83) 8] [(-3 37 -47 -34) -47] [(83 83 94 -20) -20] [(76 66 -1 -91) -91] [(-76 -83 -42 11) -83] [(91 -95 -74 -82) -95] [(-16 57 -20 -10) -20] [(14 17 68 -46) -46])
uniform-mutation-rate = 0.01
######################################
Train and test cases:
Train Case:   0 | Input/Output: [(0 0 0 0) 0]
Train Case:   1 | Input/Output: [(-44 -44 -7 -13) -44]
Train Case:   2 | Input/Output: [(0 4 -99 -33) -99]
Train Case:   3 | Input/Output: [(-22 -22 -22 -22) -22]
Train Case:   4 | Input/Output: [(99 100 99 100) 99]
Train Case:   5 | Input/Output: [[73 -53 73 73] -53]
Train Case:   6 | Input/Output: [[-61 84 -61 -61] -61]
Train Case:   7 | Input/Output: [[59 -44 59 59] -44]
Train Case:   8 | Input/Output: [[-6 -50 -50 -50] -50]
Train Case:   9 | Input/Output: [[-4 -4 -24 -4] -24]
Train Case:  10 | Input/Output: [[-12 11 -12 -12] -12]
Train Case:  11 | Input/Output: [[-4 -27 -4 -4] -27]
Train Case:  12 | Input/Output: [[-10 -1 -10 -10] -10]
Train Case:  13 | Input/Output: [[-78 -78 -78 1] -78]
Train Case:  14 | Input/Output: [[-37 35 35 35] -37]
Train Case:  15 | Input/Output: [(71 71 71 71) 71]
Train Case:  16 | Input/Output: [(49 49 49 49) 49]
Train Case:  17 | Input/Output: [(-10 -10 -10 -10) -10]
Train Case:  18 | Input/Output: [(-27 -27 -27 -27) -27]
Train Case:  19 | Input/Output: [(-38 -38 -38 -38) -38]
Train Case:  20 | Input/Output: [(37 45 91 70) 37]
Train Case:  21 | Input/Output: [(7 67 28 21) 7]
Train Case:  22 | Input/Output: [(68 15 13 1) 1]
Train Case:  23 | Input/Output: [(34 3 71 49) 3]
Train Case:  24 | Input/Output: [(85 15 67 7) 7]
Train Case:  25 | Input/Output: [(88 32 96 99) 32]
Train Case:  26 | Input/Output: [(77 12 79 9) 9]
Train Case:  27 | Input/Output: [(32 59 59 8) 8]
Train Case:  28 | Input/Output: [(12 45 33 2) 2]
Train Case:  29 | Input/Output: [(78 54 50 0) 0]
Train Case:  30 | Input/Output: [(25 97 24 24) 24]
Train Case:  31 | Input/Output: [(37 72 23 11) 11]
Train Case:  32 | Input/Output: [(52 0 58 38) 0]
Train Case:  33 | Input/Output: [(63 94 1 57) 1]
Train Case:  34 | Input/Output: [(71 75 90 59) 59]
Train Case:  35 | Input/Output: [(75 65 42 97) 42]
Train Case:  36 | Input/Output: [(66 13 25 31) 13]
Train Case:  37 | Input/Output: [(44 65 30 95) 30]
Train Case:  38 | Input/Output: [(11 35 21 50) 11]
Train Case:  39 | Input/Output: [(32 39 77 0) 0]
Train Case:  40 | Input/Output: [(-75 33 43 97) -75]
Train Case:  41 | Input/Output: [(82 -94 84 -33) -94]
Train Case:  42 | Input/Output: [(-63 25 -17 73) -63]
Train Case:  43 | Input/Output: [(27 -52 -3 1) -52]
Train Case:  44 | Input/Output: [(-74 91 62 63) -74]
Train Case:  45 | Input/Output: [(10 -60 -43 -69) -69]
Train Case:  46 | Input/Output: [(-95 -55 -9 -22) -95]
Train Case:  47 | Input/Output: [(65 29 -7 43) -7]
Train Case:  48 | Input/Output: [(-10 57 -33 -93) -93]
Train Case:  49 | Input/Output: [(60 73 92 12) 12]
Train Case:  50 | Input/Output: [(-100 -57 -62 -14) -100]
Train Case:  51 | Input/Output: [(-8 60 90 -22) -22]
Train Case:  52 | Input/Output: [(-47 16 -50 -68) -68]
Train Case:  53 | Input/Output: [(-23 -76 44 66) -76]
Train Case:  54 | Input/Output: [(97 46 -10 42) -10]
Train Case:  55 | Input/Output: [(14 96 44 -69) -69]
Train Case:  56 | Input/Output: [(88 60 98 -43) -43]
Train Case:  57 | Input/Output: [(29 -54 -15 21) -54]
Train Case:  58 | Input/Output: [(-78 -78 21 92) -78]
Train Case:  59 | Input/Output: [(80 74 -63 85) -63]
Train Case:  60 | Input/Output: [(-52 46 7 -34) -52]
Train Case:  61 | Input/Output: [(18 56 -92 21) -92]
Train Case:  62 | Input/Output: [(47 -91 46 -93) -93]
Train Case:  63 | Input/Output: [(13 21 91 13) 13]
Train Case:  64 | Input/Output: [(-93 75 -13 -75) -93]
Train Case:  65 | Input/Output: [(-51 51 -76 -54) -76]
Train Case:  66 | Input/Output: [(53 -17 -30 21) -30]
Train Case:  67 | Input/Output: [(14 38 59 56) 14]
Train Case:  68 | Input/Output: [(-60 -80 -3 -44) -80]
Train Case:  69 | Input/Output: [(48 10 -98 -59) -98]
Train Case:  70 | Input/Output: [(30 -52 72 0) -52]
Train Case:  71 | Input/Output: [(-35 -60 -72 28) -72]
Train Case:  72 | Input/Output: [(-64 25 -82 68) -82]
Train Case:  73 | Input/Output: [(85 46 -90 38) -90]
Train Case:  74 | Input/Output: [(-71 -71 -39 33) -71]
Train Case:  75 | Input/Output: [(-5 78 23 46) -5]
Train Case:  76 | Input/Output: [(66 -65 51 -52) -65]
Train Case:  77 | Input/Output: [(1 -91 83 14) -91]
Train Case:  78 | Input/Output: [(34 -26 16 32) -26]
Train Case:  79 | Input/Output: [(-8 -61 51 -63) -63]
Train Case:  80 | Input/Output: [(30 11 96 7) 7]
Train Case:  81 | Input/Output: [(69 41 -99 19) -99]
Train Case:  82 | Input/Output: [(67 33 -90 -20) -90]
Train Case:  83 | Input/Output: [(-30 20 -56 97) -56]
Train Case:  84 | Input/Output: [(-95 -8 33 -78) -95]
Train Case:  85 | Input/Output: [(80 -73 34 -26) -73]
Train Case:  86 | Input/Output: [(68 -68 60 77) -68]
Train Case:  87 | Input/Output: [(-13 62 76 -72) -72]
Train Case:  88 | Input/Output: [(84 -95 -53 -69) -95]
Train Case:  89 | Input/Output: [(-50 39 -57 -49) -57]
Train Case:  90 | Input/Output: [(-65 2 79 -37) -65]
Train Case:  91 | Input/Output: [(-10 -98 96 64) -98]
Train Case:  92 | Input/Output: [(92 8 27 83) 8]
Train Case:  93 | Input/Output: [(-3 37 -47 -34) -47]
Train Case:  94 | Input/Output: [(83 83 94 -20) -20]
Train Case:  95 | Input/Output: [(76 66 -1 -91) -91]
Train Case:  96 | Input/Output: [(-76 -83 -42 11) -83]
Train Case:  97 | Input/Output: [(91 -95 -74 -82) -95]
Train Case:  98 | Input/Output: [(-16 57 -20 -10) -20]
Train Case:  99 | Input/Output: [(14 17 68 -46) -46]
Test Case:   0 | Input/Output: [[20 -62 -62 -62] -62]
Test Case:   1 | Input/Output: [[-66 -66 -66 17] -66]
Test Case:   2 | Input/Output: [[-15 -15 -15 45] -15]
Test Case:   3 | Input/Output: [[99 -28 99 99] -28]
Test Case:   4 | Input/Output: [[13 13 -35 13] -35]
Test Case:   5 | Input/Output: [[-49 36 -49 -49] -49]
Test Case:   6 | Input/Output: [[-64 11 -64 -64] -64]
Test Case:   7 | Input/Output: [[-32 25 -32 -32] -32]
Test Case:   8 | Input/Output: [[-99 -55 -55 -55] -99]
Test Case:   9 | Input/Output: [[-5 -5 -95 -5] -95]
Test Case:  10 | Input/Output: [[-82 98 98 98] -82]
Test Case:  11 | Input/Output: [[76 -44 -44 -44] -44]
Test Case:  12 | Input/Output: [[45 15 15 15] 15]
Test Case:  13 | Input/Output: [[60 53 60 60] 53]
Test Case:  14 | Input/Output: [[37 37 93 37] 37]
Test Case:  15 | Input/Output: [[-20 -20 -21 -20] -21]
Test Case:  16 | Input/Output: [[94 94 2 94] 2]
Test Case:  17 | Input/Output: [[-27 -27 -27 28] -27]
Test Case:  18 | Input/Output: [[95 74 95 95] 74]
Test Case:  19 | Input/Output: [[-32 -8 -8 -8] -32]
Test Case:  20 | Input/Output: [[56 56 -70 56] -70]
Test Case:  21 | Input/Output: [[-60 13 -60 -60] -60]
Test Case:  22 | Input/Output: [[-11 -76 -76 -76] -76]
Test Case:  23 | Input/Output: [[-34 19 19 19] -34]
Test Case:  24 | Input/Output: [[-87 -87 96 -87] -87]
Test Case:  25 | Input/Output: [[61 25 61 61] 25]
Test Case:  26 | Input/Output: [[60 60 4 60] 4]
Test Case:  27 | Input/Output: [[-2 31 -2 -2] -2]
Test Case:  28 | Input/Output: [[-91 52 52 52] -91]
Test Case:  29 | Input/Output: [[-47 -85 -85 -85] -85]
Test Case:  30 | Input/Output: [[-41 83 -41 -41] -41]
Test Case:  31 | Input/Output: [[74 -5 74 74] -5]
Test Case:  32 | Input/Output: [[71 -61 71 71] -61]
Test Case:  33 | Input/Output: [[-21 71 71 71] -21]
Test Case:  34 | Input/Output: [[43 -58 -58 -58] -58]
Test Case:  35 | Input/Output: [[37 11 11 11] 11]
Test Case:  36 | Input/Output: [[10 10 -48 10] -48]
Test Case:  37 | Input/Output: [[47 -99 -99 -99] -99]
Test Case:  38 | Input/Output: [[51 51 54 51] 51]
Test Case:  39 | Input/Output: [[-12 37 37 37] -12]
Test Case:  40 | Input/Output: [[-94 -94 -8 -94] -94]
Test Case:  41 | Input/Output: [[-18 -18 -25 -18] -25]
Test Case:  42 | Input/Output: [[73 73 73 -17] -17]
Test Case:  43 | Input/Output: [[-21 16 16 16] -21]
Test Case:  44 | Input/Output: [[26 26 26 76] 26]
Test Case:  45 | Input/Output: [[67 51 67 67] 51]
Test Case:  46 | Input/Output: [[-16 26 -16 -16] -16]
Test Case:  47 | Input/Output: [[-43 -49 -49 -49] -49]
Test Case:  48 | Input/Output: [[-82 -82 -82 -72] -82]
Test Case:  49 | Input/Output: [[1 1 1 56] 1]
Test Case:  50 | Input/Output: [[21 -48 -48 -48] -48]
Test Case:  51 | Input/Output: [[97 -18 -18 -18] -18]
Test Case:  52 | Input/Output: [[-75 -75 -75 -37] -75]
Test Case:  53 | Input/Output: [[-5 -5 -5 56] -5]
Test Case:  54 | Input/Output: [[-53 -100 -53 -53] -100]
Test Case:  55 | Input/Output: [[-98 -98 -2 -98] -98]
Test Case:  56 | Input/Output: [[-99 84 84 84] -99]
Test Case:  57 | Input/Output: [[-40 9 -40 -40] -40]
Test Case:  58 | Input/Output: [[-4 99 -4 -4] -4]
Test Case:  59 | Input/Output: [[75 -20 -20 -20] -20]
Test Case:  60 | Input/Output: [[66 66 66 18] 18]
Test Case:  61 | Input/Output: [[24 15 15 15] 15]
Test Case:  62 | Input/Output: [[38 38 38 40] 38]
Test Case:  63 | Input/Output: [[-40 -40 -40 74] -40]
Test Case:  64 | Input/Output: [[19 23 19 19] 19]
Test Case:  65 | Input/Output: [[5 -21 5 5] -21]
Test Case:  66 | Input/Output: [[73 73 -73 73] -73]
Test Case:  67 | Input/Output: [[92 92 -39 92] -39]
Test Case:  68 | Input/Output: [[-75 -75 -75 90] -75]
Test Case:  69 | Input/Output: [[66 40 40 40] 40]
Test Case:  70 | Input/Output: [[27 27 27 17] 17]
Test Case:  71 | Input/Output: [[-78 5 5 5] -78]
Test Case:  72 | Input/Output: [[-12 -12 -12 -96] -96]
Test Case:  73 | Input/Output: [[-80 -80 -80 63] -80]
Test Case:  74 | Input/Output: [[47 0 47 47] 0]
Test Case:  75 | Input/Output: [[83 83 83 5] 5]
Test Case:  76 | Input/Output: [[60 -23 -23 -23] -23]
Test Case:  77 | Input/Output: [[-70 -70 -70 57] -70]
Test Case:  78 | Input/Output: [[-96 -96 -76 -96] -96]
Test Case:  79 | Input/Output: [[-29 65 65 65] -29]
Test Case:  80 | Input/Output: [[-94 -94 21 -94] -94]
Test Case:  81 | Input/Output: [[95 -14 95 95] -14]
Test Case:  82 | Input/Output: [[76 76 76 36] 36]
Test Case:  83 | Input/Output: [[65 -50 65 65] -50]
Test Case:  84 | Input/Output: [[-29 72 72 72] -29]
Test Case:  85 | Input/Output: [[-53 98 98 98] -53]
Test Case:  86 | Input/Output: [[-75 -75 -40 -75] -75]
Test Case:  87 | Input/Output: [[-38 -38 -38 -7] -38]
Test Case:  88 | Input/Output: [[53 65 65 65] 53]
Test Case:  89 | Input/Output: [[-2 -2 -2 -54] -54]
Test Case:  90 | Input/Output: [[-45 72 -45 -45] -45]
Test Case:  91 | Input/Output: [[65 90 65 65] 65]
Test Case:  92 | Input/Output: [[46 46 46 61] 46]
Test Case:  93 | Input/Output: [[43 -84 43 43] -84]
Test Case:  94 | Input/Output: [[-32 -32 -32 -5] -32]
Test Case:  95 | Input/Output: [[39 39 -32 39] -32]
Test Case:  96 | Input/Output: [[28 28 5 28] 5]
Test Case:  97 | Input/Output: [[57 57 57 0] 0]
Test Case:  98 | Input/Output: [[43 43 -5 43] -5]
Test Case:  99 | Input/Output: [[-22 -22 -20 -22] -22]
Test Case: 100 | Input/Output: [(77 77 77 77) 77]
Test Case: 101 | Input/Output: [(-3 -3 -3 -3) -3]
Test Case: 102 | Input/Output: [(12 12 12 12) 12]
Test Case: 103 | Input/Output: [(90 90 90 90) 90]
Test Case: 104 | Input/Output: [(25 25 25 25) 25]
Test Case: 105 | Input/Output: [(24 24 24 24) 24]
Test Case: 106 | Input/Output: [(-14 -14 -14 -14) -14]
Test Case: 107 | Input/Output: [(-73 -73 -73 -73) -73]
Test Case: 108 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 109 | Input/Output: [(60 60 60 60) 60]
Test Case: 110 | Input/Output: [(51 51 51 51) 51]
Test Case: 111 | Input/Output: [(-45 -45 -45 -45) -45]
Test Case: 112 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 113 | Input/Output: [(-23 -23 -23 -23) -23]
Test Case: 114 | Input/Output: [(-20 -20 -20 -20) -20]
Test Case: 115 | Input/Output: [(-27 -27 -27 -27) -27]
Test Case: 116 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 117 | Input/Output: [(59 59 59 59) 59]
Test Case: 118 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 119 | Input/Output: [(28 28 28 28) 28]
Test Case: 120 | Input/Output: [(-12 -12 -12 -12) -12]
Test Case: 121 | Input/Output: [(18 18 18 18) 18]
Test Case: 122 | Input/Output: [(61 61 61 61) 61]
Test Case: 123 | Input/Output: [(20 20 20 20) 20]
Test Case: 124 | Input/Output: [(-19 -19 -19 -19) -19]
Test Case: 125 | Input/Output: [(-15 -15 -15 -15) -15]
Test Case: 126 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 127 | Input/Output: [(-82 -82 -82 -82) -82]
Test Case: 128 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 129 | Input/Output: [(92 92 92 92) 92]
Test Case: 130 | Input/Output: [(50 50 50 50) 50]
Test Case: 131 | Input/Output: [(92 92 92 92) 92]
Test Case: 132 | Input/Output: [(-55 -55 -55 -55) -55]
Test Case: 133 | Input/Output: [(94 94 94 94) 94]
Test Case: 134 | Input/Output: [(-19 -19 -19 -19) -19]
Test Case: 135 | Input/Output: [(68 68 68 68) 68]
Test Case: 136 | Input/Output: [(67 67 67 67) 67]
Test Case: 137 | Input/Output: [(32 32 32 32) 32]
Test Case: 138 | Input/Output: [(75 75 75 75) 75]
Test Case: 139 | Input/Output: [(79 79 79 79) 79]
Test Case: 140 | Input/Output: [(-100 -100 -100 -100) -100]
Test Case: 141 | Input/Output: [(55 55 55 55) 55]
Test Case: 142 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 143 | Input/Output: [(1 1 1 1) 1]
Test Case: 144 | Input/Output: [(93 93 93 93) 93]
Test Case: 145 | Input/Output: [(-36 -36 -36 -36) -36]
Test Case: 146 | Input/Output: [(-58 -58 -58 -58) -58]
Test Case: 147 | Input/Output: [(-40 -40 -40 -40) -40]
Test Case: 148 | Input/Output: [(35 35 35 35) 35]
Test Case: 149 | Input/Output: [(57 57 57 57) 57]
Test Case: 150 | Input/Output: [(52 52 52 52) 52]
Test Case: 151 | Input/Output: [(22 22 22 22) 22]
Test Case: 152 | Input/Output: [(78 78 78 78) 78]
Test Case: 153 | Input/Output: [(99 99 99 99) 99]
Test Case: 154 | Input/Output: [(-21 -21 -21 -21) -21]
Test Case: 155 | Input/Output: [(11 11 11 11) 11]
Test Case: 156 | Input/Output: [(59 59 59 59) 59]
Test Case: 157 | Input/Output: [(30 30 30 30) 30]
Test Case: 158 | Input/Output: [(-59 -59 -59 -59) -59]
Test Case: 159 | Input/Output: [(-96 -96 -96 -96) -96]
Test Case: 160 | Input/Output: [(-2 -2 -2 -2) -2]
Test Case: 161 | Input/Output: [(-75 -75 -75 -75) -75]
Test Case: 162 | Input/Output: [(-5 -5 -5 -5) -5]
Test Case: 163 | Input/Output: [(21 21 21 21) 21]
Test Case: 164 | Input/Output: [(100 100 100 100) 100]
Test Case: 165 | Input/Output: [(19 19 19 19) 19]
Test Case: 166 | Input/Output: [(27 27 27 27) 27]
Test Case: 167 | Input/Output: [(-38 -38 -38 -38) -38]
Test Case: 168 | Input/Output: [(-24 -24 -24 -24) -24]
Test Case: 169 | Input/Output: [(86 86 86 86) 86]
Test Case: 170 | Input/Output: [(30 30 30 30) 30]
Test Case: 171 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 172 | Input/Output: [(-77 -77 -77 -77) -77]
Test Case: 173 | Input/Output: [(-87 -87 -87 -87) -87]
Test Case: 174 | Input/Output: [(-16 -16 -16 -16) -16]
Test Case: 175 | Input/Output: [(23 23 23 23) 23]
Test Case: 176 | Input/Output: [(53 53 53 53) 53]
Test Case: 177 | Input/Output: [(-84 -84 -84 -84) -84]
Test Case: 178 | Input/Output: [(27 27 27 27) 27]
Test Case: 179 | Input/Output: [(-66 -66 -66 -66) -66]
Test Case: 180 | Input/Output: [(92 92 92 92) 92]
Test Case: 181 | Input/Output: [(-94 -94 -94 -94) -94]
Test Case: 182 | Input/Output: [(-39 -39 -39 -39) -39]
Test Case: 183 | Input/Output: [(-88 -88 -88 -88) -88]
Test Case: 184 | Input/Output: [(20 20 20 20) 20]
Test Case: 185 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 186 | Input/Output: [(14 14 14 14) 14]
Test Case: 187 | Input/Output: [(13 13 13 13) 13]
Test Case: 188 | Input/Output: [(-43 -43 -43 -43) -43]
Test Case: 189 | Input/Output: [(23 23 23 23) 23]
Test Case: 190 | Input/Output: [(80 80 80 80) 80]
Test Case: 191 | Input/Output: [(16 16 16 16) 16]
Test Case: 192 | Input/Output: [(-63 -63 -63 -63) -63]
Test Case: 193 | Input/Output: [(-22 -22 -22 -22) -22]
Test Case: 194 | Input/Output: [(81 81 81 81) 81]
Test Case: 195 | Input/Output: [(-90 -90 -90 -90) -90]
Test Case: 196 | Input/Output: [(31 31 31 31) 31]
Test Case: 197 | Input/Output: [(-87 -87 -87 -87) -87]
Test Case: 198 | Input/Output: [(80 80 80 80) 80]
Test Case: 199 | Input/Output: [(79 79 79 79) 79]
Test Case: 200 | Input/Output: [(4 68 50 37) 4]
Test Case: 201 | Input/Output: [(27 74 64 22) 22]
Test Case: 202 | Input/Output: [(86 15 15 65) 15]
Test Case: 203 | Input/Output: [(53 5 61 69) 5]
Test Case: 204 | Input/Output: [(13 80 11 72) 11]
Test Case: 205 | Input/Output: [(64 55 11 71) 11]
Test Case: 206 | Input/Output: [(71 2 80 0) 0]
Test Case: 207 | Input/Output: [(85 39 78 25) 25]
Test Case: 208 | Input/Output: [(42 31 20 16) 16]
Test Case: 209 | Input/Output: [(98 9 83 59) 9]
Test Case: 210 | Input/Output: [(91 39 69 8) 8]
Test Case: 211 | Input/Output: [(87 17 31 96) 17]
Test Case: 212 | Input/Output: [(41 9 83 74) 9]
Test Case: 213 | Input/Output: [(33 4 66 76) 4]
Test Case: 214 | Input/Output: [(24 88 34 32) 24]
Test Case: 215 | Input/Output: [(83 23 35 33) 23]
Test Case: 216 | Input/Output: [(37 4 61 20) 4]
Test Case: 217 | Input/Output: [(62 69 23 1) 1]
Test Case: 218 | Input/Output: [(67 95 10 57) 10]
Test Case: 219 | Input/Output: [(11 44 54 10) 10]
Test Case: 220 | Input/Output: [(22 60 83 6) 6]
Test Case: 221 | Input/Output: [(77 60 84 19) 19]
Test Case: 222 | Input/Output: [(17 52 25 55) 17]
Test Case: 223 | Input/Output: [(89 77 48 74) 48]
Test Case: 224 | Input/Output: [(60 35 64 16) 16]
Test Case: 225 | Input/Output: [(60 47 0 15) 0]
Test Case: 226 | Input/Output: [(36 58 46 78) 36]
Test Case: 227 | Input/Output: [(61 14 33 28) 14]
Test Case: 228 | Input/Output: [(9 79 72 74) 9]
Test Case: 229 | Input/Output: [(47 61 28 58) 28]
Test Case: 230 | Input/Output: [(79 8 27 73) 8]
Test Case: 231 | Input/Output: [(39 7 61 60) 7]
Test Case: 232 | Input/Output: [(10 11 62 53) 10]
Test Case: 233 | Input/Output: [(55 30 13 19) 13]
Test Case: 234 | Input/Output: [(1 77 18 86) 1]
Test Case: 235 | Input/Output: [(97 66 52 76) 52]
Test Case: 236 | Input/Output: [(32 79 77 58) 32]
Test Case: 237 | Input/Output: [(69 73 21 59) 21]
Test Case: 238 | Input/Output: [(89 35 12 76) 12]
Test Case: 239 | Input/Output: [(55 81 11 17) 11]
Test Case: 240 | Input/Output: [(71 7 17 94) 7]
Test Case: 241 | Input/Output: [(51 27 51 97) 27]
Test Case: 242 | Input/Output: [(78 9 98 89) 9]
Test Case: 243 | Input/Output: [(67 20 40 33) 20]
Test Case: 244 | Input/Output: [(48 45 14 33) 14]
Test Case: 245 | Input/Output: [(89 12 46 92) 12]
Test Case: 246 | Input/Output: [(41 5 1 20) 1]
Test Case: 247 | Input/Output: [(57 58 55 80) 55]
Test Case: 248 | Input/Output: [(26 79 17 51) 17]
Test Case: 249 | Input/Output: [(9 94 86 44) 9]
Test Case: 250 | Input/Output: [(47 16 46 89) 16]
Test Case: 251 | Input/Output: [(92 69 61 21) 21]
Test Case: 252 | Input/Output: [(100 18 25 13) 13]
Test Case: 253 | Input/Output: [(13 88 91 83) 13]
Test Case: 254 | Input/Output: [(20 77 33 50) 20]
Test Case: 255 | Input/Output: [(28 37 54 19) 19]
Test Case: 256 | Input/Output: [(50 9 29 10) 9]
Test Case: 257 | Input/Output: [(78 8 28 80) 8]
Test Case: 258 | Input/Output: [(21 13 95 36) 13]
Test Case: 259 | Input/Output: [(41 1 73 52) 1]
Test Case: 260 | Input/Output: [(66 95 20 54) 20]
Test Case: 261 | Input/Output: [(98 11 92 6) 6]
Test Case: 262 | Input/Output: [(30 81 57 98) 30]
Test Case: 263 | Input/Output: [(88 37 18 66) 18]
Test Case: 264 | Input/Output: [(97 50 14 24) 14]
Test Case: 265 | Input/Output: [(80 44 27 54) 27]
Test Case: 266 | Input/Output: [(76 23 59 71) 23]
Test Case: 267 | Input/Output: [(37 100 68 36) 36]
Test Case: 268 | Input/Output: [(27 8 23 37) 8]
Test Case: 269 | Input/Output: [(25 36 36 96) 25]
Test Case: 270 | Input/Output: [(76 9 25 55) 9]
Test Case: 271 | Input/Output: [(1 15 8 41) 1]
Test Case: 272 | Input/Output: [(71 36 89 19) 19]
Test Case: 273 | Input/Output: [(49 62 7 74) 7]
Test Case: 274 | Input/Output: [(28 19 15 87) 15]
Test Case: 275 | Input/Output: [(38 69 1 63) 1]
Test Case: 276 | Input/Output: [(33 91 6 7) 6]
Test Case: 277 | Input/Output: [(61 8 72 73) 8]
Test Case: 278 | Input/Output: [(93 92 74 16) 16]
Test Case: 279 | Input/Output: [(72 77 57 53) 53]
Test Case: 280 | Input/Output: [(79 85 96 91) 79]
Test Case: 281 | Input/Output: [(65 11 37 93) 11]
Test Case: 282 | Input/Output: [(29 27 60 14) 14]
Test Case: 283 | Input/Output: [(44 18 95 26) 18]
Test Case: 284 | Input/Output: [(57 10 6 57) 6]
Test Case: 285 | Input/Output: [(70 46 55 27) 27]
Test Case: 286 | Input/Output: [(74 61 76 95) 61]
Test Case: 287 | Input/Output: [(85 98 46 27) 27]
Test Case: 288 | Input/Output: [(7 34 23 100) 7]
Test Case: 289 | Input/Output: [(44 52 89 31) 31]
Test Case: 290 | Input/Output: [(46 56 76 3) 3]
Test Case: 291 | Input/Output: [(46 42 57 38) 38]
Test Case: 292 | Input/Output: [(7 24 65 64) 7]
Test Case: 293 | Input/Output: [(15 87 100 63) 15]
Test Case: 294 | Input/Output: [(45 74 47 18) 18]
Test Case: 295 | Input/Output: [(27 84 12 24) 12]
Test Case: 296 | Input/Output: [(18 21 4 2) 2]
Test Case: 297 | Input/Output: [(91 96 28 3) 3]
Test Case: 298 | Input/Output: [(37 39 77 34) 34]
Test Case: 299 | Input/Output: [(62 47 76 82) 47]
Test Case: 300 | Input/Output: [(66 82 94 33) 33]
Test Case: 301 | Input/Output: [(56 96 81 8) 8]
Test Case: 302 | Input/Output: [(12 41 33 54) 12]
Test Case: 303 | Input/Output: [(10 14 3 25) 3]
Test Case: 304 | Input/Output: [(79 77 43 99) 43]
Test Case: 305 | Input/Output: [(21 97 61 90) 21]
Test Case: 306 | Input/Output: [(81 24 65 45) 24]
Test Case: 307 | Input/Output: [(73 61 51 43) 43]
Test Case: 308 | Input/Output: [(15 17 45 21) 15]
Test Case: 309 | Input/Output: [(1 63 81 31) 1]
Test Case: 310 | Input/Output: [(82 70 48 8) 8]
Test Case: 311 | Input/Output: [(63 48 74 91) 48]
Test Case: 312 | Input/Output: [(96 68 46 21) 21]
Test Case: 313 | Input/Output: [(82 7 49 0) 0]
Test Case: 314 | Input/Output: [(78 91 19 60) 19]
Test Case: 315 | Input/Output: [(69 17 41 6) 6]
Test Case: 316 | Input/Output: [(38 14 98 47) 14]
Test Case: 317 | Input/Output: [(3 52 1 5) 1]
Test Case: 318 | Input/Output: [(56 7 99 61) 7]
Test Case: 319 | Input/Output: [(51 81 60 23) 23]
Test Case: 320 | Input/Output: [(7 70 3 89) 3]
Test Case: 321 | Input/Output: [(78 75 23 26) 23]
Test Case: 322 | Input/Output: [(55 56 63 38) 38]
Test Case: 323 | Input/Output: [(26 6 22 67) 6]
Test Case: 324 | Input/Output: [(31 33 51 33) 31]
Test Case: 325 | Input/Output: [(98 94 30 14) 14]
Test Case: 326 | Input/Output: [(97 16 71 4) 4]
Test Case: 327 | Input/Output: [(59 59 47 7) 7]
Test Case: 328 | Input/Output: [(35 10 82 50) 10]
Test Case: 329 | Input/Output: [(0 18 54 79) 0]
Test Case: 330 | Input/Output: [(48 26 15 54) 15]
Test Case: 331 | Input/Output: [(99 89 96 79) 79]
Test Case: 332 | Input/Output: [(50 79 13 28) 13]
Test Case: 333 | Input/Output: [(88 6 79 11) 6]
Test Case: 334 | Input/Output: [(80 15 93 21) 15]
Test Case: 335 | Input/Output: [(17 47 21 44) 17]
Test Case: 336 | Input/Output: [(90 20 35 31) 20]
Test Case: 337 | Input/Output: [(82 9 22 87) 9]
Test Case: 338 | Input/Output: [(14 97 79 3) 3]
Test Case: 339 | Input/Output: [(26 29 25 98) 25]
Test Case: 340 | Input/Output: [(92 50 83 88) 50]
Test Case: 341 | Input/Output: [(38 36 95 37) 36]
Test Case: 342 | Input/Output: [(97 49 75 72) 49]
Test Case: 343 | Input/Output: [(6 83 30 45) 6]
Test Case: 344 | Input/Output: [(100 90 47 5) 5]
Test Case: 345 | Input/Output: [(35 82 31 66) 31]
Test Case: 346 | Input/Output: [(41 45 74 56) 41]
Test Case: 347 | Input/Output: [(98 81 88 35) 35]
Test Case: 348 | Input/Output: [(2 86 72 81) 2]
Test Case: 349 | Input/Output: [(11 67 5 77) 5]
Test Case: 350 | Input/Output: [(86 53 29 11) 11]
Test Case: 351 | Input/Output: [(41 69 19 71) 19]
Test Case: 352 | Input/Output: [(71 49 56 87) 49]
Test Case: 353 | Input/Output: [(25 86 81 66) 25]
Test Case: 354 | Input/Output: [(5 46 36 77) 5]
Test Case: 355 | Input/Output: [(36 86 54 90) 36]
Test Case: 356 | Input/Output: [(72 31 54 74) 31]
Test Case: 357 | Input/Output: [(53 84 7 77) 7]
Test Case: 358 | Input/Output: [(84 49 88 58) 49]
Test Case: 359 | Input/Output: [(55 56 43 8) 8]
Test Case: 360 | Input/Output: [(3 71 65 6) 3]
Test Case: 361 | Input/Output: [(91 25 31 42) 25]
Test Case: 362 | Input/Output: [(28 61 82 100) 28]
Test Case: 363 | Input/Output: [(27 70 21 97) 21]
Test Case: 364 | Input/Output: [(53 81 15 26) 15]
Test Case: 365 | Input/Output: [(31 42 37 74) 31]
Test Case: 366 | Input/Output: [(54 50 69 100) 50]
Test Case: 367 | Input/Output: [(8 63 34 10) 8]
Test Case: 368 | Input/Output: [(51 43 26 99) 26]
Test Case: 369 | Input/Output: [(83 25 33 53) 25]
Test Case: 370 | Input/Output: [(88 33 98 28) 28]
Test Case: 371 | Input/Output: [(84 29 74 23) 23]
Test Case: 372 | Input/Output: [(71 77 67 78) 67]
Test Case: 373 | Input/Output: [(60 28 85 11) 11]
Test Case: 374 | Input/Output: [(53 45 81 91) 45]
Test Case: 375 | Input/Output: [(41 70 7 70) 7]
Test Case: 376 | Input/Output: [(22 43 16 11) 11]
Test Case: 377 | Input/Output: [(23 53 73 93) 23]
Test Case: 378 | Input/Output: [(64 46 10 45) 10]
Test Case: 379 | Input/Output: [(19 6 2 14) 2]
Test Case: 380 | Input/Output: [(96 53 26 27) 26]
Test Case: 381 | Input/Output: [(58 37 42 88) 37]
Test Case: 382 | Input/Output: [(89 64 71 15) 15]
Test Case: 383 | Input/Output: [(62 37 68 10) 10]
Test Case: 384 | Input/Output: [(9 47 17 73) 9]
Test Case: 385 | Input/Output: [(76 68 80 86) 68]
Test Case: 386 | Input/Output: [(69 51 57 25) 25]
Test Case: 387 | Input/Output: [(32 91 10 20) 10]
Test Case: 388 | Input/Output: [(34 94 14 57) 14]
Test Case: 389 | Input/Output: [(56 73 63 83) 56]
Test Case: 390 | Input/Output: [(79 61 45 37) 37]
Test Case: 391 | Input/Output: [(77 67 97 30) 30]
Test Case: 392 | Input/Output: [(40 43 41 32) 32]
Test Case: 393 | Input/Output: [(84 8 25 71) 8]
Test Case: 394 | Input/Output: [(63 70 93 44) 44]
Test Case: 395 | Input/Output: [(48 83 49 54) 48]
Test Case: 396 | Input/Output: [(0 23 34 49) 0]
Test Case: 397 | Input/Output: [(12 97 17 86) 12]
Test Case: 398 | Input/Output: [(53 57 88 79) 53]
Test Case: 399 | Input/Output: [(22 35 71 1) 1]
Test Case: 400 | Input/Output: [(-28 -89 -76 26) -89]
Test Case: 401 | Input/Output: [(63 -74 85 -20) -74]
Test Case: 402 | Input/Output: [(-89 -9 -17 92) -89]
Test Case: 403 | Input/Output: [(13 61 47 51) 13]
Test Case: 404 | Input/Output: [(-91 91 -82 18) -91]
Test Case: 405 | Input/Output: [(-81 31 82 -32) -81]
Test Case: 406 | Input/Output: [(-62 58 -12 -58) -62]
Test Case: 407 | Input/Output: [(3 -43 0 93) -43]
Test Case: 408 | Input/Output: [(-22 81 6 -42) -42]
Test Case: 409 | Input/Output: [(-100 -35 -26 13) -100]
Test Case: 410 | Input/Output: [(42 82 -81 95) -81]
Test Case: 411 | Input/Output: [(-12 90 29 -50) -50]
Test Case: 412 | Input/Output: [(-34 3 -99 -84) -99]
Test Case: 413 | Input/Output: [(-3 -3 -90 61) -90]
Test Case: 414 | Input/Output: [(48 4 17 38) 4]
Test Case: 415 | Input/Output: [(-68 -57 -85 18) -85]
Test Case: 416 | Input/Output: [(-94 23 -81 38) -94]
Test Case: 417 | Input/Output: [(76 38 -14 41) -14]
Test Case: 418 | Input/Output: [(-82 -1 -97 77) -97]
Test Case: 419 | Input/Output: [(47 97 25 -90) -90]
Test Case: 420 | Input/Output: [(98 56 53 70) 53]
Test Case: 421 | Input/Output: [(76 -15 51 92) -15]
Test Case: 422 | Input/Output: [(98 46 11 32) 11]
Test Case: 423 | Input/Output: [(44 29 -15 -96) -96]
Test Case: 424 | Input/Output: [(89 -80 14 -30) -80]
Test Case: 425 | Input/Output: [(42 71 -3 62) -3]
Test Case: 426 | Input/Output: [(5 5 69 -84) -84]
Test Case: 427 | Input/Output: [(-90 -26 -60 -51) -90]
Test Case: 428 | Input/Output: [(-25 98 -16 -11) -25]
Test Case: 429 | Input/Output: [(18 -37 -71 24) -71]
Test Case: 430 | Input/Output: [(31 -52 16 -31) -52]
Test Case: 431 | Input/Output: [(-42 35 48 72) -42]
Test Case: 432 | Input/Output: [(75 56 25 -15) -15]
Test Case: 433 | Input/Output: [(-76 87 91 -54) -76]
Test Case: 434 | Input/Output: [(-16 -98 42 -17) -98]
Test Case: 435 | Input/Output: [(56 88 20 -67) -67]
Test Case: 436 | Input/Output: [(-14 3 31 19) -14]
Test Case: 437 | Input/Output: [(96 -83 -84 65) -84]
Test Case: 438 | Input/Output: [(34 13 -16 22) -16]
Test Case: 439 | Input/Output: [(-72 -3 -3 4) -72]
Test Case: 440 | Input/Output: [(-37 -46 -62 16) -62]
Test Case: 441 | Input/Output: [(35 8 18 -21) -21]
Test Case: 442 | Input/Output: [(83 -68 -19 67) -68]
Test Case: 443 | Input/Output: [(-43 29 2 -15) -43]
Test Case: 444 | Input/Output: [(-86 97 12 41) -86]
Test Case: 445 | Input/Output: [(-11 -8 -43 -87) -87]
Test Case: 446 | Input/Output: [(-17 -36 15 -31) -36]
Test Case: 447 | Input/Output: [(-33 26 -20 -85) -85]
Test Case: 448 | Input/Output: [(5 34 -48 -7) -48]
Test Case: 449 | Input/Output: [(90 74 44 31) 31]
Test Case: 450 | Input/Output: [(-33 -65 29 77) -65]
Test Case: 451 | Input/Output: [(20 42 36 66) 20]
Test Case: 452 | Input/Output: [(44 26 -17 -44) -44]
Test Case: 453 | Input/Output: [(29 -82 -18 -34) -82]
Test Case: 454 | Input/Output: [(-68 -49 91 81) -68]
Test Case: 455 | Input/Output: [(-47 7 -80 7) -80]
Test Case: 456 | Input/Output: [(66 -23 34 -26) -26]
Test Case: 457 | Input/Output: [(0 -5 70 -59) -59]
Test Case: 458 | Input/Output: [(22 -82 84 -25) -82]
Test Case: 459 | Input/Output: [(-40 23 15 -58) -58]
Test Case: 460 | Input/Output: [(23 -41 -18 -26) -41]
Test Case: 461 | Input/Output: [(51 29 -80 54) -80]
Test Case: 462 | Input/Output: [(57 -71 66 5) -71]
Test Case: 463 | Input/Output: [(97 68 -61 -13) -61]
Test Case: 464 | Input/Output: [(73 -51 34 32) -51]
Test Case: 465 | Input/Output: [(-71 33 -64 -6) -71]
Test Case: 466 | Input/Output: [(-36 23 77 -97) -97]
Test Case: 467 | Input/Output: [(63 88 -96 -98) -98]
Test Case: 468 | Input/Output: [(-76 -16 -3 94) -76]
Test Case: 469 | Input/Output: [(-99 46 -71 -69) -99]
Test Case: 470 | Input/Output: [(-40 -26 55 -31) -40]
Test Case: 471 | Input/Output: [(39 -71 30 -32) -71]
Test Case: 472 | Input/Output: [(-96 -41 33 47) -96]
Test Case: 473 | Input/Output: [(11 -53 57 -79) -79]
Test Case: 474 | Input/Output: [(-96 -98 2 -95) -98]
Test Case: 475 | Input/Output: [(-8 45 22 23) -8]
Test Case: 476 | Input/Output: [(-67 -50 -65 -19) -67]
Test Case: 477 | Input/Output: [(-22 57 57 83) -22]
Test Case: 478 | Input/Output: [(74 64 64 88) 64]
Test Case: 479 | Input/Output: [(-52 -8 0 -96) -96]
Test Case: 480 | Input/Output: [(-20 37 56 62) -20]
Test Case: 481 | Input/Output: [(-100 -29 -53 80) -100]
Test Case: 482 | Input/Output: [(-41 -26 -18 -41) -41]
Test Case: 483 | Input/Output: [(-23 55 -29 49) -29]
Test Case: 484 | Input/Output: [(-83 56 2 -27) -83]
Test Case: 485 | Input/Output: [(79 48 -54 -96) -96]
Test Case: 486 | Input/Output: [(95 34 9 36) 9]
Test Case: 487 | Input/Output: [(-11 -3 -81 16) -81]
Test Case: 488 | Input/Output: [(-27 60 -96 -18) -96]
Test Case: 489 | Input/Output: [(14 -78 36 32) -78]
Test Case: 490 | Input/Output: [(41 -26 57 83) -26]
Test Case: 491 | Input/Output: [(1 83 -77 -78) -78]
Test Case: 492 | Input/Output: [(77 -83 71 91) -83]
Test Case: 493 | Input/Output: [(-29 94 -36 0) -36]
Test Case: 494 | Input/Output: [(-91 -78 65 75) -91]
Test Case: 495 | Input/Output: [(86 56 -36 -19) -36]
Test Case: 496 | Input/Output: [(-1 -55 -50 -38) -55]
Test Case: 497 | Input/Output: [(-99 46 -67 -91) -99]
Test Case: 498 | Input/Output: [(-30 -54 48 -4) -54]
Test Case: 499 | Input/Output: [(-89 -84 -91 -17) -91]
Test Case: 500 | Input/Output: [(14 -62 85 -98) -98]
Test Case: 501 | Input/Output: [(58 -24 95 -15) -24]
Test Case: 502 | Input/Output: [(48 -48 -8 62) -48]
Test Case: 503 | Input/Output: [(-25 -74 -15 89) -74]
Test Case: 504 | Input/Output: [(19 9 82 -38) -38]
Test Case: 505 | Input/Output: [(30 93 71 65) 30]
Test Case: 506 | Input/Output: [(15 -67 53 30) -67]
Test Case: 507 | Input/Output: [(33 86 7 97) 7]
Test Case: 508 | Input/Output: [(-8 -96 -2 39) -96]
Test Case: 509 | Input/Output: [(-48 -70 -3 82) -70]
Test Case: 510 | Input/Output: [(-10 68 -14 31) -14]
Test Case: 511 | Input/Output: [(65 -83 -55 62) -83]
Test Case: 512 | Input/Output: [(-60 -48 -11 23) -60]
Test Case: 513 | Input/Output: [(35 5 -94 2) -94]
Test Case: 514 | Input/Output: [(-90 -95 82 34) -95]
Test Case: 515 | Input/Output: [(-24 23 -9 -44) -44]
Test Case: 516 | Input/Output: [(-82 -99 -81 11) -99]
Test Case: 517 | Input/Output: [(87 -5 89 -32) -32]
Test Case: 518 | Input/Output: [(77 -29 100 53) -29]
Test Case: 519 | Input/Output: [(-43 -26 -1 -47) -47]
Test Case: 520 | Input/Output: [(-13 -92 49 -88) -92]
Test Case: 521 | Input/Output: [(-60 -13 67 -37) -60]
Test Case: 522 | Input/Output: [(40 72 -85 -7) -85]
Test Case: 523 | Input/Output: [(96 -99 39 70) -99]
Test Case: 524 | Input/Output: [(-53 85 96 -13) -53]
Test Case: 525 | Input/Output: [(3 85 -67 19) -67]
Test Case: 526 | Input/Output: [(-81 -32 42 -74) -81]
Test Case: 527 | Input/Output: [(92 -15 19 -85) -85]
Test Case: 528 | Input/Output: [(78 34 33 42) 33]
Test Case: 529 | Input/Output: [(10 -31 -48 -41) -48]
Test Case: 530 | Input/Output: [(-31 90 84 -30) -31]
Test Case: 531 | Input/Output: [(-53 72 0 -43) -53]
Test Case: 532 | Input/Output: [(-59 -91 11 81) -91]
Test Case: 533 | Input/Output: [(76 55 25 -87) -87]
Test Case: 534 | Input/Output: [(83 -60 -63 -68) -68]
Test Case: 535 | Input/Output: [(95 -78 23 -51) -78]
Test Case: 536 | Input/Output: [(85 25 -73 -97) -97]
Test Case: 537 | Input/Output: [(41 33 93 88) 33]
Test Case: 538 | Input/Output: [(0 -11 -31 23) -31]
Test Case: 539 | Input/Output: [(-4 7 27 80) -4]
Test Case: 540 | Input/Output: [(-68 74 -54 -86) -86]
Test Case: 541 | Input/Output: [(-15 -66 46 86) -66]
Test Case: 542 | Input/Output: [(-10 56 -100 22) -100]
Test Case: 543 | Input/Output: [(40 -35 16 -34) -35]
Test Case: 544 | Input/Output: [(86 -61 -74 -2) -74]
Test Case: 545 | Input/Output: [(-52 -44 -51 -69) -69]
Test Case: 546 | Input/Output: [(12 21 -26 -76) -76]
Test Case: 547 | Input/Output: [(26 53 45 -62) -62]
Test Case: 548 | Input/Output: [(-48 78 -78 22) -78]
Test Case: 549 | Input/Output: [(3 -27 -23 -45) -45]
Test Case: 550 | Input/Output: [(12 24 -16 66) -16]
Test Case: 551 | Input/Output: [(-58 -20 60 -53) -58]
Test Case: 552 | Input/Output: [(-65 28 16 -66) -66]
Test Case: 553 | Input/Output: [(48 61 -19 30) -19]
Test Case: 554 | Input/Output: [(60 -58 83 82) -58]
Test Case: 555 | Input/Output: [(-22 -33 -46 -6) -46]
Test Case: 556 | Input/Output: [(72 -53 63 -6) -53]
Test Case: 557 | Input/Output: [(-61 -58 -71 64) -71]
Test Case: 558 | Input/Output: [(-77 -21 -97 -91) -97]
Test Case: 559 | Input/Output: [(-62 -44 -79 91) -79]
Test Case: 560 | Input/Output: [(62 66 30 -93) -93]
Test Case: 561 | Input/Output: [(53 37 9 23) 9]
Test Case: 562 | Input/Output: [(33 19 -77 99) -77]
Test Case: 563 | Input/Output: [(-71 -40 26 91) -71]
Test Case: 564 | Input/Output: [(20 52 -77 23) -77]
Test Case: 565 | Input/Output: [(0 -1 -39 -68) -68]
Test Case: 566 | Input/Output: [(88 -33 -47 -90) -90]
Test Case: 567 | Input/Output: [(4 83 -100 -94) -100]
Test Case: 568 | Input/Output: [(46 21 -75 95) -75]
Test Case: 569 | Input/Output: [(-67 22 29 -90) -90]
Test Case: 570 | Input/Output: [(-85 80 61 56) -85]
Test Case: 571 | Input/Output: [(-90 -91 21 6) -91]
Test Case: 572 | Input/Output: [(59 -76 -49 26) -76]
Test Case: 573 | Input/Output: [(-35 -64 33 -92) -92]
Test Case: 574 | Input/Output: [(14 56 27 37) 14]
Test Case: 575 | Input/Output: [(-28 21 36 -23) -28]
Test Case: 576 | Input/Output: [(-91 32 -48 44) -91]
Test Case: 577 | Input/Output: [(53 14 -6 47) -6]
Test Case: 578 | Input/Output: [(-7 23 -37 -63) -63]
Test Case: 579 | Input/Output: [(38 -34 75 19) -34]
Test Case: 580 | Input/Output: [(12 -89 2 -46) -89]
Test Case: 581 | Input/Output: [(-5 -14 -53 69) -53]
Test Case: 582 | Input/Output: [(-51 33 -27 -61) -61]
Test Case: 583 | Input/Output: [(16 -36 -31 -39) -39]
Test Case: 584 | Input/Output: [(-36 55 25 -44) -44]
Test Case: 585 | Input/Output: [(27 3 4 -5) -5]
Test Case: 586 | Input/Output: [(-81 -35 48 55) -81]
Test Case: 587 | Input/Output: [(74 6 33 56) 6]
Test Case: 588 | Input/Output: [(-31 69 -45 62) -45]
Test Case: 589 | Input/Output: [(18 -91 -31 83) -91]
Test Case: 590 | Input/Output: [(94 78 -6 92) -6]
Test Case: 591 | Input/Output: [(-52 -23 77 -51) -52]
Test Case: 592 | Input/Output: [(-72 -95 -21 -17) -95]
Test Case: 593 | Input/Output: [(-43 -88 -65 22) -88]
Test Case: 594 | Input/Output: [(-13 -99 -66 98) -99]
Test Case: 595 | Input/Output: [(69 39 85 -59) -59]
Test Case: 596 | Input/Output: [(12 -88 12 -43) -88]
Test Case: 597 | Input/Output: [(-46 65 43 -17) -46]
Test Case: 598 | Input/Output: [(69 -96 7 -20) -96]
Test Case: 599 | Input/Output: [(10 -6 -39 11) -39]
Test Case: 600 | Input/Output: [(4 63 72 -5) -5]
Test Case: 601 | Input/Output: [(-85 88 34 -87) -87]
Test Case: 602 | Input/Output: [(79 46 15 -97) -97]
Test Case: 603 | Input/Output: [(-47 0 23 0) -47]
Test Case: 604 | Input/Output: [(30 35 -18 -93) -93]
Test Case: 605 | Input/Output: [(-50 92 48 61) -50]
Test Case: 606 | Input/Output: [(81 -59 -1 72) -59]
Test Case: 607 | Input/Output: [(6 -12 -55 -19) -55]
Test Case: 608 | Input/Output: [(21 -96 97 -26) -96]
Test Case: 609 | Input/Output: [(-91 2 -39 19) -91]
Test Case: 610 | Input/Output: [(-14 -29 -85 46) -85]
Test Case: 611 | Input/Output: [(70 51 -20 96) -20]
Test Case: 612 | Input/Output: [(35 52 -22 1) -22]
Test Case: 613 | Input/Output: [(50 -51 -23 -50) -51]
Test Case: 614 | Input/Output: [(-13 49 67 31) -13]
Test Case: 615 | Input/Output: [(-21 7 -66 -27) -66]
Test Case: 616 | Input/Output: [(-19 99 69 13) -19]
Test Case: 617 | Input/Output: [(-98 30 -67 10) -98]
Test Case: 618 | Input/Output: [(81 53 66 -35) -35]
Test Case: 619 | Input/Output: [(-81 -99 87 -87) -99]
Test Case: 620 | Input/Output: [(-5 -47 -75 24) -75]
Test Case: 621 | Input/Output: [(24 20 -86 -87) -87]
Test Case: 622 | Input/Output: [(97 42 68 -60) -60]
Test Case: 623 | Input/Output: [(-52 21 4 -74) -74]
Test Case: 624 | Input/Output: [(-91 99 18 -25) -91]
Test Case: 625 | Input/Output: [(9 98 56 21) 9]
Test Case: 626 | Input/Output: [(-47 -56 82 44) -56]
Test Case: 627 | Input/Output: [(-51 -10 58 0) -51]
Test Case: 628 | Input/Output: [(-10 -5 -57 -42) -57]
Test Case: 629 | Input/Output: [(13 -81 50 59) -81]
Test Case: 630 | Input/Output: [(72 76 -21 -35) -35]
Test Case: 631 | Input/Output: [(6 -37 32 -82) -82]
Test Case: 632 | Input/Output: [(47 -39 -93 59) -93]
Test Case: 633 | Input/Output: [(-92 -98 25 24) -98]
Test Case: 634 | Input/Output: [(7 -74 22 79) -74]
Test Case: 635 | Input/Output: [(3 -58 15 -96) -96]
Test Case: 636 | Input/Output: [(55 26 22 90) 22]
Test Case: 637 | Input/Output: [(1 -14 -70 -78) -78]
Test Case: 638 | Input/Output: [(90 70 -92 22) -92]
Test Case: 639 | Input/Output: [(-87 -35 -83 92) -87]
Test Case: 640 | Input/Output: [(86 40 -8 85) -8]
Test Case: 641 | Input/Output: [(3 82 39 -78) -78]
Test Case: 642 | Input/Output: [(52 44 8 28) 8]
Test Case: 643 | Input/Output: [(-23 -50 -40 14) -50]
Test Case: 644 | Input/Output: [(-80 -34 80 -17) -80]
Test Case: 645 | Input/Output: [(-4 5 -1 33) -4]
Test Case: 646 | Input/Output: [(46 -18 -15 -77) -77]
Test Case: 647 | Input/Output: [(-74 15 49 -12) -74]
Test Case: 648 | Input/Output: [(-62 -39 -85 11) -85]
Test Case: 649 | Input/Output: [(1 -84 86 50) -84]
Test Case: 650 | Input/Output: [(-47 -30 69 24) -47]
Test Case: 651 | Input/Output: [(-20 8 22 59) -20]
Test Case: 652 | Input/Output: [(4 -41 8 -66) -66]
Test Case: 653 | Input/Output: [(-97 71 -72 -71) -97]
Test Case: 654 | Input/Output: [(-76 6 28 44) -76]
Test Case: 655 | Input/Output: [(27 -42 -25 -34) -42]
Test Case: 656 | Input/Output: [(-68 46 8 75) -68]
Test Case: 657 | Input/Output: [(20 53 -67 51) -67]
Test Case: 658 | Input/Output: [(-36 -1 -80 -77) -80]
Test Case: 659 | Input/Output: [(72 45 80 -1) -1]
Test Case: 660 | Input/Output: [(-80 -2 -19 25) -80]
Test Case: 661 | Input/Output: [(32 35 -27 18) -27]
Test Case: 662 | Input/Output: [(34 -7 71 -42) -42]
Test Case: 663 | Input/Output: [(-48 -37 -73 -84) -84]
Test Case: 664 | Input/Output: [(-79 32 -71 52) -79]
Test Case: 665 | Input/Output: [(96 32 -82 -71) -82]
Test Case: 666 | Input/Output: [(27 19 74 -11) -11]
Test Case: 667 | Input/Output: [(9 -45 -94 58) -94]
Test Case: 668 | Input/Output: [(70 49 -30 35) -30]
Test Case: 669 | Input/Output: [(97 5 -77 -82) -82]
Test Case: 670 | Input/Output: [(29 -84 -6 -100) -100]
Test Case: 671 | Input/Output: [(91 -76 -10 92) -76]
Test Case: 672 | Input/Output: [(65 39 -90 -62) -90]
Test Case: 673 | Input/Output: [(-50 -94 -81 21) -94]
Test Case: 674 | Input/Output: [(-11 84 26 -37) -37]
Test Case: 675 | Input/Output: [(-98 15 26 77) -98]
Test Case: 676 | Input/Output: [(39 -18 -35 91) -35]
Test Case: 677 | Input/Output: [(-56 -29 -73 18) -73]
Test Case: 678 | Input/Output: [(18 7 -49 -11) -49]
Test Case: 679 | Input/Output: [(-66 100 81 12) -66]
Test Case: 680 | Input/Output: [(-30 52 -83 -81) -83]
Test Case: 681 | Input/Output: [(-75 91 11 39) -75]
Test Case: 682 | Input/Output: [(36 -51 -65 -43) -65]
Test Case: 683 | Input/Output: [(75 87 45 56) 45]
Test Case: 684 | Input/Output: [(29 93 32 -38) -38]
Test Case: 685 | Input/Output: [(100 -23 57 36) -23]
Test Case: 686 | Input/Output: [(-66 -75 75 -95) -95]
Test Case: 687 | Input/Output: [(-47 28 -15 24) -47]
Test Case: 688 | Input/Output: [(-47 72 33 -64) -64]
Test Case: 689 | Input/Output: [(75 -86 7 15) -86]
Test Case: 690 | Input/Output: [(-83 11 82 31) -83]
Test Case: 691 | Input/Output: [(27 -11 32 -97) -97]
Test Case: 692 | Input/Output: [(53 -30 17 -17) -30]
Test Case: 693 | Input/Output: [(100 83 93 -44) -44]
Test Case: 694 | Input/Output: [(81 -24 33 28) -24]
Test Case: 695 | Input/Output: [(-86 73 3 87) -86]
Test Case: 696 | Input/Output: [(23 67 33 -93) -93]
Test Case: 697 | Input/Output: [(0 91 45 74) 0]
Test Case: 698 | Input/Output: [(47 -17 31 59) -17]
Test Case: 699 | Input/Output: [(-53 -88 -71 -62) -88]
Test Case: 700 | Input/Output: [(-9 25 82 -17) -17]
Test Case: 701 | Input/Output: [(-94 -55 84 -60) -94]
Test Case: 702 | Input/Output: [(23 -12 49 -36) -36]
Test Case: 703 | Input/Output: [(94 -43 54 -82) -82]
Test Case: 704 | Input/Output: [(-60 -20 72 -16) -60]
Test Case: 705 | Input/Output: [(69 -84 -9 13) -84]
Test Case: 706 | Input/Output: [(22 -33 -66 -34) -66]
Test Case: 707 | Input/Output: [(40 37 -35 60) -35]
Test Case: 708 | Input/Output: [(-69 -68 100 82) -69]
Test Case: 709 | Input/Output: [(-63 30 90 -97) -97]
Test Case: 710 | Input/Output: [(-55 66 -86 20) -86]
Test Case: 711 | Input/Output: [(-22 -40 6 -33) -40]
Test Case: 712 | Input/Output: [(0 39 1 -75) -75]
Test Case: 713 | Input/Output: [(-58 38 -35 65) -58]
Test Case: 714 | Input/Output: [(72 -17 33 63) -17]
Test Case: 715 | Input/Output: [(-57 2 -49 -7) -57]
Test Case: 716 | Input/Output: [(-31 98 -84 -74) -84]
Test Case: 717 | Input/Output: [(-93 -13 72 -73) -93]
Test Case: 718 | Input/Output: [(0 -69 83 -32) -69]
Test Case: 719 | Input/Output: [(86 32 -13 -73) -73]
Test Case: 720 | Input/Output: [(-82 82 -65 62) -82]
Test Case: 721 | Input/Output: [(94 -7 -57 56) -57]
Test Case: 722 | Input/Output: [(13 -68 96 46) -68]
Test Case: 723 | Input/Output: [(62 49 -5 100) -5]
Test Case: 724 | Input/Output: [(-93 -98 -43 -93) -98]
Test Case: 725 | Input/Output: [(18 -49 21 -90) -90]
Test Case: 726 | Input/Output: [(-70 70 27 -94) -94]
Test Case: 727 | Input/Output: [(12 -49 -99 -15) -99]
Test Case: 728 | Input/Output: [(-76 -28 1 -39) -76]
Test Case: 729 | Input/Output: [(-30 -95 -35 -94) -95]
Test Case: 730 | Input/Output: [(-54 -20 87 -34) -54]
Test Case: 731 | Input/Output: [(-76 -92 48 -24) -92]
Test Case: 732 | Input/Output: [(-72 -3 51 99) -72]
Test Case: 733 | Input/Output: [(-42 -74 -22 7) -74]
Test Case: 734 | Input/Output: [(-87 83 85 83) -87]
Test Case: 735 | Input/Output: [(42 -45 87 -18) -45]
Test Case: 736 | Input/Output: [(-90 -23 -62 5) -90]
Test Case: 737 | Input/Output: [(60 72 -86 -33) -86]
Test Case: 738 | Input/Output: [(-80 -48 -62 26) -80]
Test Case: 739 | Input/Output: [(-85 49 71 -29) -85]
Test Case: 740 | Input/Output: [(75 -77 -23 97) -77]
Test Case: 741 | Input/Output: [(100 -38 20 -72) -72]
Test Case: 742 | Input/Output: [(-74 -93 -92 -37) -93]
Test Case: 743 | Input/Output: [(-51 20 -25 85) -51]
Test Case: 744 | Input/Output: [(-10 80 -97 -51) -97]
Test Case: 745 | Input/Output: [(-79 100 58 77) -79]
Test Case: 746 | Input/Output: [(60 -95 34 29) -95]
Test Case: 747 | Input/Output: [(1 -62 -84 -60) -84]
Test Case: 748 | Input/Output: [(34 -80 91 64) -80]
Test Case: 749 | Input/Output: [(28 24 62 91) 24]
Test Case: 750 | Input/Output: [(-63 -77 -88 36) -88]
Test Case: 751 | Input/Output: [(-49 -68 -23 3) -68]
Test Case: 752 | Input/Output: [(37 76 98 13) 13]
Test Case: 753 | Input/Output: [(69 -48 -83 58) -83]
Test Case: 754 | Input/Output: [(96 -22 69 -55) -55]
Test Case: 755 | Input/Output: [(93 61 -73 -52) -73]
Test Case: 756 | Input/Output: [(-87 47 52 -17) -87]
Test Case: 757 | Input/Output: [(-77 -21 -59 77) -77]
Test Case: 758 | Input/Output: [(-50 91 -54 -24) -54]
Test Case: 759 | Input/Output: [(-20 94 -23 7) -23]
Test Case: 760 | Input/Output: [(-17 51 -74 -78) -78]
Test Case: 761 | Input/Output: [(32 22 87 16) 16]
Test Case: 762 | Input/Output: [(22 -44 -14 43) -44]
Test Case: 763 | Input/Output: [(33 64 24 -93) -93]
Test Case: 764 | Input/Output: [(90 61 -95 -44) -95]
Test Case: 765 | Input/Output: [(-83 70 84 45) -83]
Test Case: 766 | Input/Output: [(48 62 -51 -49) -51]
Test Case: 767 | Input/Output: [(-84 91 -10 -98) -98]
Test Case: 768 | Input/Output: [(-2 -12 -65 57) -65]
Test Case: 769 | Input/Output: [(-7 28 47 71) -7]
Test Case: 770 | Input/Output: [(-6 -90 -18 40) -90]
Test Case: 771 | Input/Output: [(83 65 99 -47) -47]
Test Case: 772 | Input/Output: [(-88 -49 43 49) -88]
Test Case: 773 | Input/Output: [(36 12 97 59) 12]
Test Case: 774 | Input/Output: [(-66 98 81 31) -66]
Test Case: 775 | Input/Output: [(-31 -40 -50 75) -50]
Test Case: 776 | Input/Output: [(22 96 -54 -71) -71]
Test Case: 777 | Input/Output: [(4 -47 71 95) -47]
Test Case: 778 | Input/Output: [(18 -35 -53 13) -53]
Test Case: 779 | Input/Output: [(-16 -28 98 -64) -64]
Test Case: 780 | Input/Output: [(99 -78 97 -35) -78]
Test Case: 781 | Input/Output: [(82 0 79 -11) -11]
Test Case: 782 | Input/Output: [(-38 -59 -73 -2) -73]
Test Case: 783 | Input/Output: [(80 96 -72 -66) -72]
Test Case: 784 | Input/Output: [(-93 2 69 -57) -93]
Test Case: 785 | Input/Output: [(-32 49 -86 -63) -86]
Test Case: 786 | Input/Output: [(-26 91 -13 20) -26]
Test Case: 787 | Input/Output: [(-95 85 -17 -61) -95]
Test Case: 788 | Input/Output: [(27 7 -19 -87) -87]
Test Case: 789 | Input/Output: [(-37 66 50 57) -37]
Test Case: 790 | Input/Output: [(26 50 51 -80) -80]
Test Case: 791 | Input/Output: [(62 -9 -11 73) -11]
Test Case: 792 | Input/Output: [(65 -10 -9 -66) -66]
Test Case: 793 | Input/Output: [(-83 -89 65 -52) -89]
Test Case: 794 | Input/Output: [(-91 71 94 18) -91]
Test Case: 795 | Input/Output: [(93 -68 -28 -10) -68]
Test Case: 796 | Input/Output: [(17 28 69 -27) -27]
Test Case: 797 | Input/Output: [(53 -30 -20 62) -30]
Test Case: 798 | Input/Output: [(-15 30 -72 41) -72]
Test Case: 799 | Input/Output: [(-86 99 16 82) -86]
Test Case: 800 | Input/Output: [(59 39 -46 79) -46]
Test Case: 801 | Input/Output: [(-79 -67 -9 -95) -95]
Test Case: 802 | Input/Output: [(5 67 29 -57) -57]
Test Case: 803 | Input/Output: [(70 81 -37 24) -37]
Test Case: 804 | Input/Output: [(-51 83 24 -77) -77]
Test Case: 805 | Input/Output: [(-97 -45 -82 -22) -97]
Test Case: 806 | Input/Output: [(-33 -48 32 35) -48]
Test Case: 807 | Input/Output: [(70 84 73 8) 8]
Test Case: 808 | Input/Output: [(92 -63 -83 -93) -93]
Test Case: 809 | Input/Output: [(-2 -50 22 42) -50]
Test Case: 810 | Input/Output: [(-9 89 -92 -78) -92]
Test Case: 811 | Input/Output: [(80 21 28 72) 21]
Test Case: 812 | Input/Output: [(34 28 20 -97) -97]
Test Case: 813 | Input/Output: [(65 95 -30 -32) -32]
Test Case: 814 | Input/Output: [(-38 -55 -47 -25) -55]
Test Case: 815 | Input/Output: [(82 40 -91 72) -91]
Test Case: 816 | Input/Output: [(-3 -50 94 -48) -50]
Test Case: 817 | Input/Output: [(5 96 75 41) 5]
Test Case: 818 | Input/Output: [(87 23 -77 -20) -77]
Test Case: 819 | Input/Output: [(-43 -98 76 9) -98]
Test Case: 820 | Input/Output: [(9 -9 35 52) -9]
Test Case: 821 | Input/Output: [(60 22 47 -15) -15]
Test Case: 822 | Input/Output: [(-47 -87 49 84) -87]
Test Case: 823 | Input/Output: [(-91 77 -95 55) -95]
Test Case: 824 | Input/Output: [(-7 96 -50 -41) -50]
Test Case: 825 | Input/Output: [(-23 -76 5 -90) -90]
Test Case: 826 | Input/Output: [(-94 -44 -20 -38) -94]
Test Case: 827 | Input/Output: [(-47 98 62 -50) -50]
Test Case: 828 | Input/Output: [(17 32 -38 41) -38]
Test Case: 829 | Input/Output: [(-86 54 -18 72) -86]
Test Case: 830 | Input/Output: [(-77 -52 88 60) -77]
Test Case: 831 | Input/Output: [(93 63 -77 -46) -77]
Test Case: 832 | Input/Output: [(-21 34 84 -88) -88]
Test Case: 833 | Input/Output: [(-92 -32 95 97) -92]
Test Case: 834 | Input/Output: [(54 -84 -11 -31) -84]
Test Case: 835 | Input/Output: [(-13 43 95 -54) -54]
Test Case: 836 | Input/Output: [(-88 -62 66 -46) -88]
Test Case: 837 | Input/Output: [(-26 -11 88 -81) -81]
Test Case: 838 | Input/Output: [(83 32 63 52) 32]
Test Case: 839 | Input/Output: [(3 -91 -94 -26) -94]
Test Case: 840 | Input/Output: [(-4 31 -58 -61) -61]
Test Case: 841 | Input/Output: [(-67 -15 -100 -7) -100]
Test Case: 842 | Input/Output: [(80 -37 90 81) -37]
Test Case: 843 | Input/Output: [(-47 -72 96 36) -72]
Test Case: 844 | Input/Output: [(38 -49 -43 -70) -70]
Test Case: 845 | Input/Output: [(-35 -42 96 3) -42]
Test Case: 846 | Input/Output: [(-1 41 41 -1) -1]
Test Case: 847 | Input/Output: [(-66 59 -44 -64) -66]
Test Case: 848 | Input/Output: [(-37 82 -91 -38) -91]
Test Case: 849 | Input/Output: [(-26 -73 62 -47) -73]
Test Case: 850 | Input/Output: [(-22 -90 100 -9) -90]
Test Case: 851 | Input/Output: [(8 40 87 16) 8]
Test Case: 852 | Input/Output: [(66 -90 -98 -7) -98]
Test Case: 853 | Input/Output: [(-24 -87 -92 -26) -92]
Test Case: 854 | Input/Output: [(93 49 3 89) 3]
Test Case: 855 | Input/Output: [(91 -76 20 -63) -76]
Test Case: 856 | Input/Output: [(-63 84 92 85) -63]
Test Case: 857 | Input/Output: [(84 14 41 -78) -78]
Test Case: 858 | Input/Output: [(5 -39 -50 3) -50]
Test Case: 859 | Input/Output: [(99 -16 96 -44) -44]
Test Case: 860 | Input/Output: [(4 57 73 66) 4]
Test Case: 861 | Input/Output: [(-8 63 -93 -90) -93]
Test Case: 862 | Input/Output: [(87 -29 71 9) -29]
Test Case: 863 | Input/Output: [(-29 18 41 22) -29]
Test Case: 864 | Input/Output: [(64 -86 -98 31) -98]
Test Case: 865 | Input/Output: [(-49 11 20 75) -49]
Test Case: 866 | Input/Output: [(49 -99 47 25) -99]
Test Case: 867 | Input/Output: [(33 16 -81 80) -81]
Test Case: 868 | Input/Output: [(-53 -85 5 5) -85]
Test Case: 869 | Input/Output: [(86 77 -4 3) -4]
Test Case: 870 | Input/Output: [(-58 -87 33 25) -87]
Test Case: 871 | Input/Output: [(100 83 92 -89) -89]
Test Case: 872 | Input/Output: [(-70 -38 1 78) -70]
Test Case: 873 | Input/Output: [(-73 -25 50 -19) -73]
Test Case: 874 | Input/Output: [(92 75 10 91) 10]
Test Case: 875 | Input/Output: [(46 -72 -55 -48) -72]
Test Case: 876 | Input/Output: [(16 -100 -37 -62) -100]
Test Case: 877 | Input/Output: [(49 24 -52 18) -52]
Test Case: 878 | Input/Output: [(-71 -83 -86 98) -86]
Test Case: 879 | Input/Output: [(30 -8 -18 -83) -83]
Test Case: 880 | Input/Output: [(-6 69 87 -82) -82]
Test Case: 881 | Input/Output: [(-2 -94 -31 71) -94]
Test Case: 882 | Input/Output: [(-71 -40 58 55) -71]
Test Case: 883 | Input/Output: [(20 73 -51 -62) -62]
Test Case: 884 | Input/Output: [(-90 -75 -27 4) -90]
Test Case: 885 | Input/Output: [(65 22 -88 -32) -88]
Test Case: 886 | Input/Output: [(8 -80 -53 -41) -80]
Test Case: 887 | Input/Output: [(-35 77 17 80) -35]
Test Case: 888 | Input/Output: [(33 26 28 -25) -25]
Test Case: 889 | Input/Output: [(81 81 -28 5) -28]
Test Case: 890 | Input/Output: [(-89 13 -99 -43) -99]
Test Case: 891 | Input/Output: [(-85 -55 -99 -7) -99]
Test Case: 892 | Input/Output: [(-70 28 -90 -10) -90]
Test Case: 893 | Input/Output: [(-72 63 35 70) -72]
Test Case: 894 | Input/Output: [(40 -49 39 -45) -49]
Test Case: 895 | Input/Output: [(35 63 36 -55) -55]
Test Case: 896 | Input/Output: [(88 -4 25 -78) -78]
Test Case: 897 | Input/Output: [(-60 13 46 -95) -95]
Test Case: 898 | Input/Output: [(40 -41 -41 -61) -61]
Test Case: 899 | Input/Output: [(-87 -51 20 -25) -87]
Test Case: 900 | Input/Output: [(71 -32 -19 20) -32]
Test Case: 901 | Input/Output: [(-72 -70 -1 29) -72]
Test Case: 902 | Input/Output: [(72 66 99 8) 8]
Test Case: 903 | Input/Output: [(-74 3 -61 91) -74]
Test Case: 904 | Input/Output: [(-7 68 48 -46) -46]
Test Case: 905 | Input/Output: [(76 40 99 -98) -98]
Test Case: 906 | Input/Output: [(-32 -90 29 -32) -90]
Test Case: 907 | Input/Output: [(-51 -83 -82 -84) -84]
Test Case: 908 | Input/Output: [(36 84 -63 -36) -63]
Test Case: 909 | Input/Output: [(11 94 5 -100) -100]
Test Case: 910 | Input/Output: [(-8 4 -36 -100) -100]
Test Case: 911 | Input/Output: [(-29 94 -74 -29) -74]
Test Case: 912 | Input/Output: [(-28 46 59 91) -28]
Test Case: 913 | Input/Output: [(26 -56 -4 30) -56]
Test Case: 914 | Input/Output: [(20 -84 -55 -88) -88]
Test Case: 915 | Input/Output: [(84 31 7 -5) -5]
Test Case: 916 | Input/Output: [(-36 56 11 -41) -41]
Test Case: 917 | Input/Output: [(54 52 -96 -100) -100]
Test Case: 918 | Input/Output: [(27 82 -82 -45) -82]
Test Case: 919 | Input/Output: [(15 -97 37 14) -97]
Test Case: 920 | Input/Output: [(-41 -1 -13 -84) -84]
Test Case: 921 | Input/Output: [(61 23 46 60) 23]
Test Case: 922 | Input/Output: [(-7 -65 -48 14) -65]
Test Case: 923 | Input/Output: [(12 -65 -27 -24) -65]
Test Case: 924 | Input/Output: [(65 -17 -8 -32) -32]
Test Case: 925 | Input/Output: [(-60 -77 -44 -69) -77]
Test Case: 926 | Input/Output: [(-86 -83 -66 -40) -86]
Test Case: 927 | Input/Output: [(-80 50 91 -91) -91]
Test Case: 928 | Input/Output: [(-73 -53 -2 4) -73]
Test Case: 929 | Input/Output: [(76 -22 90 74) -22]
Test Case: 930 | Input/Output: [(3 59 99 -29) -29]
Test Case: 931 | Input/Output: [(-23 72 -28 -84) -84]
Test Case: 932 | Input/Output: [(-92 17 38 -71) -92]
Test Case: 933 | Input/Output: [(-38 -81 -84 -53) -84]
Test Case: 934 | Input/Output: [(100 -29 89 -46) -46]
Test Case: 935 | Input/Output: [(-47 -14 -81 -35) -81]
Test Case: 936 | Input/Output: [(57 98 -5 -27) -27]
Test Case: 937 | Input/Output: [(-76 -23 23 47) -76]
Test Case: 938 | Input/Output: [(-30 22 -22 -62) -62]
Test Case: 939 | Input/Output: [(-31 65 15 21) -31]
Test Case: 940 | Input/Output: [(10 87 -84 63) -84]
Test Case: 941 | Input/Output: [(1 -70 -8 -20) -70]
Test Case: 942 | Input/Output: [(19 -88 -7 -44) -88]
Test Case: 943 | Input/Output: [(-62 38 -53 -55) -62]
Test Case: 944 | Input/Output: [(64 -62 -72 -42) -72]
Test Case: 945 | Input/Output: [(-23 11 34 61) -23]
Test Case: 946 | Input/Output: [(1 80 23 50) 1]
Test Case: 947 | Input/Output: [(95 30 -13 44) -13]
Test Case: 948 | Input/Output: [(-17 24 30 -81) -81]
Test Case: 949 | Input/Output: [(59 -81 16 -50) -81]
Test Case: 950 | Input/Output: [(-84 47 -35 16) -84]
Test Case: 951 | Input/Output: [(-10 90 -83 -24) -83]
Test Case: 952 | Input/Output: [(-72 -4 -34 10) -72]
Test Case: 953 | Input/Output: [(12 2 3 29) 2]
Test Case: 954 | Input/Output: [(28 6 -95 -48) -95]
Test Case: 955 | Input/Output: [(71 -51 81 -85) -85]
Test Case: 956 | Input/Output: [(-86 -65 100 -9) -86]
Test Case: 957 | Input/Output: [(-41 30 43 -91) -91]
Test Case: 958 | Input/Output: [(39 17 81 -38) -38]
Test Case: 959 | Input/Output: [(79 -85 -54 -81) -85]
Test Case: 960 | Input/Output: [(79 36 -94 56) -94]
Test Case: 961 | Input/Output: [(41 -69 10 12) -69]
Test Case: 962 | Input/Output: [(83 -15 -89 11) -89]
Test Case: 963 | Input/Output: [(-50 23 -23 73) -50]
Test Case: 964 | Input/Output: [(100 5 39 -79) -79]
Test Case: 965 | Input/Output: [(26 -19 -43 58) -43]
Test Case: 966 | Input/Output: [(-95 -10 -29 -32) -95]
Test Case: 967 | Input/Output: [(-77 55 -54 13) -77]
Test Case: 968 | Input/Output: [(34 26 -39 -44) -44]
Test Case: 969 | Input/Output: [(76 -99 -24 -22) -99]
Test Case: 970 | Input/Output: [(45 14 -36 6) -36]
Test Case: 971 | Input/Output: [(-16 27 3 14) -16]
Test Case: 972 | Input/Output: [(32 4 59 23) 4]
Test Case: 973 | Input/Output: [(32 -34 -1 88) -34]
Test Case: 974 | Input/Output: [(-70 -80 68 33) -80]
Test Case: 975 | Input/Output: [(-44 100 79 -98) -98]
Test Case: 976 | Input/Output: [(2 -5 21 -77) -77]
Test Case: 977 | Input/Output: [(-78 -52 -79 -57) -79]
Test Case: 978 | Input/Output: [(78 -54 77 2) -54]
Test Case: 979 | Input/Output: [(-50 -87 28 -55) -87]
Test Case: 980 | Input/Output: [(5 -66 -47 -86) -86]
Test Case: 981 | Input/Output: [(99 100 -5 -77) -77]
Test Case: 982 | Input/Output: [(13 78 88 -83) -83]
Test Case: 983 | Input/Output: [(-46 -22 -78 -83) -83]
Test Case: 984 | Input/Output: [(77 1 -70 91) -70]
Test Case: 985 | Input/Output: [(-27 42 74 -83) -83]
Test Case: 986 | Input/Output: [(92 77 -93 -92) -93]
Test Case: 987 | Input/Output: [(90 -40 63 -47) -47]
Test Case: 988 | Input/Output: [(69 73 -84 -41) -84]
Test Case: 989 | Input/Output: [(31 -54 52 50) -54]
Test Case: 990 | Input/Output: [(60 -31 63 13) -31]
Test Case: 991 | Input/Output: [(87 14 -16 0) -16]
Test Case: 992 | Input/Output: [(-26 -6 -86 -12) -86]
Test Case: 993 | Input/Output: [(-39 -70 -77 82) -77]
Test Case: 994 | Input/Output: [(-5 -6 16 -42) -42]
Test Case: 995 | Input/Output: [(-60 20 13 -23) -60]
Test Case: 996 | Input/Output: [(-52 20 -20 34) -52]
Test Case: 997 | Input/Output: [(-46 40 79 -22) -46]
Test Case: 998 | Input/Output: [(-21 97 -83 -14) -83]
Test Case: 999 | Input/Output: [(-65 69 58 -53) -65]
;;******************************
Registered instructions: #{code_atom genome_uniform_tag_mutation code_car print_newline integer_sub integer_inc boolean_stackdepth return_exec_pop zip_dup_items integer_tag_string_instruction vector_integer_eq autoconstructive_integer_rand boolean_pop genome_close_inc string_fromchar vector_string_shove zip_yankdup genome_new genome_gene_genome_instruction vector_float_yankdup exec_yankdup gtm_bounce2 vector_integer_shove integer_yankdup string_flush boolean_swap zip_empty exec_shove vector_boolean_yank code_eq exec_y boolean_yank integer_eq genome_silence string_butlast code_contains genome_step2 string_conjchar code_do*count vector_float_last genome_uniform_instruction_mutation genome_pop string_substring integer_mult vector_string_dup_times code_length vector_integer_dup boolean_or code_position boolean_empty zip_fromcode print_vector_string vector_boolean_swap exec_s_when_autoconstructing return_frominteger char_dup_items vector_float_pushall return_genome_pop genome_gene_close char_iswhitespace code_cdr exec_do*vector_integer integer_rand vector_string_replacefirst string_first vector_boolean_first exec_do*while exec_string_iterate string_indexofchar vector_float_replace integer_fromstring code_list gtm_write_close code_swap char_frominteger genome_gene_randomize vector_integer_emptyvector vector_string_eq exec_dup_items vector_float_butlast boolean_dup_items genome_uniform_string_mutation exec_empty zip_end? exec_fromzipnode string_shove gtm_inc_delay vector_boolean_pushall genome_append_parent1 zip_insert_left_fromcode gtm_blank1 exec_rot integer_tag_integer_instruction vector_string_concat vector_float_indexof genome_instruction_eq code_pop vector_string_subvec vector_integer_swap code_subst char_pop return_string_pop zip_yank exec_dup gtm_read_instruction vector_integer_butlast genome_append1_parent1 vector_float_rest vector_string_flush boolean_fromfloat code_fromziprights float_sin boolean_flush char_isdigit float_lte exec_fromziproot vector_integer_empty print_code vector_string_stackdepth string_reverse gtm_left exec_k gtm_dec_delay vector_integer_yank genome_dub2 float_frominteger char_rot vector_integer_dup_times print_char integer_tag_boolean_instruction genome_parent2_length vector_integer_stackdepth vector_boolean_concat boolean_xor integer_gte genome_yankdup vector_float_shove vector_integer_take boolean_dup_times code_quote string_replacefirst return_fromstring exec_fromziplefts vector_integer_yankdup boolean_shove float_lt vector_string_dup vector_string_occurrencesof vector_integer_replace zip_branch? vector_float_reverse float_mod vector_float_subvec integer_tag_code_instruction string_last print_boolean boolean_rot vector_string_rest integer_div vector_float_remove integer_tag_exec_instruction gtm_read_all integer_fromfloat integer_lte code_fromzipchildren environment_end vector_integer_rot integer_mod string_concat vector_string_butlast genome_swap code_null exec_do*count vector_float_emptyvector vector_string_yankdup integer_tag_float_instruction integer_rot float_yankdup vector_string_rot exec_k_when_autoconstructing zip_replace_fromexec genome_uniform_boolean_mutation vector_string_take vector_float_dup_items integer_add vector_integer_occurrencesof integer_shove string_dup_times gtm_blank2 gtm_right genome_dup gtm_erase return_code_pop char_swap integer_max gtm_write_all return_fromexec code_wrap genome_genesis return_float_pop code_flush genome_yank genome_dub1 zip_shove vector_integer_flush vector_integer_subvec gtm_bounce1 vector_boolean_indexof vector_float_pop char_dup_times genome_uniform_silence_mutation genome_uniform_crossover vector_string_remove vector_integer_contains zip_remove code_append vector_float_eq vector_integer_conj string_eq zip_leftmost code_yankdup code_rot integer_stackdepth float_max vector_boolean_set zip_append_child_fromexec genome_step1 zip_next vector_float_conj zip_fromexec code_dup_times float_dup_items string_take zip_left genome_if_gene_genome_instruction zip_replace_fromcode char_stackdepth return_fromchar genome_eq vector_integer_replacefirst float_stackdepth code_fromziproot integer_dup_times float_fromchar genome_uniform_combination_and_deletion float_gt boolean_dup float_fromboolean code_fromzipnode genome_rot vector_float_replacefirst vector_boolean_conj exec_dup_times vector_boolean_dup vector_integer_indexof vector_string_swap exec_eq string_emptystring string_swap integer_yank exec_while float_empty print_vector_boolean code_rand_atom integer_min autoconstructive_code_rand_atom genome_append1_random exec_swap genome_rotate integer_fromchar vector_string_yank string_stackdepth code_do*range string_replacechar char_allfromstring vector_integer_rest vector_boolean_length char_yank vector_float_empty code_fromfloat genome_parent2 return_fromcode string_pop code_dup_items float_eq integer_untag_instruction integer_dup_items vector_boolean_empty gtm_read_silent zip_insert_child_fromexec vector_string_last string_nth code_do* return_zip_pop vector_string_pop zip_rot vector_integer_nth exec_do*range vector_integer_dup_items exec_if char_shove zip_down zip_insert_left_fromexec code_frominteger vector_boolean_remove vector_integer_remove boolean_invert_first_then_and genome_flush print_string integer_fromboolean gtm_write_silent char_yankdup code_do vector_string_first boolean_frominteger string_setchar vector_integer_last char_isletter genome_gene_dup vector_integer_concat return_fromzip print_integer genome_uniform_float_mutation code_map boolean_eq float_gte return_fromfloat genome_gene_copy string_occurrencesofchar string_replacefirstchar print_float boolean_rand integer_flush float_shove string_replace char_dup gtm_blank0 exec_y_when_autoconstructing float_pop char_eq vector_float_nth vector_string_conj integer_gt vector_float_dup_times return_integer_pop genome_gene_replace float_sub vector_integer_length vector_float_set vector_string_indexof vector_boolean_rest code_dup vector_boolean_shove zip_eq float_min boolean_not float_mult float_fromstring genome_unsilence code_if vector_boolean_dup_items vector_integer_pop vector_boolean_last exec_do*times zip_pop genome_gene_silent zip_rightmost float_dec vector_float_contains genome_append_random genome_gene_copy_range environment_new exec_do*vector_string code_nthcdr string_empty char_empty exec_pop vector_integer_set autoconstructive_boolean_rand genome_uniform_addition_and_deletion vector_float_rot string_yankdup exec_do*vector_float string_removechar code_extract vector_string_replace vector_float_first genome_parent1 return_tagspace char_flush genome_uniform_integer_mutation vector_float_occurrencesof vector_string_emptyvector float_add genome_append_parent2 code_stackdepth genome_back2 genome_length exec_s zip_insert_right_fromexec float_dup integer_tag_char_instruction vector_string_nth zip_stackdepth vector_integer_reverse print_vector_integer char_fromfloat code_do*times code_noop zip_swap code_yank integer_lt vector_boolean_eq genome_stackdepth code_fromziplefts noop_open_paren genome_uniform_deletion vector_boolean_dup_times string_containschar string_yank char_rand zip_flush vector_boolean_rot float_swap exec_fromziprights vector_string_pushall vector_string_set vector_boolean_flush return_fromgenome exec_noop code_size vector_boolean_stackdepth vector_integer_pushall vector_boolean_reverse gtm_read_close integer_swap gtm_dub1 string_split vector_boolean_contains string_fromboolean return_boolean_pop vector_float_dup vector_boolean_replace vector_string_dup_items integer_dup vector_boolean_nth vector_string_length genome_uniform_addition string_rest zip_insert_child_fromcode float_tan string_rot string_rand exec_yank string_parse_to_chars integer_pop integer_empty vector_float_flush genome_if_autoconstructing vector_float_yank noop_delete_prev_paren_pair gtm_dub2 print_exec zip_append_child_fromcode genome_gene_delete float_dup_times code_empty float_inc zip_right vector_float_length float_rand genome_back1 genome_uniform_close_mutation integer_dec string_contains return_fromboolean vector_float_concat vector_float_stackdepth exec_do*vector_boolean vector_integer_first genome_shove code_rand print_vector_float float_rot return_char_pop vector_string_contains genome_autoconstructing vector_boolean_occurrencesof string_dup_items genome_empty zip_prev genome_toggle_silent vector_string_reverse zip_dup code_cons code_member exec_stackdepth float_flush boolean_and integer_tagged_instruction vector_boolean_butlast string_length float_cos string_frominteger exec_flush vector_string_empty exec_when vector_float_swap genome_close_dec code_insert vector_boolean_pop float_div zip_insert_right_fromcode code_fromboolean vector_boolean_take code_shove genome_append1_parent2 environment_begin vector_float_take boolean_invert_second_then_and code_container code_nth gtm_write_instruction genome_parent1_length vector_boolean_subvec float_yank zip_up vector_boolean_emptyvector vector_boolean_replacefirst genome_alternation zip_dup_times string_fromfloat vector_boolean_yankdup string_dup boolean_yankdup exec_fromzipchildren}
Starting PushGP run.
Clojush version = 3.20.1-1-SNAPSHOTHash of last Git commit = 36d53ff379ce188ec967b36004fe50584f65112f
GitHub link = https://github.com/lspector/Clojush/commit/36d53ff379ce188ec967b36004fe50584f65112f
age-combining-function = :average
age-mediated-parent-selection = false
alignment-deviation = 5
alternation-rate = 0.01
atom-generators = (#object[clojush.problems.software.smallest$fn__7461 0x30b9728f clojush.problems.software.smallest$fn__7461@30b9728f] #object[clojush.instructions.tag$tag_instruction_erc$fn__2160 0x453a30f8 clojush.instructions.tag$tag_instruction_erc$fn__2160@453a30f8] #object[clojush.instructions.tag$tagged_instruction_erc$fn__2166 0x73a116d clojush.instructions.tag$tagged_instruction_erc$fn__2166@73a116d] in1 in2 in3 in4 print_newline integer_sub integer_inc boolean_stackdepth boolean_pop exec_yankdup integer_yankdup boolean_swap exec_shove exec_y boolean_yank integer_eq integer_mult boolean_or boolean_empty exec_s_when_autoconstructing exec_do*while exec_dup_items boolean_dup_items exec_empty exec_rot exec_dup boolean_flush exec_k boolean_xor integer_gte boolean_dup_times boolean_shove print_boolean boolean_rot integer_div integer_lte integer_mod exec_do*count integer_rot exec_k_when_autoconstructing integer_add integer_shove integer_max integer_stackdepth integer_dup_times boolean_dup exec_dup_times exec_eq integer_yank exec_while integer_min exec_swap integer_dup_items exec_do*range exec_if boolean_invert_first_then_and integer_fromboolean boolean_frominteger print_integer boolean_eq integer_flush exec_y_when_autoconstructing integer_gt boolean_not exec_do*times exec_pop exec_s integer_lt exec_noop integer_swap integer_dup exec_yank integer_pop integer_empty print_exec integer_dec exec_stackdepth boolean_and exec_flush exec_when boolean_invert_second_then_and boolean_yankdup)
autoconstructive = false
autoconstructive-boolean-rand-enrichment = 0
autoconstructive-clone-decay = :same
autoconstructive-clone-probability = 0.0
autoconstructive-code-rand-atom-enrichment = 0
autoconstructive-decay = 0.0
autoconstructive-diffmeans-children = 10
autoconstructive-diversification-test = :gecco2016
autoconstructive-enough-new-errors-fraction = 1/2
autoconstructive-environments = false
autoconstructive-genome-instructions = :all
autoconstructive-integer-rand-enrichment = 0
autoconstructive-parent-decay = 0.0
autoconstructive-si-children = 8
autoconstructive-tag-types = [:integer :boolean :exec :float :char :string :code]
close-increment-rate = 0.2
close-parens-probabilities = [0.772 0.206 0.021 0.001]
csv-columns = [:generation :location :total-error :push-program-size]
csv-log-filename = log.csv
decimation-ratio = 1
decimation-tournament-size = 2
down-sample-factor = 0.1
edn-additional-keys = [:generation :location]
edn-keys = [:uuid :parent-uuids :genetic-operators :program :genome :total-error :errors]
edn-log-filename = log.edn
epigenetic-markers = [:close]
epsilon-lexicase-epsilon = nil
epsilon-lexicase-probability = 1
error-change-recency-limit = 5
error-function = #object[clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479 0x24b8a393 clojush.problems.software.smallest$make_smallest_error_function_from_cases$the_actual_smallest_error_function__7479@24b8a393]
error-threshold = 0
evalpush-limit = 200
evalpush-time-limit = 0
exit-on-success = true
final-report-simplifications = 5000
gene-selection-rate = 1.0
genetic-operator-probabilities = {:alternation 0.2, :uniform-mutation 0.2, :uniform-close-mutation 0.1, [:alternation :uniform-mutation] 0.5}
genome-representation = :plush
improvement-discount = 0.5
individuals-for-novelty-archive-per-generation = 0
json-log-filename = log.json
json-log-program-strings = false
label = nil
lexicase-leakage = 0.1
lexicase-slippage = 0
log-fitnesses-for-all-cases = false
maintain-ancestors = false
max-error = 1
max-generations = 2000
max-genome-size-in-initial-program = 100
max-point-evaluations = 1.0E101
max-points = 800
meta-error-categories = []
normalization = :none
novelty-distance-metric = :euclidean
novelty-number-of-neighbors-k = 25
parent-reversion-probability = 1.0
parent-selection = :lexicase
plushy-close-probability = :automatic
pop-when-tagging = true
population-size = 1000
preserve-frontier = false
print-ancestors-of-solution = false
print-cosmos-data = false
print-csv-logs = false
print-edn-logs = false
print-error-frequencies-by-case = false
print-errors = true
print-history = false
print-homology-data = false
print-json-logs = false
print-selection-counts = false
print-timings = true
problem-specific-initial-report = #object[clojush.problems.software.smallest$smallest_initial_report 0x20be793a clojush.problems.software.smallest$smallest_initial_report@20be793a]
problem-specific-report = #object[clojush.problems.software.smallest$smallest_report 0x9763e61 clojush.problems.software.smallest$smallest_report@9763e61]
random-screen = false
random-seed = 56 17 -97 124 -31 61 116 -62 42 110 -100 -88 127 -12 15 -23
random-threshold-lexicase-probability = 1
random-toggle-lexicase-probability = 1
randomly-truncated-lexicase-probability = 1
record-host = nil
replace-child-that-exceeds-size-limit-with = :random
report-simplifications = 0
return-simplified-on-failure = false
reuse-errors = true
selection-delay = false
self-mate-avoidance-limit = 0
silent-instruction-probability = 0.2
sort-meta-errors-for-lexicase = :random
sub-training-cases = ()
tag-enrichment = 0
tag-enrichment-types = [:integer :boolean :exec :float :char :string :code]
tag-limit = 10000
top-level-pop-code = false
top-level-push-code = false
total-error-method = :sum
tournament-size = 7
track-instruction-maps = false
training-cases = ([(0 0 0 0) 0] [(-44 -44 -7 -13) -44] [(0 4 -99 -33) -99] [(-22 -22 -22 -22) -22] [(99 100 99 100) 99] [[73 -53 73 73] -53] [[-61 84 -61 -61] -61] [[59 -44 59 59] -44] [[-6 -50 -50 -50] -50] [[-4 -4 -24 -4] -24] [[-12 11 -12 -12] -12] [[-4 -27 -4 -4] -27] [[-10 -1 -10 -10] -10] [[-78 -78 -78 1] -78] [[-37 35 35 35] -37] [(71 71 71 71) 71] [(49 49 49 49) 49] [(-10 -10 -10 -10) -10] [(-27 -27 -27 -27) -27] [(-38 -38 -38 -38) -38] [(37 45 91 70) 37] [(7 67 28 21) 7] [(68 15 13 1) 1] [(34 3 71 49) 3] [(85 15 67 7) 7] [(88 32 96 99) 32] [(77 12 79 9) 9] [(32 59 59 8) 8] [(12 45 33 2) 2] [(78 54 50 0) 0] [(25 97 24 24) 24] [(37 72 23 11) 11] [(52 0 58 38) 0] [(63 94 1 57) 1] [(71 75 90 59) 59] [(75 65 42 97) 42] [(66 13 25 31) 13] [(44 65 30 95) 30] [(11 35 21 50) 11] [(32 39 77 0) 0] [(-75 33 43 97) -75] [(82 -94 84 -33) -94] [(-63 25 -17 73) -63] [(27 -52 -3 1) -52] [(-74 91 62 63) -74] [(10 -60 -43 -69) -69] [(-95 -55 -9 -22) -95] [(65 29 -7 43) -7] [(-10 57 -33 -93) -93] [(60 73 92 12) 12] [(-100 -57 -62 -14) -100] [(-8 60 90 -22) -22] [(-47 16 -50 -68) -68] [(-23 -76 44 66) -76] [(97 46 -10 42) -10] [(14 96 44 -69) -69] [(88 60 98 -43) -43] [(29 -54 -15 21) -54] [(-78 -78 21 92) -78] [(80 74 -63 85) -63] [(-52 46 7 -34) -52] [(18 56 -92 21) -92] [(47 -91 46 -93) -93] [(13 21 91 13) 13] [(-93 75 -13 -75) -93] [(-51 51 -76 -54) -76] [(53 -17 -30 21) -30] [(14 38 59 56) 14] [(-60 -80 -3 -44) -80] [(48 10 -98 -59) -98] [(30 -52 72 0) -52] [(-35 -60 -72 28) -72] [(-64 25 -82 68) -82] [(85 46 -90 38) -90] [(-71 -71 -39 33) -71] [(-5 78 23 46) -5] [(66 -65 51 -52) -65] [(1 -91 83 14) -91] [(34 -26 16 32) -26] [(-8 -61 51 -63) -63] [(30 11 96 7) 7] [(69 41 -99 19) -99] [(67 33 -90 -20) -90] [(-30 20 -56 97) -56] [(-95 -8 33 -78) -95] [(80 -73 34 -26) -73] [(68 -68 60 77) -68] [(-13 62 76 -72) -72] [(84 -95 -53 -69) -95] [(-50 39 -57 -49) -57] [(-65 2 79 -37) -65] [(-10 -98 96 64) -98] [(92 8 27 83) 8] [(-3 37 -47 -34) -47] [(83 83 94 -20) -20] [(76 66 -1 -91) -91] [(-76 -83 -42 11) -83] [(91 -95 -74 -82) -95] [(-16 57 -20 -10) -20] [(14 17 68 -46) -46])
uniform-addition-and-deletion-rate = 0.01
uniform-addition-rate = 0.01
uniform-close-mutation-rate = 0.1
uniform-combination-and-deletion-rate = 0.01
uniform-combination-rate = 0.01
uniform-deletion-rate = 0.01
uniform-mutation-constant-tweak-rate = 0.5
uniform-mutation-float-gaussian-standard-deviation = 1.0
uniform-mutation-int-gaussian-standard-deviation = 1
uniform-mutation-rate = 0.01
uniform-mutation-string-char-change-rate = 0.1
uniform-mutation-tag-gaussian-standard-deviation = 100
uniform-silence-mutation-rate = 0.1
use-single-thread = false
visualize = false

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Generating initial population...
Processing generation: 0
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 0
;;******************************
;; -*- Smallest problem report - generation 0
Test total error for best: 639
Test mean error for best: 0.63900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -33                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -53                 | Program output: 73                 
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -4                 
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: 1                  
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 70                 
Correct output: 7                   | Program output: 21                 
Correct output: 1                   | Program output: 1                  
Correct output: 3                   | Program output: 49                 
Correct output: 7                   | Program output: 7                  
Correct output: 32                  | Program output: 99                 
Correct output: 9                   | Program output: 9                  
Correct output: 8                   | Program output: 8                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 24                  | Program output: 24                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 38                 
Correct output: 1                   | Program output: 57                 
Correct output: 59                  | Program output: 59                 
Correct output: 42                  | Program output: 97                 
Correct output: 13                  | Program output: 31                 
Correct output: 30                  | Program output: 95                 
Correct output: 11                  | Program output: 50                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: 97                 
Correct output: -94                 | Program output: -33                
Correct output: -63                 | Program output: 73                 
Correct output: -52                 | Program output: 1                  
Correct output: -74                 | Program output: 63                 
Correct output: -69                 | Program output: -69                
Correct output: -95                 | Program output: -22                
Correct output: -7                  | Program output: 43                 
Correct output: -93                 | Program output: -93                
Correct output: 12                  | Program output: 12                 
Correct output: -100                | Program output: -14                
Correct output: -22                 | Program output: -22                
Correct output: -68                 | Program output: -68                
Correct output: -76                 | Program output: 66                 
Correct output: -10                 | Program output: 42                 
Correct output: -69                 | Program output: -69                
Correct output: -43                 | Program output: -43                
Correct output: -54                 | Program output: 21                 
Correct output: -78                 | Program output: 92                 
Correct output: -63                 | Program output: 85                 
Correct output: -52                 | Program output: -34                
Correct output: -92                 | Program output: 21                 
Correct output: -93                 | Program output: -93                
Correct output: 13                  | Program output: 13                 
Correct output: -93                 | Program output: -75                
Correct output: -76                 | Program output: -54                
Correct output: -30                 | Program output: 21                 
Correct output: 14                  | Program output: 56                 
Correct output: -80                 | Program output: -44                
Correct output: -98                 | Program output: -59                
Correct output: -52                 | Program output: 0                  
Correct output: -72                 | Program output: 28                 
Correct output: -82                 | Program output: 68                 
Correct output: -90                 | Program output: 38                 
Correct output: -71                 | Program output: 33                 
Correct output: -5                  | Program output: 46                 
Correct output: -65                 | Program output: -52                
Correct output: -91                 | Program output: 14                 
Correct output: -26                 | Program output: 32                 
Correct output: -63                 | Program output: -63                
Correct output: 7                   | Program output: 7                  
Correct output: -99                 | Program output: 19                 
Correct output: -90                 | Program output: -20                
Correct output: -56                 | Program output: 97                 
Correct output: -95                 | Program output: -78                
Correct output: -73                 | Program output: -26                
Correct output: -68                 | Program output: 77                 
Correct output: -72                 | Program output: -72                
Correct output: -95                 | Program output: -69                
Correct output: -57                 | Program output: -49                
Correct output: -65                 | Program output: -37                
Correct output: -98                 | Program output: 64                 
Correct output: 8                   | Program output: 83                 
Correct output: -47                 | Program output: -34                
Correct output: -20                 | Program output: -20                
Correct output: -91                 | Program output: -91                
Correct output: -83                 | Program output: 11                 
Correct output: -95                 | Program output: -82                
Correct output: -20                 | Program output: -10                
Correct output: -46                 | Program output: -46                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction exec_when} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_flush} {:close 1, :instruction integer_mult} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_rot} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 2, :instruction print_exec} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_if} {:close 0, :instruction integer_empty} {:close 0, :instruction print_exec} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_inc} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_k} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_eq} {:close 1, :instruction print_integer} {:close 1, :instruction exec_do*while} {:close 0, :instruction in2} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_or})
Lexicase best program: (in4 boolean_shove in3 boolean_invert_second_then_and boolean_swap boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_stackdepth exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add exec_when (integer_sub integer_div boolean_flush) integer_mult) boolean_invert_second_then_and integer_rot integer_lte boolean_invert_second_then_and exec_while () boolean_yank integer_empty boolean_stackdepth exec_stackdepth print_exec () exec_shove (exec_yank integer_gt boolean_yankdup) integer_dec exec_if (integer_empty print_exec (boolean_yank boolean_rot boolean_or exec_k_when_autoconstructing (integer_inc boolean_flush) (exec_do*while (exec_k () (boolean_dup_times boolean_stackdepth boolean_eq print_integer) exec_do*while () in2 integer_pop) boolean_or))) ())
Lexicase best errors: [0 0 0 1 1 1 1 0 0 1]
Lexicase best number of elite cases: 6
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 76
Percent parens: 0.237
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction boolean_swap} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction exec_when} {:close 0, :instruction integer_sub} {:close 0, :instruction integer_div} {:close 1, :instruction boolean_flush} {:close 1, :instruction integer_mult} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction integer_rot} {:close 0, :instruction integer_lte} {:close 0, :instruction boolean_invert_second_then_and} {:close 1, :instruction exec_while} {:close 0, :instruction boolean_yank} {:close 0, :instruction integer_empty} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_stackdepth} {:close 2, :instruction print_exec} {:close 0, :instruction exec_shove} {:close 0, :instruction exec_yank} {:close 0, :instruction integer_gt} {:close 1, :instruction boolean_yankdup} {:close 0, :instruction integer_dec} {:close 0, :instruction exec_if} {:close 0, :instruction integer_empty} {:close 0, :instruction print_exec} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_rot} {:close 0, :instruction boolean_or} {:close 0, :instruction exec_k_when_autoconstructing} {:close 0, :instruction integer_inc} {:close 1, :instruction boolean_flush} {:close 0, :instruction exec_do*while} {:close 1, :instruction exec_k} {:close 0, :instruction boolean_dup_times} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction boolean_eq} {:close 1, :instruction print_integer} {:close 1, :instruction exec_do*while} {:close 0, :instruction in2} {:close 1, :instruction integer_pop} {:close 0, :instruction boolean_or})
Zero cases best program: (in4 boolean_shove in3 boolean_invert_second_then_and boolean_swap boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_stackdepth exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add exec_when (integer_sub integer_div boolean_flush) integer_mult) boolean_invert_second_then_and integer_rot integer_lte boolean_invert_second_then_and exec_while () boolean_yank integer_empty boolean_stackdepth exec_stackdepth print_exec () exec_shove (exec_yank integer_gt boolean_yankdup) integer_dec exec_if (integer_empty print_exec (boolean_yank boolean_rot boolean_or exec_k_when_autoconstructing (integer_inc boolean_flush) (exec_do*while (exec_k () (boolean_dup_times boolean_stackdepth boolean_eq print_integer) exec_do*while () in2 integer_pop) boolean_or))) ())
Zero cases best errors: [0 0 0 1 1 1 1 0 0 1]
Zero cases best number of elite cases: 6
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 76
Percent parens: 0.237
--- Lexicase Population Statistics ---
Count of elite individuals by case: (10 4 3 1000 4 3 4 3 3 7)
Population mean number of elite cases: 1.04
Count of perfect (error zero) individuals by case: (10 4 3 0 4 3 4 3 3 7)
Population mean number of perfect (error zero) cases: 0.04
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction exec_dup} {:close 0, :instruction boolean_swap} {:close 0, :instruction integer_shove} {:close 1, :instruction boolean_xor} {:close 0, :instruction in4} {:close 0, :instruction print_integer} {:close 0, :instruction boolean_and} {:close 0, :instruction boolean_yank} {:close 1, :instruction integer_dup} {:close 0, :instruction exec_dup_times} {:close 0, :instruction integer_dup} {:close 0, :instruction exec_shove} {:close 1, :instruction integer_inc} {:close 0, :instruction exec_flush} {:close 0, :instruction exec_do*count} {:close 0, :instruction boolean_yank})
Best program: (exec_dup (boolean_swap integer_shove boolean_xor) in4 print_integer boolean_and boolean_yank integer_dup exec_dup_times (integer_dup exec_shove (integer_inc) exec_flush exec_do*count (boolean_yank)))
Errors: [0 0 0 1 1 1 1 0 0 1]
Total: 5
Mean: 0.5
Genome size: 16
Size: 21
Percent parens: 0.238
--- Population Statistics ---
Average total errors in population: 9.959
Median total errors in population: 10
Error averages by case: (0.99 0.996 0.997 1.0 0.996 0.997 0.996 0.997 0.997 0.993)
Error minima by case: (0 0 0 1 0 0 0 0 0 0)
Average genome size in population (length): 49.339
Average program size in population (points): 68.035
Average percent parens in population: 0.280
Minimum age in population: 0.0
Maximum age in population: 0.0
Average age in population: 0.0
Median age in population: 0.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 1
Genome diversity (% unique genomes):	 1.0
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 1
Syntactic diversity (% unique Push programs):	 1.0
Total error diversity:				 0.005
Error (vector) diversity:			 0.006
Behavioral diversity:				 0.271
--- Run Statistics ---
Number of program evaluations used so far: 1000
Number of point (instruction) evaluations so far: 462052
--- Timings ---
Current time: 1559584147380 milliseconds
Total Time:           2.4 seconds
Initialization:       0.1 seconds,  4.3%
Reproduction:         0.7 seconds, 30.3%
Fitness Testing:      1.6 seconds, 65.4%
Report:               0.0 seconds,  0.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 1
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 1
;;******************************
;; -*- Smallest problem report - generation 1
Test total error for best: 650
Test mean error for best: 0.65000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: 84                 
Correct output: -44                 | Program output: -44                
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -4                 
Correct output: -12                 | Program output: 11                 
Correct output: -27                 | Program output: -27                
Correct output: -10                 | Program output: -1                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 45                 
Correct output: 7                   | Program output: 67                 
Correct output: 1                   | Program output: 15                 
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 12                 
Correct output: 8                   | Program output: 59                 
Correct output: 2                   | Program output: 45                 
Correct output: 0                   | Program output: 54                 
Correct output: 24                  | Program output: 97                 
Correct output: 11                  | Program output: 72                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 94                 
Correct output: 59                  | Program output: 75                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 65                 
Correct output: 11                  | Program output: 35                 
Correct output: 0                   | Program output: 39                 
Correct output: -75                 | Program output: 33                 
Correct output: -94                 | Program output: -94                
Correct output: -63                 | Program output: 25                 
Correct output: -52                 | Program output: -52                
Correct output: -74                 | Program output: 91                 
Correct output: -69                 | Program output: -60                
Correct output: -95                 | Program output: -55                
Correct output: -7                  | Program output: 29                 
Correct output: -93                 | Program output: 57                 
Correct output: 12                  | Program output: 73                 
Correct output: -100                | Program output: -57                
Correct output: -22                 | Program output: 60                 
Correct output: -68                 | Program output: 16                 
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: 46                 
Correct output: -69                 | Program output: 96                 
Correct output: -43                 | Program output: 60                 
Correct output: -54                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: 74                 
Correct output: -52                 | Program output: 46                 
Correct output: -92                 | Program output: 56                 
Correct output: -93                 | Program output: -91                
Correct output: 13                  | Program output: 21                 
Correct output: -93                 | Program output: 75                 
Correct output: -76                 | Program output: 51                 
Correct output: -30                 | Program output: -17                
Correct output: 14                  | Program output: 38                 
Correct output: -80                 | Program output: -80                
Correct output: -98                 | Program output: 10                 
Correct output: -52                 | Program output: -52                
Correct output: -72                 | Program output: -60                
Correct output: -82                 | Program output: 25                 
Correct output: -90                 | Program output: 46                 
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: 78                 
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -61                
Correct output: 7                   | Program output: 11                 
Correct output: -99                 | Program output: 41                 
Correct output: -90                 | Program output: 33                 
Correct output: -56                 | Program output: 20                 
Correct output: -95                 | Program output: -8                 
Correct output: -73                 | Program output: -73                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: 62                 
Correct output: -95                 | Program output: -95                
Correct output: -57                 | Program output: 39                 
Correct output: -65                 | Program output: 2                  
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: 37                 
Correct output: -20                 | Program output: 83                 
Correct output: -91                 | Program output: 66                 
Correct output: -83                 | Program output: -83                
Correct output: -95                 | Program output: -95                
Correct output: -20                 | Program output: 57                 
Correct output: -46                 | Program output: 17                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 1, :instruction integer_max} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction in2} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_dup_times})
Lexicase best program: (in2 exec_if (print_integer integer_max) (integer_lte exec_pop (integer_fromboolean) exec_do*times (exec_y_when_autoconstructing (in2 integer_mult) in2 boolean_pop boolean_rot exec_swap (boolean_dup_times) ())))
Lexicase best errors: [1 1 1 0 1 1 0 0 1 1]
Lexicase best number of elite cases: 3
Lexicase best total error: 7
Lexicase best mean error: 0.7
Lexicase best size: 24
Percent parens: 0.333
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 1, :instruction integer_max} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction in2} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_dup_times})
Zero cases best program: (in2 exec_if (print_integer integer_max) (integer_lte exec_pop (integer_fromboolean) exec_do*times (exec_y_when_autoconstructing (in2 integer_mult) in2 boolean_pop boolean_rot exec_swap (boolean_dup_times) ())))
Zero cases best errors: [1 1 1 0 1 1 0 0 1 1]
Zero cases best number of elite cases: 3
Zero cases best number of zero cases: 3
Zero cases best total error: 7
Zero cases best mean error: 0.7
Zero cases best size: 24
Percent parens: 0.333
--- Lexicase Population Statistics ---
Count of elite individuals by case: (440 143 430 307 143 3 305 305 148 3)
Population mean number of elite cases: 2.23
Count of perfect (error zero) individuals by case: (440 143 430 307 143 3 305 305 148 3)
Population mean number of perfect (error zero) cases: 2.23
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 1, :instruction integer_max} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction in2} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_dup_times})
Best program: (in2 exec_if (print_integer integer_max) (integer_lte exec_pop (integer_fromboolean) exec_do*times (exec_y_when_autoconstructing (in2 integer_mult) in2 boolean_pop boolean_rot exec_swap (boolean_dup_times) ())))
Errors: [1 1 1 0 1 1 0 0 1 1]
Total: 7
Mean: 0.7
Genome size: 16
Size: 24
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 7.773
Median total errors in population: 8
Error averages by case: (0.56 0.857 0.57 0.693 0.857 0.997 0.695 0.695 0.852 0.997)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 35.49
Average program size in population (points): 46.981
Average percent parens in population: 0.247
Minimum age in population: 1.0
Maximum age in population: 2.0
Average age in population: 1.483
Median age in population: 1.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 113
Genome diversity (% unique genomes):	 0.433
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 118
Syntactic diversity (% unique Push programs):	 0.419
Total error diversity:				 0.004
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.046
--- Run Statistics ---
Number of program evaluations used so far: 2000
Number of point (instruction) evaluations so far: 1015449
--- Timings ---
Current time: 1559584149985 milliseconds
Total Time:           5.1 seconds
Initialization:       0.1 seconds,  2.0%
Reproduction:         2.4 seconds, 46.9%
Fitness Testing:      2.3 seconds, 44.7%
Report:               0.3 seconds,  6.5%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 1
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 2
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 2
;;******************************
;; -*- Smallest problem report - generation 2
Test total error for best: 650
Test mean error for best: 0.65000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: 84                 
Correct output: -44                 | Program output: -44                
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -4                 
Correct output: -12                 | Program output: 11                 
Correct output: -27                 | Program output: -27                
Correct output: -10                 | Program output: -1                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 45                 
Correct output: 7                   | Program output: 67                 
Correct output: 1                   | Program output: 15                 
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 12                 
Correct output: 8                   | Program output: 59                 
Correct output: 2                   | Program output: 45                 
Correct output: 0                   | Program output: 54                 
Correct output: 24                  | Program output: 97                 
Correct output: 11                  | Program output: 72                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 94                 
Correct output: 59                  | Program output: 75                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 65                 
Correct output: 11                  | Program output: 35                 
Correct output: 0                   | Program output: 39                 
Correct output: -75                 | Program output: 33                 
Correct output: -94                 | Program output: -94                
Correct output: -63                 | Program output: 25                 
Correct output: -52                 | Program output: -52                
Correct output: -74                 | Program output: 91                 
Correct output: -69                 | Program output: -60                
Correct output: -95                 | Program output: -55                
Correct output: -7                  | Program output: 29                 
Correct output: -93                 | Program output: 57                 
Correct output: 12                  | Program output: 73                 
Correct output: -100                | Program output: -57                
Correct output: -22                 | Program output: 60                 
Correct output: -68                 | Program output: 16                 
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: 46                 
Correct output: -69                 | Program output: 96                 
Correct output: -43                 | Program output: 60                 
Correct output: -54                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: 74                 
Correct output: -52                 | Program output: 46                 
Correct output: -92                 | Program output: 56                 
Correct output: -93                 | Program output: -91                
Correct output: 13                  | Program output: 21                 
Correct output: -93                 | Program output: 75                 
Correct output: -76                 | Program output: 51                 
Correct output: -30                 | Program output: -17                
Correct output: 14                  | Program output: 38                 
Correct output: -80                 | Program output: -80                
Correct output: -98                 | Program output: 10                 
Correct output: -52                 | Program output: -52                
Correct output: -72                 | Program output: -60                
Correct output: -82                 | Program output: 25                 
Correct output: -90                 | Program output: 46                 
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: 78                 
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -61                
Correct output: 7                   | Program output: 11                 
Correct output: -99                 | Program output: 41                 
Correct output: -90                 | Program output: 33                 
Correct output: -56                 | Program output: 20                 
Correct output: -95                 | Program output: -8                 
Correct output: -73                 | Program output: -73                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: 62                 
Correct output: -95                 | Program output: -95                
Correct output: -57                 | Program output: 39                 
Correct output: -65                 | Program output: 2                  
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: 37                 
Correct output: -20                 | Program output: 83                 
Correct output: -91                 | Program output: 66                 
Correct output: -83                 | Program output: -83                
Correct output: -95                 | Program output: -95                
Correct output: -20                 | Program output: 57                 
Correct output: -46                 | Program output: 17                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction print_integer} {:close 0, :instruction exec_s} {:close 0, :instruction integer_dec} {:close 0, :instruction tag_boolean_51} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction tagged_538} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_flush} {:close 1, :instruction integer_max} {:close 0, :instruction in2} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction boolean_xor} {:close 1, :instruction tag_boolean_381})
Lexicase best program: (print_integer exec_s (integer_dec tag_boolean_51 exec_s_when_autoconstructing (tagged_538) (boolean_yankdup integer_flush integer_max) (in2 integer_lt integer_swap print_integer in1 integer_shove exec_stackdepth boolean_xor tag_boolean_381)) () ())
Lexicase best errors: [0 1 0 0 0 0 1 0 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 25
Percent parens: 0.280
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction print_integer} {:close 0, :instruction exec_s} {:close 0, :instruction integer_dec} {:close 0, :instruction tag_boolean_51} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction tagged_538} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_flush} {:close 1, :instruction integer_max} {:close 0, :instruction in2} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction boolean_xor} {:close 1, :instruction tag_boolean_381})
Zero cases best program: (print_integer exec_s (integer_dec tag_boolean_51 exec_s_when_autoconstructing (tagged_538) (boolean_yankdup integer_flush integer_max) (in2 integer_lt integer_swap print_integer in1 integer_shove exec_stackdepth boolean_xor tag_boolean_381)) () ())
Zero cases best errors: [0 1 0 0 0 0 1 0 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 25
Percent parens: 0.280
--- Lexicase Population Statistics ---
Count of elite individuals by case: (286 666 897 676 286 233 203 488 133 694)
Population mean number of elite cases: 4.56
Count of perfect (error zero) individuals by case: (286 666 897 676 286 233 203 488 133 694)
Population mean number of perfect (error zero) cases: 4.56
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 1, :instruction integer_max} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction boolean_dup_times} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_dup_times})
Best program: (in2 exec_if (print_integer integer_max) (integer_lte exec_pop (integer_fromboolean) exec_do*times (exec_y_when_autoconstructing (boolean_dup_times integer_mult) in2 boolean_pop boolean_rot exec_swap (boolean_dup_times) ())))
Errors: [0 1 0 0 0 0 1 0 1 0]
Total: 3
Mean: 0.3
Genome size: 16
Size: 24
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 5.438
Median total errors in population: 6
Error averages by case: (0.714 0.334 0.103 0.324 0.714 0.767 0.797 0.512 0.867 0.306)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 35.283
Average program size in population (points): 47.245
Average percent parens in population: 0.249
Minimum age in population: 2.0
Maximum age in population: 4.0
Average age in population: 2.975
Median age in population: 3.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 65
Genome diversity (% unique genomes):	 0.523
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 66
Syntactic diversity (% unique Push programs):	 0.505
Total error diversity:				 0.007
Error (vector) diversity:			 0.011
Behavioral diversity:				 0.088
--- Run Statistics ---
Number of program evaluations used so far: 3000
Number of point (instruction) evaluations so far: 1633078
--- Timings ---
Current time: 1559584153008 milliseconds
Total Time:           8.2 seconds
Initialization:       0.1 seconds,  1.3%
Reproduction:         4.5 seconds, 55.3%
Fitness Testing:      3.0 seconds, 37.0%
Report:               0.5 seconds,  6.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 2
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 3
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 3
;;******************************
;; -*- Smallest problem report - generation 3
Test total error for best: 650
Test mean error for best: 0.65000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -44                
Correct output: -99                 | Program output: 4                  
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: 84                 
Correct output: -44                 | Program output: -44                
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -4                 
Correct output: -12                 | Program output: 11                 
Correct output: -27                 | Program output: -27                
Correct output: -10                 | Program output: -1                 
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 45                 
Correct output: 7                   | Program output: 67                 
Correct output: 1                   | Program output: 15                 
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 12                 
Correct output: 8                   | Program output: 59                 
Correct output: 2                   | Program output: 45                 
Correct output: 0                   | Program output: 54                 
Correct output: 24                  | Program output: 97                 
Correct output: 11                  | Program output: 72                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 94                 
Correct output: 59                  | Program output: 75                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 65                 
Correct output: 11                  | Program output: 35                 
Correct output: 0                   | Program output: 39                 
Correct output: -75                 | Program output: 33                 
Correct output: -94                 | Program output: -94                
Correct output: -63                 | Program output: 25                 
Correct output: -52                 | Program output: -52                
Correct output: -74                 | Program output: 91                 
Correct output: -69                 | Program output: -60                
Correct output: -95                 | Program output: -55                
Correct output: -7                  | Program output: 29                 
Correct output: -93                 | Program output: 57                 
Correct output: 12                  | Program output: 73                 
Correct output: -100                | Program output: -57                
Correct output: -22                 | Program output: 60                 
Correct output: -68                 | Program output: 16                 
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: 46                 
Correct output: -69                 | Program output: 96                 
Correct output: -43                 | Program output: 60                 
Correct output: -54                 | Program output: -54                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: 74                 
Correct output: -52                 | Program output: 46                 
Correct output: -92                 | Program output: 56                 
Correct output: -93                 | Program output: -91                
Correct output: 13                  | Program output: 21                 
Correct output: -93                 | Program output: 75                 
Correct output: -76                 | Program output: 51                 
Correct output: -30                 | Program output: -17                
Correct output: 14                  | Program output: 38                 
Correct output: -80                 | Program output: -80                
Correct output: -98                 | Program output: 10                 
Correct output: -52                 | Program output: -52                
Correct output: -72                 | Program output: -60                
Correct output: -82                 | Program output: 25                 
Correct output: -90                 | Program output: 46                 
Correct output: -71                 | Program output: -71                
Correct output: -5                  | Program output: 78                 
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -61                
Correct output: 7                   | Program output: 11                 
Correct output: -99                 | Program output: 41                 
Correct output: -90                 | Program output: 33                 
Correct output: -56                 | Program output: 20                 
Correct output: -95                 | Program output: -8                 
Correct output: -73                 | Program output: -73                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: 62                 
Correct output: -95                 | Program output: -95                
Correct output: -57                 | Program output: 39                 
Correct output: -65                 | Program output: 2                  
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: 37                 
Correct output: -20                 | Program output: 83                 
Correct output: -91                 | Program output: 66                 
Correct output: -83                 | Program output: -83                
Correct output: -95                 | Program output: -95                
Correct output: -20                 | Program output: 57                 
Correct output: -46                 | Program output: 17                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 1, :instruction print_integer} {:close 0, :instruction exec_s} {:close 0, :instruction integer_dec} {:close 0, :instruction tag_boolean_51} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction tagged_538} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_flush} {:close 1, :instruction integer_max} {:close 0, :instruction in2} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction boolean_xor} {:close 1, :instruction tag_boolean_466})
Lexicase best program: (print_integer exec_s (integer_dec tag_boolean_51 exec_s_when_autoconstructing (tagged_538) (boolean_yankdup integer_flush integer_max) (in2 integer_lt integer_swap print_integer in1 integer_shove exec_stackdepth boolean_xor tag_boolean_466)) () ())
Lexicase best errors: [1 0 0 1 0 0 0 0 1 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 25
Percent parens: 0.280
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 1, :instruction print_integer} {:close 0, :instruction exec_s} {:close 0, :instruction integer_dec} {:close 0, :instruction tag_boolean_51} {:close 0, :instruction exec_s_when_autoconstructing} {:close 1, :instruction tagged_538} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction integer_flush} {:close 1, :instruction integer_max} {:close 0, :instruction in2} {:close 0, :instruction integer_lt} {:close 0, :instruction integer_swap} {:close 0, :instruction print_integer} {:close 0, :instruction in1} {:close 0, :instruction integer_shove} {:close 0, :instruction exec_stackdepth} {:close 0, :instruction boolean_xor} {:close 1, :instruction tag_boolean_466})
Zero cases best program: (print_integer exec_s (integer_dec tag_boolean_51 exec_s_when_autoconstructing (tagged_538) (boolean_yankdup integer_flush integer_max) (in2 integer_lt integer_swap print_integer in1 integer_shove exec_stackdepth boolean_xor tag_boolean_466)) () ())
Zero cases best errors: [1 0 0 1 0 0 0 0 1 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 25
Percent parens: 0.280
--- Lexicase Population Statistics ---
Count of elite individuals by case: (181 570 570 179 430 430 432 430 158 888)
Population mean number of elite cases: 4.27
Count of perfect (error zero) individuals by case: (181 570 570 179 430 430 432 430 158 888)
Population mean number of perfect (error zero) cases: 4.27
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in2} {:close 0, :instruction exec_if} {:close 0, :instruction print_integer} {:close 1, :instruction integer_max} {:close 0, :instruction integer_lte} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_fromboolean} {:close 0, :instruction exec_do*times} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction in2} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_dup_times})
Best program: (in2 exec_if (print_integer integer_max) (integer_lte exec_pop (integer_fromboolean) exec_do*times (exec_y_when_autoconstructing (in2 integer_mult) in2 boolean_pop boolean_rot exec_swap (boolean_dup_times) ())))
Errors: [1 0 0 1 0 0 0 0 1 0]
Total: 3
Mean: 0.3
Genome size: 16
Size: 24
Percent parens: 0.333
--- Population Statistics ---
Average total errors in population: 5.732
Median total errors in population: 6
Error averages by case: (0.819 0.43 0.43 0.821 0.57 0.57 0.568 0.57 0.842 0.112)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 27.148
Average program size in population (points): 37.033
Average percent parens in population: 0.262
Minimum age in population: 3.0
Maximum age in population: 6.0
Average age in population: 4.5655
Median age in population: 4.5
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 111
Genome diversity (% unique genomes):	 0.483
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 115
Syntactic diversity (% unique Push programs):	 0.469
Total error diversity:				 0.007
Error (vector) diversity:			 0.017
Behavioral diversity:				 0.054
--- Run Statistics ---
Number of program evaluations used so far: 4000
Number of point (instruction) evaluations so far: 2130149
--- Timings ---
Current time: 1559584155491 milliseconds
Total Time:          10.7 seconds
Initialization:       0.1 seconds,  1.0%
Reproduction:         6.3 seconds, 58.9%
Fitness Testing:      3.6 seconds, 33.5%
Report:               0.7 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 3
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 4
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 4
;;******************************
;; -*- Smallest problem report - generation 4
Test total error for best: 549
Test mean error for best: 0.54900
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: -44                
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -24                
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 45                 
Correct output: 7                   | Program output: 67                 
Correct output: 1                   | Program output: 15                 
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 12                 
Correct output: 8                   | Program output: 59                 
Correct output: 2                   | Program output: 45                 
Correct output: 0                   | Program output: 54                 
Correct output: 24                  | Program output: 97                 
Correct output: 11                  | Program output: 72                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output: 0123456789101112131415161718192021222324252627282930313233343536
Correct output: 59                  | Program output: 75                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 65                 
Correct output: 11                  | Program output: 35                 
Correct output: 0                   | Program output: 39                 
Correct output: -75                 | Program output: 33                 
Correct output: -94                 | Program output: -94                
Correct output: -63                 | Program output: -17                
Correct output: -52                 | Program output: -3                 
Correct output: -74                 | Program output: 91                 
Correct output: -69                 | Program output: -43                
Correct output: -95                 | Program output: -9                 
Correct output: -7                  | Program output: -7                 
Correct output: -93                 | Program output: -33                
Correct output: 12                  | Program output: 73                 
Correct output: -100                | Program output: -62                
Correct output: -22                 | Program output: 60                 
Correct output: -68                 | Program output: -50                
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: -10                
Correct output: -69                 | Program output: 96                 
Correct output: -43                 | Program output: 60                 
Correct output: -54                 | Program output: -15                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: 46                 
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: -91                
Correct output: 13                  | Program output: 21                 
Correct output: -93                 | Program output: -13                
Correct output: -76                 | Program output: -76                
Correct output: -30                 | Program output: -30                
Correct output: 14                  | Program output: 38                 
Correct output: -80                 | Program output: -3                 
Correct output: -98                 | Program output: -98                
Correct output: -52                 | Program output: -52                
Correct output: -72                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -90                 | Program output: -90                
Correct output: -71                 | Program output: -39                
Correct output: -5                  | Program output: 78                 
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -61                
Correct output: 7                   | Program output: 11                 
Correct output: -99                 | Program output: -99                
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: -56                
Correct output: -95                 | Program output: -8                 
Correct output: -73                 | Program output: -73                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: 62                 
Correct output: -95                 | Program output: -53                
Correct output: -57                 | Program output: -57                
Correct output: -65                 | Program output: 2                  
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: 83                 
Correct output: -91                 | Program output: -1                 
Correct output: -83                 | Program output: -42                
Correct output: -95                 | Program output: -74                
Correct output: -20                 | Program output: -20                
Correct output: -46                 | Program output: 17                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_min} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_994} {:close 0, :instruction in2})
Lexicase best program: (in3 boolean_invert_second_then_and in3 boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2)
Lexicase best errors: [0 0 0 0 1 0 0 0 0 1]
Lexicase best number of elite cases: 10
Lexicase best total error: 2
Lexicase best mean error: 0.2
Lexicase best size: 33
Percent parens: 0.182
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_min} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_994} {:close 0, :instruction in2})
Zero cases best program: (in3 boolean_invert_second_then_and in3 boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2)
Zero cases best errors: [0 0 0 0 1 0 0 0 0 1]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 8
Zero cases best total error: 2
Zero cases best mean error: 0.2
Zero cases best size: 33
Percent parens: 0.182
--- Lexicase Population Statistics ---
Count of elite individuals by case: (752 750 751 336 1000 336 752 336 926 1000)
Population mean number of elite cases: 6.94
Count of perfect (error zero) individuals by case: (752 750 751 336 0 336 752 336 926 0)
Population mean number of perfect (error zero) cases: 4.94
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_stackdepth} {:close 0, :instruction exec_empty} {:close 0, :instruction in2} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_rot} {:close 0, :instruction exec_swap} {:close 0, :instruction boolean_dup_times})
Best program: (in4 boolean_shove in3 boolean_invert_second_then_and in3 boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_stackdepth exec_empty in2 boolean_pop boolean_rot exec_swap (boolean_dup_times) ())))
Errors: [0 0 0 0 1 0 0 0 0 1]
Total: 2
Mean: 0.2
Genome size: 18
Size: 24
Percent parens: 0.250
--- Population Statistics ---
Average total errors in population: 5.061
Median total errors in population: 5
Error averages by case: (0.248 0.25 0.249 0.664 1.0 0.664 0.248 0.664 0.074 1.0)
Error minima by case: (0 0 0 0 1 0 0 0 0 1)
Average genome size in population (length): 25.32
Average program size in population (points): 34.165
Average percent parens in population: 0.261
Minimum age in population: 4.0
Maximum age in population: 7.75
Average age in population: 6.02
Median age in population: 6.0
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 73
Genome diversity (% unique genomes):	 0.462
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 75
Syntactic diversity (% unique Push programs):	 0.448
Total error diversity:				 0.007
Error (vector) diversity:			 0.012
Behavioral diversity:				 0.041
--- Run Statistics ---
Number of program evaluations used so far: 5000
Number of point (instruction) evaluations so far: 2728985
--- Timings ---
Current time: 1559584158085 milliseconds
Total Time:          13.2 seconds
Initialization:       0.1 seconds,  0.8%
Reproduction:         8.1 seconds, 61.3%
Fitness Testing:      4.1 seconds, 31.3%
Report:               0.9 seconds,  6.6%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 4
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 5
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 5
;;******************************
;; -*- Smallest problem report - generation 5
Test total error for best: 540
Test mean error for best: 0.54000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -53                 | Program output: 73                 
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -24                
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 70                 
Correct output: 7                   | Program output: 21                 
Correct output: 1                   | Program output: 1                  
Correct output: 3                   | Program output: 49                 
Correct output: 7                   | Program output: 7                  
Correct output: 32                  | Program output: 99                 
Correct output: 9                   | Program output: 9                  
Correct output: 8                   | Program output: 8                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 24                  | Program output: 24                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 38                 
Correct output: 1                   | Program output: 0123456789101112131415161718192021222324252627282930313233343536
Correct output: 59                  | Program output: 59                 
Correct output: 42                  | Program output: 97                 
Correct output: 13                  | Program output: 31                 
Correct output: 30                  | Program output: 95                 
Correct output: 11                  | Program output: 50                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: 97                 
Correct output: -94                 | Program output: -33                
Correct output: -63                 | Program output: -17                
Correct output: -52                 | Program output: -3                 
Correct output: -74                 | Program output: 63                 
Correct output: -69                 | Program output: -43                
Correct output: -95                 | Program output: -9                 
Correct output: -7                  | Program output: -7                 
Correct output: -93                 | Program output: -33                
Correct output: 12                  | Program output: 12                 
Correct output: -100                | Program output: -62                
Correct output: -22                 | Program output: -22                
Correct output: -68                 | Program output: -50                
Correct output: -76                 | Program output: 66                 
Correct output: -10                 | Program output: -10                
Correct output: -69                 | Program output: -69                
Correct output: -43                 | Program output: -43                
Correct output: -54                 | Program output: -15                
Correct output: -78                 | Program output: 92                 
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -34                
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: -93                
Correct output: 13                  | Program output: 13                 
Correct output: -93                 | Program output: -13                
Correct output: -76                 | Program output: -76                
Correct output: -30                 | Program output: -30                
Correct output: 14                  | Program output: 56                 
Correct output: -80                 | Program output: -3                 
Correct output: -98                 | Program output: -98                
Correct output: -52                 | Program output: 0                  
Correct output: -72                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -90                 | Program output: -90                
Correct output: -71                 | Program output: -39                
Correct output: -5                  | Program output: 46                 
Correct output: -65                 | Program output: -52                
Correct output: -91                 | Program output: 14                 
Correct output: -26                 | Program output: 32                 
Correct output: -63                 | Program output: -63                
Correct output: 7                   | Program output: 7                  
Correct output: -99                 | Program output: -99                
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: -56                
Correct output: -95                 | Program output: -78                
Correct output: -73                 | Program output: -26                
Correct output: -68                 | Program output: 77                 
Correct output: -72                 | Program output: -72                
Correct output: -95                 | Program output: -53                
Correct output: -57                 | Program output: -57                
Correct output: -65                 | Program output: -37                
Correct output: -98                 | Program output: 64                 
Correct output: 8                   | Program output: 83                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -91                 | Program output: -1                 
Correct output: -83                 | Program output: -42                
Correct output: -95                 | Program output: -74                
Correct output: -20                 | Program output: -20                
Correct output: -46                 | Program output: -46                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_min} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_994} {:close 0, :instruction in2} {:close 0, :instruction tagged_291} {:close 0, :instruction integer_add} {:close 0, :instruction integer_pop})
Lexicase best program: (in4 boolean_shove in3 boolean_invert_second_then_and in3 boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 integer_add integer_pop)
Lexicase best errors: [0 0 1 0 0 0 1 1 0 0]
Lexicase best number of elite cases: 7
Lexicase best total error: 3
Lexicase best mean error: 0.3
Lexicase best size: 38
Percent parens: 0.158
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_min} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_994} {:close 0, :instruction in2} {:close 0, :instruction tagged_291} {:close 0, :instruction integer_add} {:close 0, :instruction integer_pop})
Zero cases best program: (in4 boolean_shove in3 boolean_invert_second_then_and in3 boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 integer_add integer_pop)
Zero cases best errors: [0 0 1 0 0 0 1 1 0 0]
Zero cases best number of elite cases: 7
Zero cases best number of zero cases: 7
Zero cases best total error: 3
Zero cases best mean error: 0.3
Zero cases best size: 38
Percent parens: 0.158
--- Lexicase Population Statistics ---
Count of elite individuals by case: (3 940 870 4 7 3 874 17 3 3)
Population mean number of elite cases: 2.72
Count of perfect (error zero) individuals by case: (3 940 870 4 7 3 874 17 3 3)
Population mean number of perfect (error zero) cases: 2.72
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_y_when_autoconstructing} {:close 0, :instruction in2} {:close 1, :instruction integer_mult} {:close 0, :instruction in2} {:close 0, :instruction boolean_pop} {:close 0, :instruction boolean_rot} {:close 0, :instruction in4} {:close 0, :instruction boolean_dup_times})
Best program: (in4 boolean_shove in3 boolean_invert_second_then_and in3 boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_y_when_autoconstructing (in2 integer_mult) in2 boolean_pop boolean_rot in4 boolean_dup_times))
Errors: [0 0 1 0 0 0 1 1 0 0]
Total: 3
Mean: 0.3
Genome size: 18
Size: 22
Percent parens: 0.182
--- Population Statistics ---
Average total errors in population: 7.276
Median total errors in population: 7
Error averages by case: (0.997 0.06 0.13 0.996 0.993 0.997 0.126 0.983 0.997 0.997)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 24.207
Average program size in population (points): 30.765
Average percent parens in population: 0.218
Minimum age in population: 5.5
Maximum age in population: 9.3125
Average age in population: 7.6674375
Median age in population: 7.75
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 132
Genome diversity (% unique genomes):	 0.328
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 138
Syntactic diversity (% unique Push programs):	 0.309
Total error diversity:				 0.006
Error (vector) diversity:			 0.014
Behavioral diversity:				 0.045
--- Run Statistics ---
Number of program evaluations used so far: 6000
Number of point (instruction) evaluations so far: 3590783
--- Timings ---
Current time: 1559584161088 milliseconds
Total Time:          16.2 seconds
Initialization:       0.1 seconds,  0.6%
Reproduction:        10.1 seconds, 62.4%
Fitness Testing:      4.9 seconds, 30.1%
Report:               1.1 seconds,  6.9%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 5
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 6
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 6
;;******************************
;; -*- Smallest problem report - generation 6
Test total error for best: 470
Test mean error for best: 0.47000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: -44                
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -24                
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 45                 
Correct output: 7                   | Program output: 67                 
Correct output: 1                   | Program output: 15                 
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 15                 
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 12                 
Correct output: 8                   | Program output: 59                 
Correct output: 2                   | Program output: 45                 
Correct output: 0                   | Program output: 54                 
Correct output: 24                  | Program output: 97                 
Correct output: 11                  | Program output: 72                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output:                    
Correct output: 59                  | Program output: 75                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 65                 
Correct output: 11                  | Program output: 35                 
Correct output: 0                   | Program output: 39                 
Correct output: -75                 | Program output: 33                 
Correct output: -94                 | Program output: -94                
Correct output: -63                 | Program output: -17                
Correct output: -52                 | Program output: -3                 
Correct output: -74                 | Program output: 91                 
Correct output: -69                 | Program output: -69                
Correct output: -95                 | Program output: -22                
Correct output: -7                  | Program output: -7                 
Correct output: -93                 | Program output: -93                
Correct output: 12                  | Program output: 73                 
Correct output: -100                | Program output: -62                
Correct output: -22                 | Program output: 60                 
Correct output: -68                 | Program output: -68                
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: -10                
Correct output: -69                 | Program output: 96                 
Correct output: -43                 | Program output: 60                 
Correct output: -54                 | Program output: -15                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -34                
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: -91                
Correct output: 13                  | Program output: 21                 
Correct output: -93                 | Program output: -75                
Correct output: -76                 | Program output: -76                
Correct output: -30                 | Program output: -30                
Correct output: 14                  | Program output: 38                 
Correct output: -80                 | Program output: -44                
Correct output: -98                 | Program output: -98                
Correct output: -52                 | Program output: -52                
Correct output: -72                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -90                 | Program output: -90                
Correct output: -71                 | Program output: -39                
Correct output: -5                  | Program output: 78                 
Correct output: -65                 | Program output: -65                
Correct output: -91                 | Program output: -91                
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -61                
Correct output: 7                   | Program output: 11                 
Correct output: -99                 | Program output: -99                
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: -56                
Correct output: -95                 | Program output: -8                 
Correct output: -73                 | Program output: -73                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: 62                 
Correct output: -95                 | Program output: -69                
Correct output: -57                 | Program output: -57                
Correct output: -65                 | Program output: 2                  
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: 83                 
Correct output: -91                 | Program output: -91                
Correct output: -83                 | Program output: -42                
Correct output: -95                 | Program output: -82                
Correct output: -20                 | Program output: -20                
Correct output: -46                 | Program output: 17                 
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_min} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_994} {:close 0, :instruction in2} {:close 0, :instruction tagged_291} {:close 0, :instruction integer_add} {:close 0, :instruction in2})
Lexicase best program: (in4 boolean_shove in3 integer_min in3 boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 integer_add in2)
Lexicase best errors: [0 0 1 0 0 0 1 1 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 4
Lexicase best mean error: 0.4
Lexicase best size: 38
Percent parens: 0.158
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_min} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_994} {:close 0, :instruction in2} {:close 0, :instruction tagged_291} {:close 0, :instruction integer_add} {:close 0, :instruction in2})
Zero cases best program: (in4 boolean_shove in3 integer_min in3 boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 integer_add in2)
Zero cases best errors: [0 0 1 0 0 0 1 1 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 6
Zero cases best total error: 4
Zero cases best mean error: 0.4
Zero cases best size: 38
Percent parens: 0.158
--- Lexicase Population Statistics ---
Count of elite individuals by case: (948 602 652 600 220 600 1000 1000 1 602)
Population mean number of elite cases: 6.22
Count of perfect (error zero) individuals by case: (948 602 652 600 220 600 0 0 1 602)
Population mean number of perfect (error zero) cases: 4.22
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_min} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_994} {:close 0, :instruction in2} {:close 0, :instruction tagged_291} {:close 0, :instruction integer_add} {:close 0, :instruction in2})
Best program: (in4 boolean_shove in3 integer_min in3 boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 integer_add in2)
Errors: [0 0 1 0 0 0 1 1 1 0]
Total: 4
Mean: 0.4
Genome size: 32
Size: 38
Percent parens: 0.158
--- Population Statistics ---
Average total errors in population: 5.775
Median total errors in population: 4
Error averages by case: (0.052 0.398 0.348 0.4 0.78 0.4 1.0 1.0 0.999 0.398)
Error minima by case: (0 0 0 0 0 0 1 1 0 0)
Average genome size in population (length): 21.24
Average program size in population (points): 25.757
Average percent parens in population: 0.185
Minimum age in population: 8.6875
Maximum age in population: 11.1875
Average age in population: 10.05384375
Median age in population: 10.1875
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 293
Genome diversity (% unique genomes):	 0.292
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 303
Syntactic diversity (% unique Push programs):	 0.277
Total error diversity:				 0.006
Error (vector) diversity:			 0.01
Behavioral diversity:				 0.035
--- Run Statistics ---
Number of program evaluations used so far: 7000
Number of point (instruction) evaluations so far: 4423064
--- Timings ---
Current time: 1559584164152 milliseconds
Total Time:          18.8 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        11.8 seconds, 62.6%
Fitness Testing:      5.6 seconds, 29.7%
Report:               1.3 seconds,  7.2%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 6
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 7
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 7
;;******************************
;; -*- Smallest problem report - generation 7
Test total error for best: 540
Test mean error for best: 0.54000
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -7                 
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -53                 | Program output: 73                 
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: 59                 
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -24                
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 70                 
Correct output: 7                   | Program output: 21                 
Correct output: 1                   | Program output: 1                  
Correct output: 3                   | Program output: 49                 
Correct output: 7                   | Program output: 7                  
Correct output: 32                  | Program output: 99                 
Correct output: 9                   | Program output: 9                  
Correct output: 8                   | Program output: 8                  
Correct output: 2                   | Program output: 2                  
Correct output: 0                   | Program output: 0                  
Correct output: 24                  | Program output: 24                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 38                 
Correct output: 1                   | Program output: 0123456789101112131415161718192021222324252627282930313233343536
Correct output: 59                  | Program output: 59                 
Correct output: 42                  | Program output: 97                 
Correct output: 13                  | Program output: 31                 
Correct output: 30                  | Program output: 95                 
Correct output: 11                  | Program output: 50                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: 97                 
Correct output: -94                 | Program output: -33                
Correct output: -63                 | Program output: -17                
Correct output: -52                 | Program output: -3                 
Correct output: -74                 | Program output: 63                 
Correct output: -69                 | Program output: -43                
Correct output: -95                 | Program output: -9                 
Correct output: -7                  | Program output: -7                 
Correct output: -93                 | Program output: -33                
Correct output: 12                  | Program output: 12                 
Correct output: -100                | Program output: -62                
Correct output: -22                 | Program output: -22                
Correct output: -68                 | Program output: -50                
Correct output: -76                 | Program output: 66                 
Correct output: -10                 | Program output: -10                
Correct output: -69                 | Program output: -69                
Correct output: -43                 | Program output: -43                
Correct output: -54                 | Program output: -15                
Correct output: -78                 | Program output: 92                 
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -27                
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: -93                
Correct output: 13                  | Program output: 13                 
Correct output: -93                 | Program output: -13                
Correct output: -76                 | Program output: -76                
Correct output: -30                 | Program output: -30                
Correct output: 14                  | Program output: 56                 
Correct output: -80                 | Program output: -3                 
Correct output: -98                 | Program output: -98                
Correct output: -52                 | Program output: 0                  
Correct output: -72                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -90                 | Program output: -90                
Correct output: -71                 | Program output: -39                
Correct output: -5                  | Program output: 46                 
Correct output: -65                 | Program output: -52                
Correct output: -91                 | Program output: 14                 
Correct output: -26                 | Program output: 32                 
Correct output: -63                 | Program output: -63                
Correct output: 7                   | Program output: 7                  
Correct output: -99                 | Program output: -99                
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: -56                
Correct output: -95                 | Program output: -78                
Correct output: -73                 | Program output: -26                
Correct output: -68                 | Program output: 77                 
Correct output: -72                 | Program output: -72                
Correct output: -95                 | Program output: -53                
Correct output: -57                 | Program output: -57                
Correct output: -65                 | Program output: -37                
Correct output: -98                 | Program output: 64                 
Correct output: 8                   | Program output: 83                 
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -91                 | Program output: -1                 
Correct output: -83                 | Program output: -42                
Correct output: -95                 | Program output: -74                
Correct output: -20                 | Program output: -20                
Correct output: -46                 | Program output: -46                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_min} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_994} {:close 0, :instruction in2} {:close 0, :instruction tagged_291} {:close 0, :instruction integer_add} {:close 0, :instruction integer_pop})
Lexicase best program: (in4 boolean_shove in3 boolean_invert_second_then_and in3 boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 integer_add integer_pop)
Lexicase best errors: [1 0 0 0 1 1 0 1 1 0]
Lexicase best number of elite cases: 8
Lexicase best total error: 5
Lexicase best mean error: 0.5
Lexicase best size: 38
Percent parens: 0.158
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_min} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_994} {:close 0, :instruction in2} {:close 0, :instruction tagged_291} {:close 0, :instruction integer_add} {:close 0, :instruction integer_pop})
Zero cases best program: (in4 boolean_shove in3 boolean_invert_second_then_and in3 boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 integer_add integer_pop)
Zero cases best errors: [1 0 0 0 1 1 0 1 1 0]
Zero cases best number of elite cases: 8
Zero cases best number of zero cases: 5
Zero cases best total error: 5
Zero cases best mean error: 0.5
Zero cases best size: 38
Percent parens: 0.158
--- Lexicase Population Statistics ---
Count of elite individuals by case: (1000 406 821 403 357 1000 403 452 1000 406)
Population mean number of elite cases: 6.25
Count of perfect (error zero) individuals by case: (0 406 821 403 357 0 403 452 0 406)
Population mean number of perfect (error zero) cases: 3.25
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction boolean_invert_second_then_and} {:close 0, :instruction in3} {:close 0, :instruction boolean_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 1, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_min} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_994} {:close 0, :instruction in2} {:close 0, :instruction tagged_291} {:close 0, :instruction integer_add} {:close 0, :instruction integer_pop})
Best program: (in4 boolean_shove in3 boolean_invert_second_then_and in3 boolean_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 integer_add integer_pop)
Errors: [1 0 0 0 1 1 0 1 1 0]
Total: 5
Mean: 0.5
Genome size: 32
Size: 38
Percent parens: 0.158
--- Population Statistics ---
Average total errors in population: 6.752
Median total errors in population: 7
Error averages by case: (1.0 0.594 0.179 0.597 0.643 1.0 0.597 0.548 1.0 0.594)
Error minima by case: (1 0 0 0 0 1 0 0 1 0)
Average genome size in population (length): 27.325
Average program size in population (points): 32.835
Average percent parens in population: 0.170
Minimum age in population: 9.6875
Maximum age in population: 12.84375
Average age in population: 11.259859375
Median age in population: 11.359375
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 168
Genome diversity (% unique genomes):	 0.428
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 184
Syntactic diversity (% unique Push programs):	 0.402
Total error diversity:				 0.006
Error (vector) diversity:			 0.013
Behavioral diversity:				 0.051
--- Run Statistics ---
Number of program evaluations used so far: 8000
Number of point (instruction) evaluations so far: 5582303
--- Timings ---
Current time: 1559584167920 milliseconds
Total Time:          22.6 seconds
Initialization:       0.1 seconds,  0.5%
Reproduction:        13.9 seconds, 61.5%
Fitness Testing:      6.6 seconds, 29.1%
Report:               2.0 seconds,  9.0%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 7
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Producing offspring...
Installing next generation...
Processing generation: 8
Computing errors... 
Done computing errors.
Preserving frontier... 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- Report at generation 8
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 391
Test mean error for best: 0.39100
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 1
Test Case    9 | Error: 0
Test Case   10 | Error: 1
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 1
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 1
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 1
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 1
Test Case   27 | Error: 0
Test Case   28 | Error: 1
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 1
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 1
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 1
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 1
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 1
Test Case   55 | Error: 0
Test Case   56 | Error: 1
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 1
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 1
Test Case   65 | Error: 1
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 1
Test Case   71 | Error: 1
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 1
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 1
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 1
Test Case   85 | Error: 1
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 1
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 1
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 1
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 1
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 1
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 1
Test Case  201 | Error: 1
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 1
Test Case  208 | Error: 1
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 1
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 1
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 1
Test Case  221 | Error: 1
Test Case  222 | Error: 1
Test Case  223 | Error: 1
Test Case  224 | Error: 1
Test Case  225 | Error: 0
Test Case  226 | Error: 1
Test Case  227 | Error: 0
Test Case  228 | Error: 1
Test Case  229 | Error: 1
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 1
Test Case  233 | Error: 0
Test Case  234 | Error: 1
Test Case  235 | Error: 1
Test Case  236 | Error: 1
Test Case  237 | Error: 1
Test Case  238 | Error: 1
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 1
Test Case  247 | Error: 1
Test Case  248 | Error: 1
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 1
Test Case  252 | Error: 0
Test Case  253 | Error: 1
Test Case  254 | Error: 1
Test Case  255 | Error: 1
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 1
Test Case  261 | Error: 1
Test Case  262 | Error: 1
Test Case  263 | Error: 1
Test Case  264 | Error: 0
Test Case  265 | Error: 1
Test Case  266 | Error: 0
Test Case  267 | Error: 1
Test Case  268 | Error: 0
Test Case  269 | Error: 1
Test Case  270 | Error: 0
Test Case  271 | Error: 1
Test Case  272 | Error: 1
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 1
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 1
Test Case  279 | Error: 1
Test Case  280 | Error: 1
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 1
Test Case  285 | Error: 1
Test Case  286 | Error: 0
Test Case  287 | Error: 1
Test Case  288 | Error: 1
Test Case  289 | Error: 1
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 1
Test Case  293 | Error: 1
Test Case  294 | Error: 1
Test Case  295 | Error: 1
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 1
Test Case  299 | Error: 0
Test Case  300 | Error: 1
Test Case  301 | Error: 0
Test Case  302 | Error: 1
Test Case  303 | Error: 0
Test Case  304 | Error: 1
Test Case  305 | Error: 1
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 1
Test Case  309 | Error: 1
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 1
Test Case  313 | Error: 0
Test Case  314 | Error: 1
Test Case  315 | Error: 1
Test Case  316 | Error: 0
Test Case  317 | Error: 1
Test Case  318 | Error: 0
Test Case  319 | Error: 1
Test Case  320 | Error: 0
Test Case  321 | Error: 1
Test Case  322 | Error: 1
Test Case  323 | Error: 0
Test Case  324 | Error: 1
Test Case  325 | Error: 0
Test Case  326 | Error: 1
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 1
Test Case  330 | Error: 1
Test Case  331 | Error: 1
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 1
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 1
Test Case  344 | Error: 1
Test Case  345 | Error: 1
Test Case  346 | Error: 1
Test Case  347 | Error: 1
Test Case  348 | Error: 1
Test Case  349 | Error: 1
Test Case  350 | Error: 0
Test Case  351 | Error: 1
Test Case  352 | Error: 0
Test Case  353 | Error: 1
Test Case  354 | Error: 1
Test Case  355 | Error: 1
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 1
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 1
Test Case  364 | Error: 1
Test Case  365 | Error: 1
Test Case  366 | Error: 0
Test Case  367 | Error: 1
Test Case  368 | Error: 1
Test Case  369 | Error: 0
Test Case  370 | Error: 1
Test Case  371 | Error: 1
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 1
Test Case  378 | Error: 0
Test Case  379 | Error: 1
Test Case  380 | Error: 1
Test Case  381 | Error: 0
Test Case  382 | Error: 1
Test Case  383 | Error: 0
Test Case  384 | Error: 1
Test Case  385 | Error: 0
Test Case  386 | Error: 1
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 1
Test Case  390 | Error: 1
Test Case  391 | Error: 1
Test Case  392 | Error: 1
Test Case  393 | Error: 0
Test Case  394 | Error: 1
Test Case  395 | Error: 1
Test Case  396 | Error: 1
Test Case  397 | Error: 1
Test Case  398 | Error: 1
Test Case  399 | Error: 1
Test Case  400 | Error: 1
Test Case  401 | Error: 1
Test Case  402 | Error: 1
Test Case  403 | Error: 1
Test Case  404 | Error: 1
Test Case  405 | Error: 1
Test Case  406 | Error: 1
Test Case  407 | Error: 1
Test Case  408 | Error: 0
Test Case  409 | Error: 1
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 1
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 1
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 1
Test Case  428 | Error: 1
Test Case  429 | Error: 0
Test Case  430 | Error: 1
Test Case  431 | Error: 1
Test Case  432 | Error: 0
Test Case  433 | Error: 1
Test Case  434 | Error: 1
Test Case  435 | Error: 0
Test Case  436 | Error: 1
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 1
Test Case  443 | Error: 1
Test Case  444 | Error: 1
Test Case  445 | Error: 0
Test Case  446 | Error: 1
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 1
Test Case  450 | Error: 0
Test Case  451 | Error: 1
Test Case  452 | Error: 0
Test Case  453 | Error: 1
Test Case  454 | Error: 1
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 1
Test Case  459 | Error: 0
Test Case  460 | Error: 1
Test Case  461 | Error: 0
Test Case  462 | Error: 1
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 1
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 1
Test Case  469 | Error: 1
Test Case  470 | Error: 1
Test Case  471 | Error: 1
Test Case  472 | Error: 1
Test Case  473 | Error: 0
Test Case  474 | Error: 1
Test Case  475 | Error: 1
Test Case  476 | Error: 1
Test Case  477 | Error: 1
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 1
Test Case  481 | Error: 1
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 1
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 1
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 1
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 1
Test Case  502 | Error: 1
Test Case  503 | Error: 1
Test Case  504 | Error: 0
Test Case  505 | Error: 1
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 1
Test Case  509 | Error: 1
Test Case  510 | Error: 0
Test Case  511 | Error: 1
Test Case  512 | Error: 1
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 1
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 1
Test Case  521 | Error: 1
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 1
Test Case  525 | Error: 0
Test Case  526 | Error: 1
Test Case  527 | Error: 0
Test Case  528 | Error: 1
Test Case  529 | Error: 0
Test Case  530 | Error: 1
Test Case  531 | Error: 1
Test Case  532 | Error: 1
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 1
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 1
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 1
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 1
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 1
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 1
Test Case  571 | Error: 1
Test Case  572 | Error: 1
Test Case  573 | Error: 0
Test Case  574 | Error: 1
Test Case  575 | Error: 1
Test Case  576 | Error: 1
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 1
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 0
Test Case  591 | Error: 1
Test Case  592 | Error: 1
Test Case  593 | Error: 1
Test Case  594 | Error: 1
Test Case  595 | Error: 0
Test Case  596 | Error: 1
Test Case  597 | Error: 1
Test Case  598 | Error: 1
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 1
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 1
Test Case  607 | Error: 0
Test Case  608 | Error: 1
Test Case  609 | Error: 1
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 1
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 1
Test Case  617 | Error: 1
Test Case  618 | Error: 0
Test Case  619 | Error: 1
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 1
Test Case  625 | Error: 1
Test Case  626 | Error: 0
Test Case  627 | Error: 1
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 1
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 1
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 1
Test Case  644 | Error: 1
Test Case  645 | Error: 1
Test Case  646 | Error: 0
Test Case  647 | Error: 1
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 1
Test Case  651 | Error: 1
Test Case  652 | Error: 0
Test Case  653 | Error: 1
Test Case  654 | Error: 1
Test Case  655 | Error: 1
Test Case  656 | Error: 1
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 1
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 1
Test Case  672 | Error: 0
Test Case  673 | Error: 1
Test Case  674 | Error: 0
Test Case  675 | Error: 1
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 1
Test Case  680 | Error: 0
Test Case  681 | Error: 1
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 1
Test Case  688 | Error: 0
Test Case  689 | Error: 1
Test Case  690 | Error: 1
Test Case  691 | Error: 0
Test Case  692 | Error: 1
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 1
Test Case  696 | Error: 0
Test Case  697 | Error: 1
Test Case  698 | Error: 0
Test Case  699 | Error: 1
Test Case  700 | Error: 0
Test Case  701 | Error: 1
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 1
Test Case  705 | Error: 1
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 1
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 1
Test Case  712 | Error: 0
Test Case  713 | Error: 1
Test Case  714 | Error: 0
Test Case  715 | Error: 1
Test Case  716 | Error: 0
Test Case  717 | Error: 1
Test Case  718 | Error: 1
Test Case  719 | Error: 0
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 1
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 1
Test Case  729 | Error: 1
Test Case  730 | Error: 1
Test Case  731 | Error: 1
Test Case  732 | Error: 1
Test Case  733 | Error: 1
Test Case  734 | Error: 1
Test Case  735 | Error: 1
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 1
Test Case  739 | Error: 1
Test Case  740 | Error: 1
Test Case  741 | Error: 0
Test Case  742 | Error: 1
Test Case  743 | Error: 1
Test Case  744 | Error: 0
Test Case  745 | Error: 1
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 1
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 1
Test Case  757 | Error: 1
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 1
Test Case  762 | Error: 1
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 1
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 1
Test Case  770 | Error: 1
Test Case  771 | Error: 0
Test Case  772 | Error: 1
Test Case  773 | Error: 0
Test Case  774 | Error: 1
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 1
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 0
Test Case  786 | Error: 1
Test Case  787 | Error: 1
Test Case  788 | Error: 0
Test Case  789 | Error: 1
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 1
Test Case  794 | Error: 1
Test Case  795 | Error: 1
Test Case  796 | Error: 0
Test Case  797 | Error: 1
Test Case  798 | Error: 0
Test Case  799 | Error: 1
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 1
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 0
Test Case  816 | Error: 1
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 1
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 1
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 1
Test Case  830 | Error: 1
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 1
Test Case  834 | Error: 1
Test Case  835 | Error: 0
Test Case  836 | Error: 1
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 1
Test Case  846 | Error: 0
Test Case  847 | Error: 1
Test Case  848 | Error: 0
Test Case  849 | Error: 1
Test Case  850 | Error: 1
Test Case  851 | Error: 1
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 1
Test Case  856 | Error: 1
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 1
Test Case  861 | Error: 0
Test Case  862 | Error: 1
Test Case  863 | Error: 1
Test Case  864 | Error: 0
Test Case  865 | Error: 1
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 1
Test Case  873 | Error: 1
Test Case  874 | Error: 0
Test Case  875 | Error: 1
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 1
Test Case  882 | Error: 1
Test Case  883 | Error: 0
Test Case  884 | Error: 1
Test Case  885 | Error: 0
Test Case  886 | Error: 1
Test Case  887 | Error: 1
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 1
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 1
Test Case  900 | Error: 1
Test Case  901 | Error: 1
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 1
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 1
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 1
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 1
Test Case  923 | Error: 1
Test Case  924 | Error: 0
Test Case  925 | Error: 1
Test Case  926 | Error: 1
Test Case  927 | Error: 0
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 1
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 1
Test Case  938 | Error: 0
Test Case  939 | Error: 1
Test Case  940 | Error: 0
Test Case  941 | Error: 1
Test Case  942 | Error: 1
Test Case  943 | Error: 1
Test Case  944 | Error: 0
Test Case  945 | Error: 1
Test Case  946 | Error: 1
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 1
Test Case  950 | Error: 1
Test Case  951 | Error: 0
Test Case  952 | Error: 1
Test Case  953 | Error: 1
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 1
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 0
Test Case  963 | Error: 1
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 1
Test Case  967 | Error: 1
Test Case  968 | Error: 0
Test Case  969 | Error: 1
Test Case  970 | Error: 0
Test Case  971 | Error: 1
Test Case  972 | Error: 0
Test Case  973 | Error: 1
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 1
Test Case  979 | Error: 1
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 1
Test Case  996 | Error: 1
Test Case  997 | Error: 1
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: -44                
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -24                
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 45                 
Correct output: 7                   | Program output: 67                 
Correct output: 1                   | Program output:                    
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 7                  
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 9                  
Correct output: 8                   | Program output: 8                  
Correct output: 2                   | Program output:                    
Correct output: 0                   | Program output: 0                  
Correct output: 24                  | Program output: 97                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output:                    
Correct output: 59                  | Program output: 75                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 65                 
Correct output: 11                  | Program output: 35                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: 33                 
Correct output: -94                 | Program output: -33                
Correct output: -63                 | Program output: -17                
Correct output: -52                 | Program output: -3                 
Correct output: -74                 | Program output: 91                 
Correct output: -69                 | Program output: -69                
Correct output: -95                 | Program output: -22                
Correct output: -7                  | Program output: -7                 
Correct output: -93                 | Program output: -93                
Correct output: 12                  | Program output: 7373               
Correct output: -100                | Program output: -62                
Correct output: -22                 | Program output: -22                
Correct output: -68                 | Program output: -68                
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: -10                
Correct output: -69                 | Program output: -69                
Correct output: -43                 | Program output: -43                
Correct output: -54                 | Program output: -15                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -34                
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: -93                
Correct output: 13                  | Program output: 13                 
Correct output: -93                 | Program output: -75                
Correct output: -76                 | Program output: -76                
Correct output: -30                 | Program output: -30                
Correct output: 14                  | Program output: 38                 
Correct output: -80                 | Program output: -44                
Correct output: -98                 | Program output: -98                
Correct output: -52                 | Program output: 0                  
Correct output: -72                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -90                 | Program output: -90                
Correct output: -71                 | Program output: -39                
Correct output: -5                  | Program output: 78                 
Correct output: -65                 | Program output: -52                
Correct output: -91                 | Program output: 14                 
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -63                
Correct output: 7                   | Program output: 7                  
Correct output: -99                 | Program output: -99                
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: -56                
Correct output: -95                 | Program output: -78                
Correct output: -73                 | Program output: -26                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: -72                
Correct output: -95                 | Program output: -69                
Correct output: -57                 | Program output: -57                
Correct output: -65                 | Program output: -37                
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -91                 | Program output: -91                
Correct output: -83                 | Program output: -42                
Correct output: -95                 | Program output: -82                
Correct output: -20                 | Program output: -20                
Correct output: -46                 | Program output: -46                
;;******************************
--- Lexicase Program with Most Elite Cases Statistics ---
Lexicase best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction in3} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_yank} {:close 1, :instruction integer_min} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_994} {:close 0, :instruction in2} {:close 0, :instruction tagged_291} {:close 0, :instruction integer_add} {:close 0, :instruction in2})
Lexicase best program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add integer_gte exec_noop boolean_yank boolean_pop exec_yank integer_min) exec_noop boolean_pop tagged_994 in2 tagged_291 integer_add in2)
Lexicase best errors: [0 0 0 0 0 0 0 0 0 0]
Lexicase best number of elite cases: 10
Lexicase best total error: 0
Lexicase best mean error: 0.0
Lexicase best size: 37
Percent parens: 0.135
--- Lexicase Program with Most Zero Cases Statistics ---
Zero cases best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction in3} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction integer_add} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_yank} {:close 1, :instruction integer_min} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_994} {:close 0, :instruction in2} {:close 0, :instruction tagged_291} {:close 0, :instruction integer_add} {:close 0, :instruction in2})
Zero cases best program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (integer_add integer_gte exec_noop boolean_yank boolean_pop exec_yank integer_min) exec_noop boolean_pop tagged_994 in2 tagged_291 integer_add in2)
Zero cases best errors: [0 0 0 0 0 0 0 0 0 0]
Zero cases best number of elite cases: 10
Zero cases best number of zero cases: 10
Zero cases best total error: 0
Zero cases best mean error: 0.0
Zero cases best size: 37
Percent parens: 0.135
--- Lexicase Population Statistics ---
Count of elite individuals by case: (520 403 521 731 734 704 733 957 733 733)
Population mean number of elite cases: 6.77
Count of perfect (error zero) individuals by case: (520 403 521 731 734 704 733 957 733 733)
Population mean number of perfect (error zero) cases: 6.77
--- Best Program (based on total-error) Statistics ---
Best genome: ({:close 0, :instruction in4} {:close 0, :instruction boolean_shove} {:close 0, :instruction in3} {:close 0, :instruction integer_min} {:close 0, :instruction in3} {:close 0, :instruction integer_yankdup} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*while} {:close 0, :instruction exec_yank} {:close 2, :instruction print_integer} {:close 0, :instruction exec_do*count} {:close 0, :instruction exec_do*while} {:close 0, :instruction boolean_swap} {:close 0, :instruction exec_empty} {:close 0, :instruction boolean_dup} {:close 1, :instruction integer_flush} {:close 1, :instruction boolean_shove} {:close 0, :instruction boolean_xor} {:close 0, :instruction exec_y} {:close 0, :instruction boolean_shove} {:close 0, :instruction integer_gte} {:close 0, :instruction exec_noop} {:close 0, :instruction boolean_yank} {:close 0, :instruction boolean_pop} {:close 0, :instruction exec_pop} {:close 1, :instruction integer_min} {:close 1, :instruction exec_noop} {:close 0, :instruction boolean_pop} {:close 0, :instruction tagged_994} {:close 0, :instruction in2} {:close 0, :instruction tagged_291} {:close 0, :instruction print_boolean} {:close 0, :instruction in2})
Best program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (boolean_shove integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 print_boolean in2)
Errors: [0 0 0 0 0 0 0 0 0 0]
Total: 0
Mean: 0.0
Genome size: 35
Size: 42
Percent parens: 0.167
--- Population Statistics ---
Average total errors in population: 3.231
Median total errors in population: 2
Error averages by case: (0.48 0.597 0.479 0.269 0.266 0.296 0.267 0.043 0.267 0.267)
Error minima by case: (0 0 0 0 0 0 0 0 0 0)
Average genome size in population (length): 27.666
Average program size in population (points): 33.243
Average percent parens in population: 0.170
Minimum age in population: 10.6875
Maximum age in population: 14.5546875
Average age in population: 12.77796875
Median age in population: 12.90625
Minimum grain-size in population: 1.0
Maximum grain-size in population: 1.0
Average grain-size in population: 1.0
Median grain-size in population: 1.0
--- Population Diversity Statistics ---
Min copy number of one genome: 1
Median copy number of one genome: 1
Max copy number of one genome: 128
Genome diversity (% unique genomes):	 0.493
Min copy number of one Push program: 1
Median copy number of one Push program: 1
Max copy number of one Push program: 131
Syntactic diversity (% unique Push programs):	 0.467
Total error diversity:				 0.011
Error (vector) diversity:			 0.023
Behavioral diversity:				 0.056
--- Run Statistics ---
Number of program evaluations used so far: 9000
Number of point (instruction) evaluations so far: 6850985
--- Timings ---
Current time: 1559584171508 milliseconds
Total Time:          26.1 seconds
Initialization:       0.1 seconds,  0.4%
Reproduction:        15.7 seconds, 60.1%
Fitness Testing:      7.6 seconds, 29.1%
Report:               2.7 seconds, 10.4%
Other:                0.0 seconds,  0.0%
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; -*- End of report for generation 8
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


SUCCESS at generation 8
Successful program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (boolean_shove integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 print_boolean in2)
Errors: [0 0 0 0 0 0 0 0 0 0]
Total error: 0
History: null
Size: 42


Auto-simplifying with starting size: 42
step: 0
program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (boolean_shove integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 print_boolean in2)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 500
program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (boolean_shove integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 print_boolean in2)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 1000
program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (boolean_shove integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 print_boolean in2)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 1500
program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (boolean_shove integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 print_boolean in2)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 2000
program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (boolean_shove integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 print_boolean in2)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 2500
program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (boolean_shove integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 print_boolean in2)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 3000
program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (boolean_shove integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 print_boolean in2)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 3500
program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (boolean_shove integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 print_boolean in2)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 4000
program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (boolean_shove integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 print_boolean in2)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 4500
program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (boolean_shove integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 print_boolean in2)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

step: 5000
program: (in4 boolean_shove in3 integer_min in3 integer_yankdup exec_do*while (exec_yank print_integer) exec_do*while (exec_yank print_integer) exec_do*count (exec_do*while (boolean_swap exec_empty boolean_dup integer_flush) boolean_shove) boolean_xor exec_y (boolean_shove integer_gte exec_noop boolean_yank boolean_pop exec_pop (integer_min) exec_noop) boolean_pop tagged_994 in2 tagged_291 print_boolean in2)
errors: [0 0 0 0 0 0 0 0 0 0]
total: 0
size: 42

;;******************************
;; Problem-Specific Report of Simplified Solution
;;******************************
;; -*- Smallest problem report - generation 8
Test total error for best: 391
Test mean error for best: 0.39100
Test Case    0 | Error: 0
Test Case    1 | Error: 0
Test Case    2 | Error: 0
Test Case    3 | Error: 0
Test Case    4 | Error: 0
Test Case    5 | Error: 0
Test Case    6 | Error: 0
Test Case    7 | Error: 0
Test Case    8 | Error: 1
Test Case    9 | Error: 0
Test Case   10 | Error: 1
Test Case   11 | Error: 0
Test Case   12 | Error: 0
Test Case   13 | Error: 0
Test Case   14 | Error: 0
Test Case   15 | Error: 0
Test Case   16 | Error: 1
Test Case   17 | Error: 0
Test Case   18 | Error: 0
Test Case   19 | Error: 1
Test Case   20 | Error: 0
Test Case   21 | Error: 0
Test Case   22 | Error: 0
Test Case   23 | Error: 1
Test Case   24 | Error: 0
Test Case   25 | Error: 0
Test Case   26 | Error: 1
Test Case   27 | Error: 0
Test Case   28 | Error: 1
Test Case   29 | Error: 0
Test Case   30 | Error: 0
Test Case   31 | Error: 0
Test Case   32 | Error: 0
Test Case   33 | Error: 1
Test Case   34 | Error: 0
Test Case   35 | Error: 0
Test Case   36 | Error: 0
Test Case   37 | Error: 0
Test Case   38 | Error: 0
Test Case   39 | Error: 1
Test Case   40 | Error: 0
Test Case   41 | Error: 0
Test Case   42 | Error: 0
Test Case   43 | Error: 1
Test Case   44 | Error: 0
Test Case   45 | Error: 0
Test Case   46 | Error: 0
Test Case   47 | Error: 0
Test Case   48 | Error: 0
Test Case   49 | Error: 1
Test Case   50 | Error: 0
Test Case   51 | Error: 0
Test Case   52 | Error: 0
Test Case   53 | Error: 0
Test Case   54 | Error: 1
Test Case   55 | Error: 0
Test Case   56 | Error: 1
Test Case   57 | Error: 0
Test Case   58 | Error: 0
Test Case   59 | Error: 0
Test Case   60 | Error: 1
Test Case   61 | Error: 0
Test Case   62 | Error: 0
Test Case   63 | Error: 0
Test Case   64 | Error: 1
Test Case   65 | Error: 1
Test Case   66 | Error: 0
Test Case   67 | Error: 0
Test Case   68 | Error: 0
Test Case   69 | Error: 0
Test Case   70 | Error: 1
Test Case   71 | Error: 1
Test Case   72 | Error: 0
Test Case   73 | Error: 0
Test Case   74 | Error: 0
Test Case   75 | Error: 1
Test Case   76 | Error: 0
Test Case   77 | Error: 0
Test Case   78 | Error: 0
Test Case   79 | Error: 1
Test Case   80 | Error: 0
Test Case   81 | Error: 0
Test Case   82 | Error: 1
Test Case   83 | Error: 0
Test Case   84 | Error: 1
Test Case   85 | Error: 1
Test Case   86 | Error: 0
Test Case   87 | Error: 0
Test Case   88 | Error: 1
Test Case   89 | Error: 0
Test Case   90 | Error: 0
Test Case   91 | Error: 1
Test Case   92 | Error: 0
Test Case   93 | Error: 0
Test Case   94 | Error: 0
Test Case   95 | Error: 0
Test Case   96 | Error: 1
Test Case   97 | Error: 0
Test Case   98 | Error: 0
Test Case   99 | Error: 0
Test Case  100 | Error: 0
Test Case  101 | Error: 0
Test Case  102 | Error: 1
Test Case  103 | Error: 0
Test Case  104 | Error: 0
Test Case  105 | Error: 0
Test Case  106 | Error: 0
Test Case  107 | Error: 0
Test Case  108 | Error: 0
Test Case  109 | Error: 0
Test Case  110 | Error: 0
Test Case  111 | Error: 0
Test Case  112 | Error: 0
Test Case  113 | Error: 0
Test Case  114 | Error: 0
Test Case  115 | Error: 0
Test Case  116 | Error: 0
Test Case  117 | Error: 0
Test Case  118 | Error: 0
Test Case  119 | Error: 0
Test Case  120 | Error: 0
Test Case  121 | Error: 0
Test Case  122 | Error: 0
Test Case  123 | Error: 0
Test Case  124 | Error: 0
Test Case  125 | Error: 0
Test Case  126 | Error: 0
Test Case  127 | Error: 0
Test Case  128 | Error: 0
Test Case  129 | Error: 0
Test Case  130 | Error: 0
Test Case  131 | Error: 0
Test Case  132 | Error: 0
Test Case  133 | Error: 0
Test Case  134 | Error: 0
Test Case  135 | Error: 0
Test Case  136 | Error: 0
Test Case  137 | Error: 0
Test Case  138 | Error: 0
Test Case  139 | Error: 0
Test Case  140 | Error: 0
Test Case  141 | Error: 0
Test Case  142 | Error: 0
Test Case  143 | Error: 1
Test Case  144 | Error: 0
Test Case  145 | Error: 0
Test Case  146 | Error: 0
Test Case  147 | Error: 0
Test Case  148 | Error: 0
Test Case  149 | Error: 0
Test Case  150 | Error: 0
Test Case  151 | Error: 0
Test Case  152 | Error: 0
Test Case  153 | Error: 0
Test Case  154 | Error: 0
Test Case  155 | Error: 0
Test Case  156 | Error: 0
Test Case  157 | Error: 0
Test Case  158 | Error: 0
Test Case  159 | Error: 0
Test Case  160 | Error: 0
Test Case  161 | Error: 0
Test Case  162 | Error: 0
Test Case  163 | Error: 0
Test Case  164 | Error: 0
Test Case  165 | Error: 0
Test Case  166 | Error: 0
Test Case  167 | Error: 0
Test Case  168 | Error: 0
Test Case  169 | Error: 0
Test Case  170 | Error: 0
Test Case  171 | Error: 0
Test Case  172 | Error: 0
Test Case  173 | Error: 0
Test Case  174 | Error: 0
Test Case  175 | Error: 0
Test Case  176 | Error: 0
Test Case  177 | Error: 0
Test Case  178 | Error: 0
Test Case  179 | Error: 0
Test Case  180 | Error: 0
Test Case  181 | Error: 0
Test Case  182 | Error: 0
Test Case  183 | Error: 0
Test Case  184 | Error: 0
Test Case  185 | Error: 0
Test Case  186 | Error: 0
Test Case  187 | Error: 0
Test Case  188 | Error: 0
Test Case  189 | Error: 0
Test Case  190 | Error: 0
Test Case  191 | Error: 0
Test Case  192 | Error: 0
Test Case  193 | Error: 0
Test Case  194 | Error: 0
Test Case  195 | Error: 0
Test Case  196 | Error: 0
Test Case  197 | Error: 0
Test Case  198 | Error: 0
Test Case  199 | Error: 0
Test Case  200 | Error: 1
Test Case  201 | Error: 1
Test Case  202 | Error: 0
Test Case  203 | Error: 0
Test Case  204 | Error: 0
Test Case  205 | Error: 0
Test Case  206 | Error: 0
Test Case  207 | Error: 1
Test Case  208 | Error: 1
Test Case  209 | Error: 0
Test Case  210 | Error: 0
Test Case  211 | Error: 0
Test Case  212 | Error: 0
Test Case  213 | Error: 0
Test Case  214 | Error: 1
Test Case  215 | Error: 0
Test Case  216 | Error: 0
Test Case  217 | Error: 1
Test Case  218 | Error: 0
Test Case  219 | Error: 0
Test Case  220 | Error: 1
Test Case  221 | Error: 1
Test Case  222 | Error: 1
Test Case  223 | Error: 1
Test Case  224 | Error: 1
Test Case  225 | Error: 0
Test Case  226 | Error: 1
Test Case  227 | Error: 0
Test Case  228 | Error: 1
Test Case  229 | Error: 1
Test Case  230 | Error: 0
Test Case  231 | Error: 0
Test Case  232 | Error: 1
Test Case  233 | Error: 0
Test Case  234 | Error: 1
Test Case  235 | Error: 1
Test Case  236 | Error: 1
Test Case  237 | Error: 1
Test Case  238 | Error: 1
Test Case  239 | Error: 0
Test Case  240 | Error: 0
Test Case  241 | Error: 0
Test Case  242 | Error: 0
Test Case  243 | Error: 0
Test Case  244 | Error: 0
Test Case  245 | Error: 0
Test Case  246 | Error: 1
Test Case  247 | Error: 1
Test Case  248 | Error: 1
Test Case  249 | Error: 1
Test Case  250 | Error: 0
Test Case  251 | Error: 1
Test Case  252 | Error: 0
Test Case  253 | Error: 1
Test Case  254 | Error: 1
Test Case  255 | Error: 1
Test Case  256 | Error: 1
Test Case  257 | Error: 0
Test Case  258 | Error: 0
Test Case  259 | Error: 0
Test Case  260 | Error: 1
Test Case  261 | Error: 1
Test Case  262 | Error: 1
Test Case  263 | Error: 1
Test Case  264 | Error: 0
Test Case  265 | Error: 1
Test Case  266 | Error: 0
Test Case  267 | Error: 1
Test Case  268 | Error: 0
Test Case  269 | Error: 1
Test Case  270 | Error: 0
Test Case  271 | Error: 1
Test Case  272 | Error: 1
Test Case  273 | Error: 0
Test Case  274 | Error: 1
Test Case  275 | Error: 1
Test Case  276 | Error: 1
Test Case  277 | Error: 0
Test Case  278 | Error: 1
Test Case  279 | Error: 1
Test Case  280 | Error: 1
Test Case  281 | Error: 0
Test Case  282 | Error: 0
Test Case  283 | Error: 0
Test Case  284 | Error: 1
Test Case  285 | Error: 1
Test Case  286 | Error: 0
Test Case  287 | Error: 1
Test Case  288 | Error: 1
Test Case  289 | Error: 1
Test Case  290 | Error: 0
Test Case  291 | Error: 1
Test Case  292 | Error: 1
Test Case  293 | Error: 1
Test Case  294 | Error: 1
Test Case  295 | Error: 1
Test Case  296 | Error: 1
Test Case  297 | Error: 0
Test Case  298 | Error: 1
Test Case  299 | Error: 0
Test Case  300 | Error: 1
Test Case  301 | Error: 0
Test Case  302 | Error: 1
Test Case  303 | Error: 0
Test Case  304 | Error: 1
Test Case  305 | Error: 1
Test Case  306 | Error: 0
Test Case  307 | Error: 1
Test Case  308 | Error: 1
Test Case  309 | Error: 1
Test Case  310 | Error: 0
Test Case  311 | Error: 0
Test Case  312 | Error: 1
Test Case  313 | Error: 0
Test Case  314 | Error: 1
Test Case  315 | Error: 1
Test Case  316 | Error: 0
Test Case  317 | Error: 1
Test Case  318 | Error: 0
Test Case  319 | Error: 1
Test Case  320 | Error: 0
Test Case  321 | Error: 1
Test Case  322 | Error: 1
Test Case  323 | Error: 0
Test Case  324 | Error: 1
Test Case  325 | Error: 0
Test Case  326 | Error: 1
Test Case  327 | Error: 0
Test Case  328 | Error: 0
Test Case  329 | Error: 1
Test Case  330 | Error: 1
Test Case  331 | Error: 1
Test Case  332 | Error: 0
Test Case  333 | Error: 1
Test Case  334 | Error: 0
Test Case  335 | Error: 1
Test Case  336 | Error: 0
Test Case  337 | Error: 0
Test Case  338 | Error: 0
Test Case  339 | Error: 1
Test Case  340 | Error: 0
Test Case  341 | Error: 0
Test Case  342 | Error: 0
Test Case  343 | Error: 1
Test Case  344 | Error: 1
Test Case  345 | Error: 1
Test Case  346 | Error: 1
Test Case  347 | Error: 1
Test Case  348 | Error: 1
Test Case  349 | Error: 1
Test Case  350 | Error: 0
Test Case  351 | Error: 1
Test Case  352 | Error: 0
Test Case  353 | Error: 1
Test Case  354 | Error: 1
Test Case  355 | Error: 1
Test Case  356 | Error: 0
Test Case  357 | Error: 0
Test Case  358 | Error: 0
Test Case  359 | Error: 0
Test Case  360 | Error: 1
Test Case  361 | Error: 0
Test Case  362 | Error: 1
Test Case  363 | Error: 1
Test Case  364 | Error: 1
Test Case  365 | Error: 1
Test Case  366 | Error: 0
Test Case  367 | Error: 1
Test Case  368 | Error: 1
Test Case  369 | Error: 0
Test Case  370 | Error: 1
Test Case  371 | Error: 1
Test Case  372 | Error: 1
Test Case  373 | Error: 0
Test Case  374 | Error: 0
Test Case  375 | Error: 0
Test Case  376 | Error: 0
Test Case  377 | Error: 1
Test Case  378 | Error: 0
Test Case  379 | Error: 1
Test Case  380 | Error: 1
Test Case  381 | Error: 0
Test Case  382 | Error: 1
Test Case  383 | Error: 0
Test Case  384 | Error: 1
Test Case  385 | Error: 0
Test Case  386 | Error: 1
Test Case  387 | Error: 0
Test Case  388 | Error: 0
Test Case  389 | Error: 1
Test Case  390 | Error: 1
Test Case  391 | Error: 1
Test Case  392 | Error: 1
Test Case  393 | Error: 0
Test Case  394 | Error: 1
Test Case  395 | Error: 1
Test Case  396 | Error: 1
Test Case  397 | Error: 1
Test Case  398 | Error: 1
Test Case  399 | Error: 1
Test Case  400 | Error: 1
Test Case  401 | Error: 1
Test Case  402 | Error: 1
Test Case  403 | Error: 1
Test Case  404 | Error: 1
Test Case  405 | Error: 1
Test Case  406 | Error: 1
Test Case  407 | Error: 1
Test Case  408 | Error: 0
Test Case  409 | Error: 1
Test Case  410 | Error: 0
Test Case  411 | Error: 0
Test Case  412 | Error: 0
Test Case  413 | Error: 0
Test Case  414 | Error: 0
Test Case  415 | Error: 0
Test Case  416 | Error: 1
Test Case  417 | Error: 0
Test Case  418 | Error: 0
Test Case  419 | Error: 0
Test Case  420 | Error: 1
Test Case  421 | Error: 0
Test Case  422 | Error: 0
Test Case  423 | Error: 0
Test Case  424 | Error: 1
Test Case  425 | Error: 0
Test Case  426 | Error: 0
Test Case  427 | Error: 1
Test Case  428 | Error: 1
Test Case  429 | Error: 0
Test Case  430 | Error: 1
Test Case  431 | Error: 1
Test Case  432 | Error: 0
Test Case  433 | Error: 1
Test Case  434 | Error: 1
Test Case  435 | Error: 0
Test Case  436 | Error: 1
Test Case  437 | Error: 0
Test Case  438 | Error: 0
Test Case  439 | Error: 1
Test Case  440 | Error: 0
Test Case  441 | Error: 0
Test Case  442 | Error: 1
Test Case  443 | Error: 1
Test Case  444 | Error: 1
Test Case  445 | Error: 0
Test Case  446 | Error: 1
Test Case  447 | Error: 0
Test Case  448 | Error: 0
Test Case  449 | Error: 1
Test Case  450 | Error: 0
Test Case  451 | Error: 1
Test Case  452 | Error: 0
Test Case  453 | Error: 1
Test Case  454 | Error: 1
Test Case  455 | Error: 0
Test Case  456 | Error: 0
Test Case  457 | Error: 0
Test Case  458 | Error: 1
Test Case  459 | Error: 0
Test Case  460 | Error: 1
Test Case  461 | Error: 0
Test Case  462 | Error: 1
Test Case  463 | Error: 0
Test Case  464 | Error: 0
Test Case  465 | Error: 1
Test Case  466 | Error: 0
Test Case  467 | Error: 0
Test Case  468 | Error: 1
Test Case  469 | Error: 1
Test Case  470 | Error: 1
Test Case  471 | Error: 1
Test Case  472 | Error: 1
Test Case  473 | Error: 0
Test Case  474 | Error: 1
Test Case  475 | Error: 1
Test Case  476 | Error: 1
Test Case  477 | Error: 1
Test Case  478 | Error: 0
Test Case  479 | Error: 0
Test Case  480 | Error: 1
Test Case  481 | Error: 1
Test Case  482 | Error: 0
Test Case  483 | Error: 0
Test Case  484 | Error: 1
Test Case  485 | Error: 0
Test Case  486 | Error: 0
Test Case  487 | Error: 0
Test Case  488 | Error: 0
Test Case  489 | Error: 0
Test Case  490 | Error: 0
Test Case  491 | Error: 0
Test Case  492 | Error: 0
Test Case  493 | Error: 0
Test Case  494 | Error: 1
Test Case  495 | Error: 0
Test Case  496 | Error: 1
Test Case  497 | Error: 1
Test Case  498 | Error: 1
Test Case  499 | Error: 0
Test Case  500 | Error: 0
Test Case  501 | Error: 1
Test Case  502 | Error: 1
Test Case  503 | Error: 1
Test Case  504 | Error: 0
Test Case  505 | Error: 1
Test Case  506 | Error: 0
Test Case  507 | Error: 0
Test Case  508 | Error: 1
Test Case  509 | Error: 1
Test Case  510 | Error: 0
Test Case  511 | Error: 1
Test Case  512 | Error: 1
Test Case  513 | Error: 0
Test Case  514 | Error: 0
Test Case  515 | Error: 0
Test Case  516 | Error: 1
Test Case  517 | Error: 0
Test Case  518 | Error: 0
Test Case  519 | Error: 0
Test Case  520 | Error: 1
Test Case  521 | Error: 1
Test Case  522 | Error: 0
Test Case  523 | Error: 0
Test Case  524 | Error: 1
Test Case  525 | Error: 0
Test Case  526 | Error: 1
Test Case  527 | Error: 0
Test Case  528 | Error: 1
Test Case  529 | Error: 0
Test Case  530 | Error: 1
Test Case  531 | Error: 1
Test Case  532 | Error: 1
Test Case  533 | Error: 0
Test Case  534 | Error: 0
Test Case  535 | Error: 1
Test Case  536 | Error: 0
Test Case  537 | Error: 0
Test Case  538 | Error: 0
Test Case  539 | Error: 1
Test Case  540 | Error: 0
Test Case  541 | Error: 0
Test Case  542 | Error: 0
Test Case  543 | Error: 1
Test Case  544 | Error: 0
Test Case  545 | Error: 0
Test Case  546 | Error: 0
Test Case  547 | Error: 0
Test Case  548 | Error: 0
Test Case  549 | Error: 0
Test Case  550 | Error: 0
Test Case  551 | Error: 1
Test Case  552 | Error: 0
Test Case  553 | Error: 0
Test Case  554 | Error: 0
Test Case  555 | Error: 0
Test Case  556 | Error: 1
Test Case  557 | Error: 0
Test Case  558 | Error: 0
Test Case  559 | Error: 0
Test Case  560 | Error: 0
Test Case  561 | Error: 0
Test Case  562 | Error: 0
Test Case  563 | Error: 1
Test Case  564 | Error: 0
Test Case  565 | Error: 0
Test Case  566 | Error: 0
Test Case  567 | Error: 0
Test Case  568 | Error: 0
Test Case  569 | Error: 0
Test Case  570 | Error: 1
Test Case  571 | Error: 1
Test Case  572 | Error: 1
Test Case  573 | Error: 0
Test Case  574 | Error: 1
Test Case  575 | Error: 1
Test Case  576 | Error: 1
Test Case  577 | Error: 0
Test Case  578 | Error: 0
Test Case  579 | Error: 0
Test Case  580 | Error: 1
Test Case  581 | Error: 0
Test Case  582 | Error: 0
Test Case  583 | Error: 0
Test Case  584 | Error: 0
Test Case  585 | Error: 0
Test Case  586 | Error: 1
Test Case  587 | Error: 0
Test Case  588 | Error: 0
Test Case  589 | Error: 1
Test Case  590 | Error: 0
Test Case  591 | Error: 1
Test Case  592 | Error: 1
Test Case  593 | Error: 1
Test Case  594 | Error: 1
Test Case  595 | Error: 0
Test Case  596 | Error: 1
Test Case  597 | Error: 1
Test Case  598 | Error: 1
Test Case  599 | Error: 0
Test Case  600 | Error: 0
Test Case  601 | Error: 0
Test Case  602 | Error: 0
Test Case  603 | Error: 1
Test Case  604 | Error: 0
Test Case  605 | Error: 1
Test Case  606 | Error: 1
Test Case  607 | Error: 0
Test Case  608 | Error: 1
Test Case  609 | Error: 1
Test Case  610 | Error: 0
Test Case  611 | Error: 0
Test Case  612 | Error: 0
Test Case  613 | Error: 1
Test Case  614 | Error: 1
Test Case  615 | Error: 0
Test Case  616 | Error: 1
Test Case  617 | Error: 1
Test Case  618 | Error: 0
Test Case  619 | Error: 1
Test Case  620 | Error: 0
Test Case  621 | Error: 0
Test Case  622 | Error: 0
Test Case  623 | Error: 0
Test Case  624 | Error: 1
Test Case  625 | Error: 1
Test Case  626 | Error: 0
Test Case  627 | Error: 1
Test Case  628 | Error: 0
Test Case  629 | Error: 0
Test Case  630 | Error: 0
Test Case  631 | Error: 0
Test Case  632 | Error: 0
Test Case  633 | Error: 0
Test Case  634 | Error: 0
Test Case  635 | Error: 0
Test Case  636 | Error: 1
Test Case  637 | Error: 0
Test Case  638 | Error: 0
Test Case  639 | Error: 1
Test Case  640 | Error: 0
Test Case  641 | Error: 0
Test Case  642 | Error: 0
Test Case  643 | Error: 1
Test Case  644 | Error: 1
Test Case  645 | Error: 1
Test Case  646 | Error: 0
Test Case  647 | Error: 1
Test Case  648 | Error: 0
Test Case  649 | Error: 0
Test Case  650 | Error: 1
Test Case  651 | Error: 1
Test Case  652 | Error: 0
Test Case  653 | Error: 1
Test Case  654 | Error: 1
Test Case  655 | Error: 1
Test Case  656 | Error: 1
Test Case  657 | Error: 0
Test Case  658 | Error: 0
Test Case  659 | Error: 0
Test Case  660 | Error: 1
Test Case  661 | Error: 0
Test Case  662 | Error: 0
Test Case  663 | Error: 0
Test Case  664 | Error: 1
Test Case  665 | Error: 0
Test Case  666 | Error: 0
Test Case  667 | Error: 0
Test Case  668 | Error: 0
Test Case  669 | Error: 0
Test Case  670 | Error: 0
Test Case  671 | Error: 1
Test Case  672 | Error: 0
Test Case  673 | Error: 1
Test Case  674 | Error: 0
Test Case  675 | Error: 1
Test Case  676 | Error: 0
Test Case  677 | Error: 0
Test Case  678 | Error: 0
Test Case  679 | Error: 1
Test Case  680 | Error: 0
Test Case  681 | Error: 1
Test Case  682 | Error: 0
Test Case  683 | Error: 1
Test Case  684 | Error: 0
Test Case  685 | Error: 0
Test Case  686 | Error: 0
Test Case  687 | Error: 1
Test Case  688 | Error: 0
Test Case  689 | Error: 1
Test Case  690 | Error: 1
Test Case  691 | Error: 0
Test Case  692 | Error: 1
Test Case  693 | Error: 0
Test Case  694 | Error: 0
Test Case  695 | Error: 1
Test Case  696 | Error: 0
Test Case  697 | Error: 1
Test Case  698 | Error: 0
Test Case  699 | Error: 1
Test Case  700 | Error: 0
Test Case  701 | Error: 1
Test Case  702 | Error: 0
Test Case  703 | Error: 0
Test Case  704 | Error: 1
Test Case  705 | Error: 1
Test Case  706 | Error: 0
Test Case  707 | Error: 0
Test Case  708 | Error: 1
Test Case  709 | Error: 0
Test Case  710 | Error: 0
Test Case  711 | Error: 1
Test Case  712 | Error: 0
Test Case  713 | Error: 1
Test Case  714 | Error: 0
Test Case  715 | Error: 1
Test Case  716 | Error: 0
Test Case  717 | Error: 1
Test Case  718 | Error: 1
Test Case  719 | Error: 0
Test Case  720 | Error: 1
Test Case  721 | Error: 0
Test Case  722 | Error: 0
Test Case  723 | Error: 0
Test Case  724 | Error: 1
Test Case  725 | Error: 0
Test Case  726 | Error: 0
Test Case  727 | Error: 0
Test Case  728 | Error: 1
Test Case  729 | Error: 1
Test Case  730 | Error: 1
Test Case  731 | Error: 1
Test Case  732 | Error: 1
Test Case  733 | Error: 1
Test Case  734 | Error: 1
Test Case  735 | Error: 1
Test Case  736 | Error: 1
Test Case  737 | Error: 0
Test Case  738 | Error: 1
Test Case  739 | Error: 1
Test Case  740 | Error: 1
Test Case  741 | Error: 0
Test Case  742 | Error: 1
Test Case  743 | Error: 1
Test Case  744 | Error: 0
Test Case  745 | Error: 1
Test Case  746 | Error: 0
Test Case  747 | Error: 0
Test Case  748 | Error: 0
Test Case  749 | Error: 0
Test Case  750 | Error: 0
Test Case  751 | Error: 1
Test Case  752 | Error: 0
Test Case  753 | Error: 0
Test Case  754 | Error: 0
Test Case  755 | Error: 0
Test Case  756 | Error: 1
Test Case  757 | Error: 1
Test Case  758 | Error: 0
Test Case  759 | Error: 0
Test Case  760 | Error: 0
Test Case  761 | Error: 1
Test Case  762 | Error: 1
Test Case  763 | Error: 0
Test Case  764 | Error: 0
Test Case  765 | Error: 1
Test Case  766 | Error: 0
Test Case  767 | Error: 0
Test Case  768 | Error: 0
Test Case  769 | Error: 1
Test Case  770 | Error: 1
Test Case  771 | Error: 0
Test Case  772 | Error: 1
Test Case  773 | Error: 0
Test Case  774 | Error: 1
Test Case  775 | Error: 0
Test Case  776 | Error: 0
Test Case  777 | Error: 0
Test Case  778 | Error: 0
Test Case  779 | Error: 0
Test Case  780 | Error: 1
Test Case  781 | Error: 0
Test Case  782 | Error: 0
Test Case  783 | Error: 0
Test Case  784 | Error: 1
Test Case  785 | Error: 0
Test Case  786 | Error: 1
Test Case  787 | Error: 1
Test Case  788 | Error: 0
Test Case  789 | Error: 1
Test Case  790 | Error: 0
Test Case  791 | Error: 0
Test Case  792 | Error: 0
Test Case  793 | Error: 1
Test Case  794 | Error: 1
Test Case  795 | Error: 1
Test Case  796 | Error: 0
Test Case  797 | Error: 1
Test Case  798 | Error: 0
Test Case  799 | Error: 1
Test Case  800 | Error: 0
Test Case  801 | Error: 0
Test Case  802 | Error: 0
Test Case  803 | Error: 0
Test Case  804 | Error: 0
Test Case  805 | Error: 1
Test Case  806 | Error: 0
Test Case  807 | Error: 0
Test Case  808 | Error: 0
Test Case  809 | Error: 0
Test Case  810 | Error: 0
Test Case  811 | Error: 0
Test Case  812 | Error: 0
Test Case  813 | Error: 0
Test Case  814 | Error: 1
Test Case  815 | Error: 0
Test Case  816 | Error: 1
Test Case  817 | Error: 1
Test Case  818 | Error: 0
Test Case  819 | Error: 1
Test Case  820 | Error: 0
Test Case  821 | Error: 0
Test Case  822 | Error: 0
Test Case  823 | Error: 0
Test Case  824 | Error: 0
Test Case  825 | Error: 0
Test Case  826 | Error: 1
Test Case  827 | Error: 0
Test Case  828 | Error: 0
Test Case  829 | Error: 1
Test Case  830 | Error: 1
Test Case  831 | Error: 0
Test Case  832 | Error: 0
Test Case  833 | Error: 1
Test Case  834 | Error: 1
Test Case  835 | Error: 0
Test Case  836 | Error: 1
Test Case  837 | Error: 0
Test Case  838 | Error: 0
Test Case  839 | Error: 0
Test Case  840 | Error: 0
Test Case  841 | Error: 0
Test Case  842 | Error: 0
Test Case  843 | Error: 0
Test Case  844 | Error: 0
Test Case  845 | Error: 1
Test Case  846 | Error: 0
Test Case  847 | Error: 1
Test Case  848 | Error: 0
Test Case  849 | Error: 1
Test Case  850 | Error: 1
Test Case  851 | Error: 1
Test Case  852 | Error: 0
Test Case  853 | Error: 0
Test Case  854 | Error: 0
Test Case  855 | Error: 1
Test Case  856 | Error: 1
Test Case  857 | Error: 0
Test Case  858 | Error: 0
Test Case  859 | Error: 0
Test Case  860 | Error: 1
Test Case  861 | Error: 0
Test Case  862 | Error: 1
Test Case  863 | Error: 1
Test Case  864 | Error: 0
Test Case  865 | Error: 1
Test Case  866 | Error: 0
Test Case  867 | Error: 0
Test Case  868 | Error: 1
Test Case  869 | Error: 0
Test Case  870 | Error: 0
Test Case  871 | Error: 0
Test Case  872 | Error: 1
Test Case  873 | Error: 1
Test Case  874 | Error: 0
Test Case  875 | Error: 1
Test Case  876 | Error: 1
Test Case  877 | Error: 0
Test Case  878 | Error: 0
Test Case  879 | Error: 0
Test Case  880 | Error: 0
Test Case  881 | Error: 1
Test Case  882 | Error: 1
Test Case  883 | Error: 0
Test Case  884 | Error: 1
Test Case  885 | Error: 0
Test Case  886 | Error: 1
Test Case  887 | Error: 1
Test Case  888 | Error: 0
Test Case  889 | Error: 0
Test Case  890 | Error: 0
Test Case  891 | Error: 0
Test Case  892 | Error: 0
Test Case  893 | Error: 1
Test Case  894 | Error: 1
Test Case  895 | Error: 0
Test Case  896 | Error: 0
Test Case  897 | Error: 0
Test Case  898 | Error: 0
Test Case  899 | Error: 1
Test Case  900 | Error: 1
Test Case  901 | Error: 1
Test Case  902 | Error: 0
Test Case  903 | Error: 1
Test Case  904 | Error: 0
Test Case  905 | Error: 0
Test Case  906 | Error: 1
Test Case  907 | Error: 0
Test Case  908 | Error: 0
Test Case  909 | Error: 0
Test Case  910 | Error: 0
Test Case  911 | Error: 0
Test Case  912 | Error: 1
Test Case  913 | Error: 1
Test Case  914 | Error: 0
Test Case  915 | Error: 0
Test Case  916 | Error: 0
Test Case  917 | Error: 0
Test Case  918 | Error: 0
Test Case  919 | Error: 1
Test Case  920 | Error: 0
Test Case  921 | Error: 0
Test Case  922 | Error: 1
Test Case  923 | Error: 1
Test Case  924 | Error: 0
Test Case  925 | Error: 1
Test Case  926 | Error: 1
Test Case  927 | Error: 0
Test Case  928 | Error: 1
Test Case  929 | Error: 0
Test Case  930 | Error: 0
Test Case  931 | Error: 0
Test Case  932 | Error: 1
Test Case  933 | Error: 0
Test Case  934 | Error: 0
Test Case  935 | Error: 0
Test Case  936 | Error: 0
Test Case  937 | Error: 1
Test Case  938 | Error: 0
Test Case  939 | Error: 1
Test Case  940 | Error: 0
Test Case  941 | Error: 1
Test Case  942 | Error: 1
Test Case  943 | Error: 1
Test Case  944 | Error: 0
Test Case  945 | Error: 1
Test Case  946 | Error: 1
Test Case  947 | Error: 0
Test Case  948 | Error: 0
Test Case  949 | Error: 1
Test Case  950 | Error: 1
Test Case  951 | Error: 0
Test Case  952 | Error: 1
Test Case  953 | Error: 1
Test Case  954 | Error: 0
Test Case  955 | Error: 0
Test Case  956 | Error: 1
Test Case  957 | Error: 0
Test Case  958 | Error: 0
Test Case  959 | Error: 1
Test Case  960 | Error: 0
Test Case  961 | Error: 1
Test Case  962 | Error: 0
Test Case  963 | Error: 1
Test Case  964 | Error: 0
Test Case  965 | Error: 0
Test Case  966 | Error: 1
Test Case  967 | Error: 1
Test Case  968 | Error: 0
Test Case  969 | Error: 1
Test Case  970 | Error: 0
Test Case  971 | Error: 1
Test Case  972 | Error: 0
Test Case  973 | Error: 1
Test Case  974 | Error: 0
Test Case  975 | Error: 0
Test Case  976 | Error: 0
Test Case  977 | Error: 0
Test Case  978 | Error: 1
Test Case  979 | Error: 1
Test Case  980 | Error: 0
Test Case  981 | Error: 0
Test Case  982 | Error: 0
Test Case  983 | Error: 0
Test Case  984 | Error: 0
Test Case  985 | Error: 0
Test Case  986 | Error: 0
Test Case  987 | Error: 0
Test Case  988 | Error: 0
Test Case  989 | Error: 0
Test Case  990 | Error: 1
Test Case  991 | Error: 0
Test Case  992 | Error: 0
Test Case  993 | Error: 0
Test Case  994 | Error: 0
Test Case  995 | Error: 1
Test Case  996 | Error: 1
Test Case  997 | Error: 1
Test Case  998 | Error: 0
Test Case  999 | Error: 1
;;------------------------------
Outputs of best individual on training cases:
Correct output: 0                   | Program output: 0                  
Correct output: -44                 | Program output: -13                
Correct output: -99                 | Program output: -99                
Correct output: -22                 | Program output: -22                
Correct output: 99                  | Program output: 100                
Correct output: -53                 | Program output: -53                
Correct output: -61                 | Program output: -61                
Correct output: -44                 | Program output: -44                
Correct output: -50                 | Program output: -50                
Correct output: -24                 | Program output: -24                
Correct output: -12                 | Program output: -12                
Correct output: -27                 | Program output: -4                 
Correct output: -10                 | Program output: -10                
Correct output: -78                 | Program output: -78                
Correct output: -37                 | Program output: 35                 
Correct output: 71                  | Program output: 71                 
Correct output: 49                  | Program output: 49                 
Correct output: -10                 | Program output: -10                
Correct output: -27                 | Program output: -27                
Correct output: -38                 | Program output: -38                
Correct output: 37                  | Program output: 45                 
Correct output: 7                   | Program output: 67                 
Correct output: 1                   | Program output:                    
Correct output: 3                   | Program output: 3                  
Correct output: 7                   | Program output: 7                  
Correct output: 32                  | Program output: 32                 
Correct output: 9                   | Program output: 9                  
Correct output: 8                   | Program output: 8                  
Correct output: 2                   | Program output:                    
Correct output: 0                   | Program output: 0                  
Correct output: 24                  | Program output: 97                 
Correct output: 11                  | Program output: 11                 
Correct output: 0                   | Program output: 0                  
Correct output: 1                   | Program output:                    
Correct output: 59                  | Program output: 75                 
Correct output: 42                  | Program output: 65                 
Correct output: 13                  | Program output: 13                 
Correct output: 30                  | Program output: 65                 
Correct output: 11                  | Program output: 35                 
Correct output: 0                   | Program output: 0                  
Correct output: -75                 | Program output: 33                 
Correct output: -94                 | Program output: -33                
Correct output: -63                 | Program output: -17                
Correct output: -52                 | Program output: -3                 
Correct output: -74                 | Program output: 91                 
Correct output: -69                 | Program output: -69                
Correct output: -95                 | Program output: -22                
Correct output: -7                  | Program output: -7                 
Correct output: -93                 | Program output: -93                
Correct output: 12                  | Program output: 7373               
Correct output: -100                | Program output: -62                
Correct output: -22                 | Program output: -22                
Correct output: -68                 | Program output: -68                
Correct output: -76                 | Program output: -76                
Correct output: -10                 | Program output: -10                
Correct output: -69                 | Program output: -69                
Correct output: -43                 | Program output: -43                
Correct output: -54                 | Program output: -15                
Correct output: -78                 | Program output: -78                
Correct output: -63                 | Program output: -63                
Correct output: -52                 | Program output: -34                
Correct output: -92                 | Program output: -92                
Correct output: -93                 | Program output: -93                
Correct output: 13                  | Program output: 13                 
Correct output: -93                 | Program output: -75                
Correct output: -76                 | Program output: -76                
Correct output: -30                 | Program output: -30                
Correct output: 14                  | Program output: 38                 
Correct output: -80                 | Program output: -44                
Correct output: -98                 | Program output: -98                
Correct output: -52                 | Program output: 0                  
Correct output: -72                 | Program output: -72                
Correct output: -82                 | Program output: -82                
Correct output: -90                 | Program output: -90                
Correct output: -71                 | Program output: -39                
Correct output: -5                  | Program output: 78                 
Correct output: -65                 | Program output: -52                
Correct output: -91                 | Program output: 14                 
Correct output: -26                 | Program output: -26                
Correct output: -63                 | Program output: -63                
Correct output: 7                   | Program output: 7                  
Correct output: -99                 | Program output: -99                
Correct output: -90                 | Program output: -90                
Correct output: -56                 | Program output: -56                
Correct output: -95                 | Program output: -78                
Correct output: -73                 | Program output: -26                
Correct output: -68                 | Program output: -68                
Correct output: -72                 | Program output: -72                
Correct output: -95                 | Program output: -69                
Correct output: -57                 | Program output: -57                
Correct output: -65                 | Program output: -37                
Correct output: -98                 | Program output: -98                
Correct output: 8                   | Program output: 8                  
Correct output: -47                 | Program output: -47                
Correct output: -20                 | Program output: -20                
Correct output: -91                 | Program output: -91                
Correct output: -83                 | Program output: -42                
Correct output: -95                 | Program output: -82                
Correct output: -20                 | Program output: -20                
Correct output: -46                 | Program output: -46                
;;******************************
